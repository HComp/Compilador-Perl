Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    SEEK
    PUSH
    LESSLESS
    EOF
    OCT
    COLON
    VALUES
    PLUSGREATER
    ORS
    SORT
    INCREMENTO
    SPLIT
    COMMENT
    KEYS
    POSTINDEX
    LENGTH
    SUB
    LAST
    ELSIF
    RAND
    SLEEP
    HEX
    ANDBW
    WRITE
    REFERENCE
    SIN
    INDEX
    GOTO
    NOTS
    NOT
    NEXT
    CLOSE
    INTERROGATION
    RINDEX
    EXIT
    DISTINT
    CMP
    EXPREGULAR
    SYSTEM
    FORK
    XOR
    UNTIL
    DELETE
    PACK
    LOCAL
    CHOWN
    COMPLEMENT
    CHOP
    RETURN
    POP
    DOT
    EXEC
    PRINT
    DOLLARDOLLAR
    RENAME
    RMDIR
    TELL
    MY
    GUIONDOWN
    PREINDEX
    SELECT
    JOIN
    PLUSLESS
    DECREMENTO
    DEFINED
    EVAL
    REFERENCIAS
    OPEN
    IF
    DIE
    REVERSE
    OR
    EACH
    GREATERGREATER
    ABS
    REFERENCIALISTA
    SHIFT
    SUBSTR
    EXP
    ELSE
    FILENO
    UNLESS
    ORBW
    MKDIR
    UNSHIFT
    ANDS
    SQRT
    READ
    ARROW
    INT
    LOG

Grammar

Rule 0     S' -> program
Rule 1     program -> declaration_list
Rule 2     declaration_list -> declaration declaration_list
Rule 3     declaration_list -> declaration
Rule 4     declaration -> header_declaration
Rule 5     declaration -> var_declaration
Rule 6     declaration -> ciclos
Rule 7     header_declaration -> USE ID SEMICOLON
Rule 8     header_declaration -> REQUIRE ID SEMICOLON
Rule 9     var_declaration -> PESOS ID SEMICOLON
Rule 10    var_declaration -> PESOS ID EQUAL E SEMICOLON
Rule 11    var_declaration -> PESOS ID EQUAL typevar SEMICOLON
Rule 12    var_declaration -> ARROBA ID SEMICOLON
Rule 13    var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON
Rule 14    var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON
Rule 15    var_declaration -> PORCENTAJE ID SEMICOLON
Rule 16    var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON
Rule 17    var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON
Rule 18    var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON
Rule 19    lista2 -> typevar COMMA typevar COMMA lista2
Rule 20    lista2 -> typevar COMMA LPAREN lista RPAREN COMMA lista2
Rule 21    lista2 -> typevar COMMA LBRACKET lista RBRACKET COMMA lista2
Rule 22    lista2 -> typevar COMMA typevar
Rule 23    lista2 -> typevar COMMA LPAREN lista RPAREN
Rule 24    lista2 -> typevar COMMA LBRACKET lista RBRACKET
Rule 25    lista1 -> typevar EQUALGREATER typevar COMMA lista1
Rule 26    lista1 -> typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1
Rule 27    lista1 -> typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
Rule 28    lista1 -> typevar EQUALGREATER typevar
Rule 29    lista1 -> typevar EQUALGREATER LPAREN lista RPAREN
Rule 30    lista1 -> typevar EQUALGREATER LBRACKET lista RBRACKET
Rule 31    lista -> typevar COMMA lista
Rule 32    lista -> typevar
Rule 33    typevar -> CADENA
Rule 34    typevar -> CADENAA
Rule 35    typevar -> ENTERO
Rule 36    typevar -> OCTAL
Rule 37    typevar -> HEXADECIMAL
Rule 38    E -> E PLUS T
Rule 39    E -> E MINUS T
Rule 40    E -> T
Rule 41    T -> T TIMES F
Rule 42    T -> T DIVIDE F
Rule 43    T -> F
Rule 44    F -> PESOS ID
Rule 45    F -> PESOS ID LBRACKET ENTERO RBRACKET
Rule 46    F -> ENTERO
Rule 47    F -> PESOS ID LBLOCK typevar RBLOCK
Rule 48    F -> LPAREN E RPAREN
Rule 49    ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK sentencias_ciclos RBLOCK
Rule 50    ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK sentencias_ciclos RBLOCK
Rule 51    ciclos -> WHILE LPAREN cond RPAREN LBLOCK sentencias_ciclos RBLOCK
Rule 52    sentencias_ciclos -> var_declaration sentencias_ciclos
Rule 53    sentencias_ciclos -> ciclos sentencias_ciclos
Rule 54    sentencias_ciclos -> var_declaration
Rule 55    sentencias_ciclos -> ciclos
Rule 56    sent_for -> PESOS ID
Rule 57    sent_for -> PESOS ID EQUAL ENTERO
Rule 58    cond -> typevar LESS typevar
Rule 59    cond -> typevar GREATER typevar
Rule 60    cond -> typevar ISEQUAL typevar
Rule 61    cond -> typevar LESSEQUAL typevar
Rule 62    cond -> typevar GREATEREQUAL typevar
Rule 63    cond -> typevar DEQUAL typevar
Rule 64    cond -> typevar AND typevar
Rule 65    incdec -> PLUSPLUS
Rule 66    incdec -> MINUSMINUS

Terminals, with rules where they appear

ABS                  : 
AND                  : 64
ANDBW                : 
ANDS                 : 
ARROBA               : 12 13 14 14 50
ARROW                : 
CADENA               : 33
CADENAA              : 34
CHOP                 : 
CHOWN                : 
CLOSE                : 
CMP                  : 
COLON                : 
COMMA                : 19 19 20 20 21 21 22 23 24 25 26 27 31
COMMENT              : 
COMPLEMENT           : 
DECREMENTO           : 
DEFINED              : 
DELETE               : 
DEQUAL               : 63
DIE                  : 
DISTINT              : 
DIVIDE               : 42
DOLLARDOLLAR         : 
DOT                  : 
EACH                 : 
ELSE                 : 
ELSIF                : 
ENTERO               : 35 45 46 57
EOF                  : 
EQUAL                : 10 11 13 14 16 17 18 57
EQUALGREATER         : 25 26 27 28 29 30
EVAL                 : 
EXEC                 : 
EXIT                 : 
EXP                  : 
EXPREGULAR           : 
FILENO               : 
FOR                  : 49
FOREACH              : 50
FORK                 : 
GOTO                 : 
GREATER              : 59
GREATEREQUAL         : 62
GREATERGREATER       : 
GUIONDOWN            : 
HEX                  : 
HEXADECIMAL          : 37
ID                   : 7 8 9 10 11 12 13 14 14 15 16 17 18 18 44 45 47 49 50 50 56 57
IF                   : 
INCREMENTO           : 
INDEX                : 
INT                  : 
INTERROGATION        : 
ISEQUAL              : 60
JOIN                 : 
KEYS                 : 
LAST                 : 
LBLOCK               : 16 47 49 50 51
LBRACKET             : 21 24 27 30 45
LENGTH               : 
LESS                 : 58
LESSEQUAL            : 61
LESSLESS             : 
LOCAL                : 
LOG                  : 
LPAREN               : 13 17 20 23 26 29 48 49 50 51
MINUS                : 39
MINUSMINUS           : 66
MKDIR                : 
MY                   : 
NEXT                 : 
NOT                  : 
NOTS                 : 
OCT                  : 
OCTAL                : 36
OPEN                 : 
OR                   : 
ORBW                 : 
ORS                  : 
PACK                 : 
PESOS                : 9 10 11 44 45 47 49 50 56 57
PLUS                 : 38
PLUSGREATER          : 
PLUSLESS             : 
PLUSPLUS             : 65
POP                  : 
PORCENTAJE           : 15 16 17 18 18
POSTINDEX            : 
PREINDEX             : 
PRINT                : 
PUSH                 : 
RAND                 : 
RBLOCK               : 16 47 49 50 51
RBRACKET             : 21 24 27 30 45
READ                 : 
REFERENCE            : 
REFERENCIALISTA      : 
REFERENCIAS          : 
RENAME               : 
REQUIRE              : 8
RETURN               : 
REVERSE              : 
RINDEX               : 
RMDIR                : 
RPAREN               : 13 17 20 23 26 29 48 49 50 51
SEEK                 : 
SELECT               : 
SEMICOLON            : 7 8 9 10 11 12 13 14 15 16 17 18 49 49
SHIFT                : 
SIN                  : 
SLEEP                : 
SORT                 : 
SPLIT                : 
SQRT                 : 
SUB                  : 
SUBSTR               : 
SYSTEM               : 
TELL                 : 
TIMES                : 41
UNLESS               : 
UNSHIFT              : 
UNTIL                : 
USE                  : 7
VALUES               : 
WHILE                : 51
WRITE                : 
XOR                  : 
error                : 

Nonterminals, with rules where they appear

E                    : 10 38 39 48
F                    : 41 42 43
T                    : 38 39 40 41 42
ciclos               : 6 53 55
cond                 : 49 51
declaration          : 2 3
declaration_list     : 1 2
header_declaration   : 4
incdec               : 49
lista                : 13 20 21 23 24 26 27 29 30 31
lista1               : 16 25 26 27
lista2               : 17 19 20 21
program              : 0
sent_for             : 49
sentencias_ciclos    : 49 50 51 52 53
typevar              : 11 19 19 20 21 22 22 23 24 25 25 26 27 28 28 29 30 31 32 47 58 58 59 59 60 60 61 61 62 62 63 63 64 64
var_declaration      : 5 52 54

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declaration_list
    (2) declaration_list -> . declaration declaration_list
    (3) declaration_list -> . declaration
    (4) declaration -> . header_declaration
    (5) declaration -> . var_declaration
    (6) declaration -> . ciclos
    (7) header_declaration -> . USE ID SEMICOLON
    (8) header_declaration -> . REQUIRE ID SEMICOLON
    (9) var_declaration -> . PESOS ID SEMICOLON
    (10) var_declaration -> . PESOS ID EQUAL E SEMICOLON
    (11) var_declaration -> . PESOS ID EQUAL typevar SEMICOLON
    (12) var_declaration -> . ARROBA ID SEMICOLON
    (13) var_declaration -> . ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON
    (14) var_declaration -> . ARROBA ID EQUAL ARROBA ID SEMICOLON
    (15) var_declaration -> . PORCENTAJE ID SEMICOLON
    (16) var_declaration -> . PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON
    (17) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON
    (18) var_declaration -> . PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON
    (49) ciclos -> . FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK sentencias_ciclos RBLOCK
    (50) ciclos -> . FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK sentencias_ciclos RBLOCK
    (51) ciclos -> . WHILE LPAREN cond RPAREN LBLOCK sentencias_ciclos RBLOCK

    USE             shift and go to state 13
    REQUIRE         shift and go to state 2
    PESOS           shift and go to state 9
    ARROBA          shift and go to state 10
    PORCENTAJE      shift and go to state 3
    FOR             shift and go to state 5
    FOREACH         shift and go to state 11
    WHILE           shift and go to state 14

    var_declaration                shift and go to state 8
    ciclos                         shift and go to state 1
    declaration_list               shift and go to state 7
    declaration                    shift and go to state 4
    header_declaration             shift and go to state 6
    program                        shift and go to state 12

state 1

    (6) declaration -> ciclos .

    USE             reduce using rule 6 (declaration -> ciclos .)
    REQUIRE         reduce using rule 6 (declaration -> ciclos .)
    PESOS           reduce using rule 6 (declaration -> ciclos .)
    ARROBA          reduce using rule 6 (declaration -> ciclos .)
    PORCENTAJE      reduce using rule 6 (declaration -> ciclos .)
    FOR             reduce using rule 6 (declaration -> ciclos .)
    FOREACH         reduce using rule 6 (declaration -> ciclos .)
    WHILE           reduce using rule 6 (declaration -> ciclos .)
    $end            reduce using rule 6 (declaration -> ciclos .)


state 2

    (8) header_declaration -> REQUIRE . ID SEMICOLON

    ID              shift and go to state 15


state 3

    (15) var_declaration -> PORCENTAJE . ID SEMICOLON
    (16) var_declaration -> PORCENTAJE . ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON
    (17) var_declaration -> PORCENTAJE . ID EQUAL LPAREN lista2 RPAREN SEMICOLON
    (18) var_declaration -> PORCENTAJE . ID EQUAL PORCENTAJE ID SEMICOLON

    ID              shift and go to state 16


state 4

    (2) declaration_list -> declaration . declaration_list
    (3) declaration_list -> declaration .
    (2) declaration_list -> . declaration declaration_list
    (3) declaration_list -> . declaration
    (4) declaration -> . header_declaration
    (5) declaration -> . var_declaration
    (6) declaration -> . ciclos
    (7) header_declaration -> . USE ID SEMICOLON
    (8) header_declaration -> . REQUIRE ID SEMICOLON
    (9) var_declaration -> . PESOS ID SEMICOLON
    (10) var_declaration -> . PESOS ID EQUAL E SEMICOLON
    (11) var_declaration -> . PESOS ID EQUAL typevar SEMICOLON
    (12) var_declaration -> . ARROBA ID SEMICOLON
    (13) var_declaration -> . ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON
    (14) var_declaration -> . ARROBA ID EQUAL ARROBA ID SEMICOLON
    (15) var_declaration -> . PORCENTAJE ID SEMICOLON
    (16) var_declaration -> . PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON
    (17) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON
    (18) var_declaration -> . PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON
    (49) ciclos -> . FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK sentencias_ciclos RBLOCK
    (50) ciclos -> . FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK sentencias_ciclos RBLOCK
    (51) ciclos -> . WHILE LPAREN cond RPAREN LBLOCK sentencias_ciclos RBLOCK

    $end            reduce using rule 3 (declaration_list -> declaration .)
    USE             shift and go to state 13
    REQUIRE         shift and go to state 2
    PESOS           shift and go to state 9
    ARROBA          shift and go to state 10
    PORCENTAJE      shift and go to state 3
    FOR             shift and go to state 5
    FOREACH         shift and go to state 11
    WHILE           shift and go to state 14

    declaration_list               shift and go to state 17
    ciclos                         shift and go to state 1
    declaration                    shift and go to state 4
    header_declaration             shift and go to state 6
    var_declaration                shift and go to state 8

state 5

    (49) ciclos -> FOR . LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK sentencias_ciclos RBLOCK

    LPAREN          shift and go to state 18


state 6

    (4) declaration -> header_declaration .

    USE             reduce using rule 4 (declaration -> header_declaration .)
    REQUIRE         reduce using rule 4 (declaration -> header_declaration .)
    PESOS           reduce using rule 4 (declaration -> header_declaration .)
    ARROBA          reduce using rule 4 (declaration -> header_declaration .)
    PORCENTAJE      reduce using rule 4 (declaration -> header_declaration .)
    FOR             reduce using rule 4 (declaration -> header_declaration .)
    FOREACH         reduce using rule 4 (declaration -> header_declaration .)
    WHILE           reduce using rule 4 (declaration -> header_declaration .)
    $end            reduce using rule 4 (declaration -> header_declaration .)


state 7

    (1) program -> declaration_list .

    $end            reduce using rule 1 (program -> declaration_list .)


state 8

    (5) declaration -> var_declaration .

    USE             reduce using rule 5 (declaration -> var_declaration .)
    REQUIRE         reduce using rule 5 (declaration -> var_declaration .)
    PESOS           reduce using rule 5 (declaration -> var_declaration .)
    ARROBA          reduce using rule 5 (declaration -> var_declaration .)
    PORCENTAJE      reduce using rule 5 (declaration -> var_declaration .)
    FOR             reduce using rule 5 (declaration -> var_declaration .)
    FOREACH         reduce using rule 5 (declaration -> var_declaration .)
    WHILE           reduce using rule 5 (declaration -> var_declaration .)
    $end            reduce using rule 5 (declaration -> var_declaration .)


state 9

    (9) var_declaration -> PESOS . ID SEMICOLON
    (10) var_declaration -> PESOS . ID EQUAL E SEMICOLON
    (11) var_declaration -> PESOS . ID EQUAL typevar SEMICOLON

    ID              shift and go to state 19


state 10

    (12) var_declaration -> ARROBA . ID SEMICOLON
    (13) var_declaration -> ARROBA . ID EQUAL LPAREN lista RPAREN SEMICOLON
    (14) var_declaration -> ARROBA . ID EQUAL ARROBA ID SEMICOLON

    ID              shift and go to state 20


state 11

    (50) ciclos -> FOREACH . PESOS ID LPAREN ARROBA ID RPAREN LBLOCK sentencias_ciclos RBLOCK

    PESOS           shift and go to state 21


state 12

    (0) S' -> program .



state 13

    (7) header_declaration -> USE . ID SEMICOLON

    ID              shift and go to state 22


state 14

    (51) ciclos -> WHILE . LPAREN cond RPAREN LBLOCK sentencias_ciclos RBLOCK

    LPAREN          shift and go to state 23


state 15

    (8) header_declaration -> REQUIRE ID . SEMICOLON

    SEMICOLON       shift and go to state 24


state 16

    (15) var_declaration -> PORCENTAJE ID . SEMICOLON
    (16) var_declaration -> PORCENTAJE ID . EQUAL LBLOCK lista1 RBLOCK SEMICOLON
    (17) var_declaration -> PORCENTAJE ID . EQUAL LPAREN lista2 RPAREN SEMICOLON
    (18) var_declaration -> PORCENTAJE ID . EQUAL PORCENTAJE ID SEMICOLON

    SEMICOLON       shift and go to state 26
    EQUAL           shift and go to state 25


state 17

    (2) declaration_list -> declaration declaration_list .

    $end            reduce using rule 2 (declaration_list -> declaration declaration_list .)


state 18

    (49) ciclos -> FOR LPAREN . sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK sentencias_ciclos RBLOCK
    (56) sent_for -> . PESOS ID
    (57) sent_for -> . PESOS ID EQUAL ENTERO

    PESOS           shift and go to state 27

    sent_for                       shift and go to state 28

state 19

    (9) var_declaration -> PESOS ID . SEMICOLON
    (10) var_declaration -> PESOS ID . EQUAL E SEMICOLON
    (11) var_declaration -> PESOS ID . EQUAL typevar SEMICOLON

    SEMICOLON       shift and go to state 30
    EQUAL           shift and go to state 29


state 20

    (12) var_declaration -> ARROBA ID . SEMICOLON
    (13) var_declaration -> ARROBA ID . EQUAL LPAREN lista RPAREN SEMICOLON
    (14) var_declaration -> ARROBA ID . EQUAL ARROBA ID SEMICOLON

    SEMICOLON       shift and go to state 32
    EQUAL           shift and go to state 31


state 21

    (50) ciclos -> FOREACH PESOS . ID LPAREN ARROBA ID RPAREN LBLOCK sentencias_ciclos RBLOCK

    ID              shift and go to state 33


state 22

    (7) header_declaration -> USE ID . SEMICOLON

    SEMICOLON       shift and go to state 34


state 23

    (51) ciclos -> WHILE LPAREN . cond RPAREN LBLOCK sentencias_ciclos RBLOCK
    (58) cond -> . typevar LESS typevar
    (59) cond -> . typevar GREATER typevar
    (60) cond -> . typevar ISEQUAL typevar
    (61) cond -> . typevar LESSEQUAL typevar
    (62) cond -> . typevar GREATEREQUAL typevar
    (63) cond -> . typevar DEQUAL typevar
    (64) cond -> . typevar AND typevar
    (33) typevar -> . CADENA
    (34) typevar -> . CADENAA
    (35) typevar -> . ENTERO
    (36) typevar -> . OCTAL
    (37) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 39
    CADENAA         shift and go to state 37
    ENTERO          shift and go to state 38
    OCTAL           shift and go to state 40
    HEXADECIMAL     shift and go to state 35

    typevar                        shift and go to state 36
    cond                           shift and go to state 41

state 24

    (8) header_declaration -> REQUIRE ID SEMICOLON .

    USE             reduce using rule 8 (header_declaration -> REQUIRE ID SEMICOLON .)
    REQUIRE         reduce using rule 8 (header_declaration -> REQUIRE ID SEMICOLON .)
    PESOS           reduce using rule 8 (header_declaration -> REQUIRE ID SEMICOLON .)
    ARROBA          reduce using rule 8 (header_declaration -> REQUIRE ID SEMICOLON .)
    PORCENTAJE      reduce using rule 8 (header_declaration -> REQUIRE ID SEMICOLON .)
    FOR             reduce using rule 8 (header_declaration -> REQUIRE ID SEMICOLON .)
    FOREACH         reduce using rule 8 (header_declaration -> REQUIRE ID SEMICOLON .)
    WHILE           reduce using rule 8 (header_declaration -> REQUIRE ID SEMICOLON .)
    $end            reduce using rule 8 (header_declaration -> REQUIRE ID SEMICOLON .)


state 25

    (16) var_declaration -> PORCENTAJE ID EQUAL . LBLOCK lista1 RBLOCK SEMICOLON
    (17) var_declaration -> PORCENTAJE ID EQUAL . LPAREN lista2 RPAREN SEMICOLON
    (18) var_declaration -> PORCENTAJE ID EQUAL . PORCENTAJE ID SEMICOLON

    LBLOCK          shift and go to state 44
    LPAREN          shift and go to state 42
    PORCENTAJE      shift and go to state 43


state 26

    (15) var_declaration -> PORCENTAJE ID SEMICOLON .

    PESOS           reduce using rule 15 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    ARROBA          reduce using rule 15 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    PORCENTAJE      reduce using rule 15 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    FOR             reduce using rule 15 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    FOREACH         reduce using rule 15 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    WHILE           reduce using rule 15 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    RBLOCK          reduce using rule 15 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    USE             reduce using rule 15 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    REQUIRE         reduce using rule 15 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    $end            reduce using rule 15 (var_declaration -> PORCENTAJE ID SEMICOLON .)


state 27

    (56) sent_for -> PESOS . ID
    (57) sent_for -> PESOS . ID EQUAL ENTERO

    ID              shift and go to state 45


state 28

    (49) ciclos -> FOR LPAREN sent_for . SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK sentencias_ciclos RBLOCK

    SEMICOLON       shift and go to state 46


state 29

    (10) var_declaration -> PESOS ID EQUAL . E SEMICOLON
    (11) var_declaration -> PESOS ID EQUAL . typevar SEMICOLON
    (38) E -> . E PLUS T
    (39) E -> . E MINUS T
    (40) E -> . T
    (33) typevar -> . CADENA
    (34) typevar -> . CADENAA
    (35) typevar -> . ENTERO
    (36) typevar -> . OCTAL
    (37) typevar -> . HEXADECIMAL
    (41) T -> . T TIMES F
    (42) T -> . T DIVIDE F
    (43) T -> . F
    (44) F -> . PESOS ID
    (45) F -> . PESOS ID LBRACKET ENTERO RBRACKET
    (46) F -> . ENTERO
    (47) F -> . PESOS ID LBLOCK typevar RBLOCK
    (48) F -> . LPAREN E RPAREN

    CADENA          shift and go to state 39
    CADENAA         shift and go to state 37
    ENTERO          shift and go to state 52
    OCTAL           shift and go to state 40
    HEXADECIMAL     shift and go to state 35
    PESOS           shift and go to state 51
    LPAREN          shift and go to state 50

    E                              shift and go to state 48
    typevar                        shift and go to state 47
    F                              shift and go to state 49
    T                              shift and go to state 53

state 30

    (9) var_declaration -> PESOS ID SEMICOLON .

    PESOS           reduce using rule 9 (var_declaration -> PESOS ID SEMICOLON .)
    ARROBA          reduce using rule 9 (var_declaration -> PESOS ID SEMICOLON .)
    PORCENTAJE      reduce using rule 9 (var_declaration -> PESOS ID SEMICOLON .)
    FOR             reduce using rule 9 (var_declaration -> PESOS ID SEMICOLON .)
    FOREACH         reduce using rule 9 (var_declaration -> PESOS ID SEMICOLON .)
    WHILE           reduce using rule 9 (var_declaration -> PESOS ID SEMICOLON .)
    RBLOCK          reduce using rule 9 (var_declaration -> PESOS ID SEMICOLON .)
    USE             reduce using rule 9 (var_declaration -> PESOS ID SEMICOLON .)
    REQUIRE         reduce using rule 9 (var_declaration -> PESOS ID SEMICOLON .)
    $end            reduce using rule 9 (var_declaration -> PESOS ID SEMICOLON .)


state 31

    (13) var_declaration -> ARROBA ID EQUAL . LPAREN lista RPAREN SEMICOLON
    (14) var_declaration -> ARROBA ID EQUAL . ARROBA ID SEMICOLON

    LPAREN          shift and go to state 54
    ARROBA          shift and go to state 55


state 32

    (12) var_declaration -> ARROBA ID SEMICOLON .

    PESOS           reduce using rule 12 (var_declaration -> ARROBA ID SEMICOLON .)
    ARROBA          reduce using rule 12 (var_declaration -> ARROBA ID SEMICOLON .)
    PORCENTAJE      reduce using rule 12 (var_declaration -> ARROBA ID SEMICOLON .)
    FOR             reduce using rule 12 (var_declaration -> ARROBA ID SEMICOLON .)
    FOREACH         reduce using rule 12 (var_declaration -> ARROBA ID SEMICOLON .)
    WHILE           reduce using rule 12 (var_declaration -> ARROBA ID SEMICOLON .)
    RBLOCK          reduce using rule 12 (var_declaration -> ARROBA ID SEMICOLON .)
    USE             reduce using rule 12 (var_declaration -> ARROBA ID SEMICOLON .)
    REQUIRE         reduce using rule 12 (var_declaration -> ARROBA ID SEMICOLON .)
    $end            reduce using rule 12 (var_declaration -> ARROBA ID SEMICOLON .)


state 33

    (50) ciclos -> FOREACH PESOS ID . LPAREN ARROBA ID RPAREN LBLOCK sentencias_ciclos RBLOCK

    LPAREN          shift and go to state 56


state 34

    (7) header_declaration -> USE ID SEMICOLON .

    USE             reduce using rule 7 (header_declaration -> USE ID SEMICOLON .)
    REQUIRE         reduce using rule 7 (header_declaration -> USE ID SEMICOLON .)
    PESOS           reduce using rule 7 (header_declaration -> USE ID SEMICOLON .)
    ARROBA          reduce using rule 7 (header_declaration -> USE ID SEMICOLON .)
    PORCENTAJE      reduce using rule 7 (header_declaration -> USE ID SEMICOLON .)
    FOR             reduce using rule 7 (header_declaration -> USE ID SEMICOLON .)
    FOREACH         reduce using rule 7 (header_declaration -> USE ID SEMICOLON .)
    WHILE           reduce using rule 7 (header_declaration -> USE ID SEMICOLON .)
    $end            reduce using rule 7 (header_declaration -> USE ID SEMICOLON .)


state 35

    (37) typevar -> HEXADECIMAL .

    COMMA           reduce using rule 37 (typevar -> HEXADECIMAL .)
    LESS            reduce using rule 37 (typevar -> HEXADECIMAL .)
    GREATER         reduce using rule 37 (typevar -> HEXADECIMAL .)
    ISEQUAL         reduce using rule 37 (typevar -> HEXADECIMAL .)
    LESSEQUAL       reduce using rule 37 (typevar -> HEXADECIMAL .)
    GREATEREQUAL    reduce using rule 37 (typevar -> HEXADECIMAL .)
    DEQUAL          reduce using rule 37 (typevar -> HEXADECIMAL .)
    AND             reduce using rule 37 (typevar -> HEXADECIMAL .)
    RPAREN          reduce using rule 37 (typevar -> HEXADECIMAL .)
    SEMICOLON       reduce using rule 37 (typevar -> HEXADECIMAL .)
    EQUALGREATER    reduce using rule 37 (typevar -> HEXADECIMAL .)
    RBLOCK          reduce using rule 37 (typevar -> HEXADECIMAL .)
    RBRACKET        reduce using rule 37 (typevar -> HEXADECIMAL .)


state 36

    (58) cond -> typevar . LESS typevar
    (59) cond -> typevar . GREATER typevar
    (60) cond -> typevar . ISEQUAL typevar
    (61) cond -> typevar . LESSEQUAL typevar
    (62) cond -> typevar . GREATEREQUAL typevar
    (63) cond -> typevar . DEQUAL typevar
    (64) cond -> typevar . AND typevar

    LESS            shift and go to state 61
    GREATER         shift and go to state 57
    ISEQUAL         shift and go to state 63
    LESSEQUAL       shift and go to state 59
    GREATEREQUAL    shift and go to state 62
    DEQUAL          shift and go to state 60
    AND             shift and go to state 58


state 37

    (34) typevar -> CADENAA .

    COMMA           reduce using rule 34 (typevar -> CADENAA .)
    LESS            reduce using rule 34 (typevar -> CADENAA .)
    GREATER         reduce using rule 34 (typevar -> CADENAA .)
    ISEQUAL         reduce using rule 34 (typevar -> CADENAA .)
    LESSEQUAL       reduce using rule 34 (typevar -> CADENAA .)
    GREATEREQUAL    reduce using rule 34 (typevar -> CADENAA .)
    DEQUAL          reduce using rule 34 (typevar -> CADENAA .)
    AND             reduce using rule 34 (typevar -> CADENAA .)
    RPAREN          reduce using rule 34 (typevar -> CADENAA .)
    SEMICOLON       reduce using rule 34 (typevar -> CADENAA .)
    EQUALGREATER    reduce using rule 34 (typevar -> CADENAA .)
    RBLOCK          reduce using rule 34 (typevar -> CADENAA .)
    RBRACKET        reduce using rule 34 (typevar -> CADENAA .)


state 38

    (35) typevar -> ENTERO .

    COMMA           reduce using rule 35 (typevar -> ENTERO .)
    LESS            reduce using rule 35 (typevar -> ENTERO .)
    GREATER         reduce using rule 35 (typevar -> ENTERO .)
    ISEQUAL         reduce using rule 35 (typevar -> ENTERO .)
    LESSEQUAL       reduce using rule 35 (typevar -> ENTERO .)
    GREATEREQUAL    reduce using rule 35 (typevar -> ENTERO .)
    DEQUAL          reduce using rule 35 (typevar -> ENTERO .)
    AND             reduce using rule 35 (typevar -> ENTERO .)
    RPAREN          reduce using rule 35 (typevar -> ENTERO .)
    SEMICOLON       reduce using rule 35 (typevar -> ENTERO .)
    EQUALGREATER    reduce using rule 35 (typevar -> ENTERO .)
    RBLOCK          reduce using rule 35 (typevar -> ENTERO .)
    RBRACKET        reduce using rule 35 (typevar -> ENTERO .)


state 39

    (33) typevar -> CADENA .

    COMMA           reduce using rule 33 (typevar -> CADENA .)
    LESS            reduce using rule 33 (typevar -> CADENA .)
    GREATER         reduce using rule 33 (typevar -> CADENA .)
    ISEQUAL         reduce using rule 33 (typevar -> CADENA .)
    LESSEQUAL       reduce using rule 33 (typevar -> CADENA .)
    GREATEREQUAL    reduce using rule 33 (typevar -> CADENA .)
    DEQUAL          reduce using rule 33 (typevar -> CADENA .)
    AND             reduce using rule 33 (typevar -> CADENA .)
    RPAREN          reduce using rule 33 (typevar -> CADENA .)
    SEMICOLON       reduce using rule 33 (typevar -> CADENA .)
    EQUALGREATER    reduce using rule 33 (typevar -> CADENA .)
    RBLOCK          reduce using rule 33 (typevar -> CADENA .)
    RBRACKET        reduce using rule 33 (typevar -> CADENA .)


state 40

    (36) typevar -> OCTAL .

    COMMA           reduce using rule 36 (typevar -> OCTAL .)
    LESS            reduce using rule 36 (typevar -> OCTAL .)
    GREATER         reduce using rule 36 (typevar -> OCTAL .)
    ISEQUAL         reduce using rule 36 (typevar -> OCTAL .)
    LESSEQUAL       reduce using rule 36 (typevar -> OCTAL .)
    GREATEREQUAL    reduce using rule 36 (typevar -> OCTAL .)
    DEQUAL          reduce using rule 36 (typevar -> OCTAL .)
    AND             reduce using rule 36 (typevar -> OCTAL .)
    RPAREN          reduce using rule 36 (typevar -> OCTAL .)
    SEMICOLON       reduce using rule 36 (typevar -> OCTAL .)
    EQUALGREATER    reduce using rule 36 (typevar -> OCTAL .)
    RBLOCK          reduce using rule 36 (typevar -> OCTAL .)
    RBRACKET        reduce using rule 36 (typevar -> OCTAL .)


state 41

    (51) ciclos -> WHILE LPAREN cond . RPAREN LBLOCK sentencias_ciclos RBLOCK

    RPAREN          shift and go to state 64


state 42

    (17) var_declaration -> PORCENTAJE ID EQUAL LPAREN . lista2 RPAREN SEMICOLON
    (19) lista2 -> . typevar COMMA typevar COMMA lista2
    (20) lista2 -> . typevar COMMA LPAREN lista RPAREN COMMA lista2
    (21) lista2 -> . typevar COMMA LBRACKET lista RBRACKET COMMA lista2
    (22) lista2 -> . typevar COMMA typevar
    (23) lista2 -> . typevar COMMA LPAREN lista RPAREN
    (24) lista2 -> . typevar COMMA LBRACKET lista RBRACKET
    (33) typevar -> . CADENA
    (34) typevar -> . CADENAA
    (35) typevar -> . ENTERO
    (36) typevar -> . OCTAL
    (37) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 39
    CADENAA         shift and go to state 37
    ENTERO          shift and go to state 38
    OCTAL           shift and go to state 40
    HEXADECIMAL     shift and go to state 35

    typevar                        shift and go to state 65
    lista2                         shift and go to state 66

state 43

    (18) var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE . ID SEMICOLON

    ID              shift and go to state 67


state 44

    (16) var_declaration -> PORCENTAJE ID EQUAL LBLOCK . lista1 RBLOCK SEMICOLON
    (25) lista1 -> . typevar EQUALGREATER typevar COMMA lista1
    (26) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (27) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (28) lista1 -> . typevar EQUALGREATER typevar
    (29) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN
    (30) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET
    (33) typevar -> . CADENA
    (34) typevar -> . CADENAA
    (35) typevar -> . ENTERO
    (36) typevar -> . OCTAL
    (37) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 39
    CADENAA         shift and go to state 37
    ENTERO          shift and go to state 38
    OCTAL           shift and go to state 40
    HEXADECIMAL     shift and go to state 35

    typevar                        shift and go to state 68
    lista1                         shift and go to state 69

state 45

    (56) sent_for -> PESOS ID .
    (57) sent_for -> PESOS ID . EQUAL ENTERO

    SEMICOLON       reduce using rule 56 (sent_for -> PESOS ID .)
    EQUAL           shift and go to state 70


state 46

    (49) ciclos -> FOR LPAREN sent_for SEMICOLON . cond SEMICOLON PESOS ID incdec RPAREN LBLOCK sentencias_ciclos RBLOCK
    (58) cond -> . typevar LESS typevar
    (59) cond -> . typevar GREATER typevar
    (60) cond -> . typevar ISEQUAL typevar
    (61) cond -> . typevar LESSEQUAL typevar
    (62) cond -> . typevar GREATEREQUAL typevar
    (63) cond -> . typevar DEQUAL typevar
    (64) cond -> . typevar AND typevar
    (33) typevar -> . CADENA
    (34) typevar -> . CADENAA
    (35) typevar -> . ENTERO
    (36) typevar -> . OCTAL
    (37) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 39
    CADENAA         shift and go to state 37
    ENTERO          shift and go to state 38
    OCTAL           shift and go to state 40
    HEXADECIMAL     shift and go to state 35

    typevar                        shift and go to state 36
    cond                           shift and go to state 71

state 47

    (11) var_declaration -> PESOS ID EQUAL typevar . SEMICOLON

    SEMICOLON       shift and go to state 72


state 48

    (10) var_declaration -> PESOS ID EQUAL E . SEMICOLON
    (38) E -> E . PLUS T
    (39) E -> E . MINUS T

    SEMICOLON       shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75


state 49

    (43) T -> F .

    TIMES           reduce using rule 43 (T -> F .)
    DIVIDE          reduce using rule 43 (T -> F .)
    SEMICOLON       reduce using rule 43 (T -> F .)
    PLUS            reduce using rule 43 (T -> F .)
    MINUS           reduce using rule 43 (T -> F .)
    RPAREN          reduce using rule 43 (T -> F .)


state 50

    (48) F -> LPAREN . E RPAREN
    (38) E -> . E PLUS T
    (39) E -> . E MINUS T
    (40) E -> . T
    (41) T -> . T TIMES F
    (42) T -> . T DIVIDE F
    (43) T -> . F
    (44) F -> . PESOS ID
    (45) F -> . PESOS ID LBRACKET ENTERO RBRACKET
    (46) F -> . ENTERO
    (47) F -> . PESOS ID LBLOCK typevar RBLOCK
    (48) F -> . LPAREN E RPAREN

    PESOS           shift and go to state 51
    ENTERO          shift and go to state 76
    LPAREN          shift and go to state 50

    E                              shift and go to state 77
    F                              shift and go to state 49
    T                              shift and go to state 53

state 51

    (44) F -> PESOS . ID
    (45) F -> PESOS . ID LBRACKET ENTERO RBRACKET
    (47) F -> PESOS . ID LBLOCK typevar RBLOCK

    ID              shift and go to state 78


state 52

    (35) typevar -> ENTERO .
    (46) F -> ENTERO .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 35 (typevar -> ENTERO .)
    SEMICOLON       reduce using rule 35 (typevar -> ENTERO .)
    TIMES           reduce using rule 46 (F -> ENTERO .)
    DIVIDE          reduce using rule 46 (F -> ENTERO .)
    PLUS            reduce using rule 46 (F -> ENTERO .)
    MINUS           reduce using rule 46 (F -> ENTERO .)

  ! SEMICOLON       [ reduce using rule 46 (F -> ENTERO .) ]


state 53

    (40) E -> T .
    (41) T -> T . TIMES F
    (42) T -> T . DIVIDE F

    RPAREN          reduce using rule 40 (E -> T .)
    PLUS            reduce using rule 40 (E -> T .)
    MINUS           reduce using rule 40 (E -> T .)
    SEMICOLON       reduce using rule 40 (E -> T .)
    TIMES           shift and go to state 80
    DIVIDE          shift and go to state 79


state 54

    (13) var_declaration -> ARROBA ID EQUAL LPAREN . lista RPAREN SEMICOLON
    (31) lista -> . typevar COMMA lista
    (32) lista -> . typevar
    (33) typevar -> . CADENA
    (34) typevar -> . CADENAA
    (35) typevar -> . ENTERO
    (36) typevar -> . OCTAL
    (37) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 39
    CADENAA         shift and go to state 37
    ENTERO          shift and go to state 38
    OCTAL           shift and go to state 40
    HEXADECIMAL     shift and go to state 35

    typevar                        shift and go to state 82
    lista                          shift and go to state 81

state 55

    (14) var_declaration -> ARROBA ID EQUAL ARROBA . ID SEMICOLON

    ID              shift and go to state 83


state 56

    (50) ciclos -> FOREACH PESOS ID LPAREN . ARROBA ID RPAREN LBLOCK sentencias_ciclos RBLOCK

    ARROBA          shift and go to state 84


state 57

    (59) cond -> typevar GREATER . typevar
    (33) typevar -> . CADENA
    (34) typevar -> . CADENAA
    (35) typevar -> . ENTERO
    (36) typevar -> . OCTAL
    (37) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 39
    CADENAA         shift and go to state 37
    ENTERO          shift and go to state 38
    OCTAL           shift and go to state 40
    HEXADECIMAL     shift and go to state 35

    typevar                        shift and go to state 85

state 58

    (64) cond -> typevar AND . typevar
    (33) typevar -> . CADENA
    (34) typevar -> . CADENAA
    (35) typevar -> . ENTERO
    (36) typevar -> . OCTAL
    (37) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 39
    CADENAA         shift and go to state 37
    ENTERO          shift and go to state 38
    OCTAL           shift and go to state 40
    HEXADECIMAL     shift and go to state 35

    typevar                        shift and go to state 86

state 59

    (61) cond -> typevar LESSEQUAL . typevar
    (33) typevar -> . CADENA
    (34) typevar -> . CADENAA
    (35) typevar -> . ENTERO
    (36) typevar -> . OCTAL
    (37) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 39
    CADENAA         shift and go to state 37
    ENTERO          shift and go to state 38
    OCTAL           shift and go to state 40
    HEXADECIMAL     shift and go to state 35

    typevar                        shift and go to state 87

state 60

    (63) cond -> typevar DEQUAL . typevar
    (33) typevar -> . CADENA
    (34) typevar -> . CADENAA
    (35) typevar -> . ENTERO
    (36) typevar -> . OCTAL
    (37) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 39
    CADENAA         shift and go to state 37
    ENTERO          shift and go to state 38
    OCTAL           shift and go to state 40
    HEXADECIMAL     shift and go to state 35

    typevar                        shift and go to state 88

state 61

    (58) cond -> typevar LESS . typevar
    (33) typevar -> . CADENA
    (34) typevar -> . CADENAA
    (35) typevar -> . ENTERO
    (36) typevar -> . OCTAL
    (37) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 39
    CADENAA         shift and go to state 37
    ENTERO          shift and go to state 38
    OCTAL           shift and go to state 40
    HEXADECIMAL     shift and go to state 35

    typevar                        shift and go to state 89

state 62

    (62) cond -> typevar GREATEREQUAL . typevar
    (33) typevar -> . CADENA
    (34) typevar -> . CADENAA
    (35) typevar -> . ENTERO
    (36) typevar -> . OCTAL
    (37) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 39
    CADENAA         shift and go to state 37
    ENTERO          shift and go to state 38
    OCTAL           shift and go to state 40
    HEXADECIMAL     shift and go to state 35

    typevar                        shift and go to state 90

state 63

    (60) cond -> typevar ISEQUAL . typevar
    (33) typevar -> . CADENA
    (34) typevar -> . CADENAA
    (35) typevar -> . ENTERO
    (36) typevar -> . OCTAL
    (37) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 39
    CADENAA         shift and go to state 37
    ENTERO          shift and go to state 38
    OCTAL           shift and go to state 40
    HEXADECIMAL     shift and go to state 35

    typevar                        shift and go to state 91

state 64

    (51) ciclos -> WHILE LPAREN cond RPAREN . LBLOCK sentencias_ciclos RBLOCK

    LBLOCK          shift and go to state 92


state 65

    (19) lista2 -> typevar . COMMA typevar COMMA lista2
    (20) lista2 -> typevar . COMMA LPAREN lista RPAREN COMMA lista2
    (21) lista2 -> typevar . COMMA LBRACKET lista RBRACKET COMMA lista2
    (22) lista2 -> typevar . COMMA typevar
    (23) lista2 -> typevar . COMMA LPAREN lista RPAREN
    (24) lista2 -> typevar . COMMA LBRACKET lista RBRACKET

    COMMA           shift and go to state 93


state 66

    (17) var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 . RPAREN SEMICOLON

    RPAREN          shift and go to state 94


state 67

    (18) var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID . SEMICOLON

    SEMICOLON       shift and go to state 95


state 68

    (25) lista1 -> typevar . EQUALGREATER typevar COMMA lista1
    (26) lista1 -> typevar . EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (27) lista1 -> typevar . EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (28) lista1 -> typevar . EQUALGREATER typevar
    (29) lista1 -> typevar . EQUALGREATER LPAREN lista RPAREN
    (30) lista1 -> typevar . EQUALGREATER LBRACKET lista RBRACKET

    EQUALGREATER    shift and go to state 96


state 69

    (16) var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 . RBLOCK SEMICOLON

    RBLOCK          shift and go to state 97


state 70

    (57) sent_for -> PESOS ID EQUAL . ENTERO

    ENTERO          shift and go to state 98


state 71

    (49) ciclos -> FOR LPAREN sent_for SEMICOLON cond . SEMICOLON PESOS ID incdec RPAREN LBLOCK sentencias_ciclos RBLOCK

    SEMICOLON       shift and go to state 99


state 72

    (11) var_declaration -> PESOS ID EQUAL typevar SEMICOLON .

    PESOS           reduce using rule 11 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    ARROBA          reduce using rule 11 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    PORCENTAJE      reduce using rule 11 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    FOR             reduce using rule 11 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    FOREACH         reduce using rule 11 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    WHILE           reduce using rule 11 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    RBLOCK          reduce using rule 11 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    USE             reduce using rule 11 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    REQUIRE         reduce using rule 11 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    $end            reduce using rule 11 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)


state 73

    (10) var_declaration -> PESOS ID EQUAL E SEMICOLON .

    PESOS           reduce using rule 10 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    ARROBA          reduce using rule 10 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    PORCENTAJE      reduce using rule 10 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    FOR             reduce using rule 10 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    FOREACH         reduce using rule 10 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    WHILE           reduce using rule 10 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    RBLOCK          reduce using rule 10 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    USE             reduce using rule 10 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    REQUIRE         reduce using rule 10 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    $end            reduce using rule 10 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)


state 74

    (38) E -> E PLUS . T
    (41) T -> . T TIMES F
    (42) T -> . T DIVIDE F
    (43) T -> . F
    (44) F -> . PESOS ID
    (45) F -> . PESOS ID LBRACKET ENTERO RBRACKET
    (46) F -> . ENTERO
    (47) F -> . PESOS ID LBLOCK typevar RBLOCK
    (48) F -> . LPAREN E RPAREN

    PESOS           shift and go to state 51
    ENTERO          shift and go to state 76
    LPAREN          shift and go to state 50

    F                              shift and go to state 49
    T                              shift and go to state 100

state 75

    (39) E -> E MINUS . T
    (41) T -> . T TIMES F
    (42) T -> . T DIVIDE F
    (43) T -> . F
    (44) F -> . PESOS ID
    (45) F -> . PESOS ID LBRACKET ENTERO RBRACKET
    (46) F -> . ENTERO
    (47) F -> . PESOS ID LBLOCK typevar RBLOCK
    (48) F -> . LPAREN E RPAREN

    PESOS           shift and go to state 51
    ENTERO          shift and go to state 76
    LPAREN          shift and go to state 50

    F                              shift and go to state 49
    T                              shift and go to state 101

state 76

    (46) F -> ENTERO .

    TIMES           reduce using rule 46 (F -> ENTERO .)
    DIVIDE          reduce using rule 46 (F -> ENTERO .)
    RPAREN          reduce using rule 46 (F -> ENTERO .)
    PLUS            reduce using rule 46 (F -> ENTERO .)
    MINUS           reduce using rule 46 (F -> ENTERO .)
    SEMICOLON       reduce using rule 46 (F -> ENTERO .)


state 77

    (48) F -> LPAREN E . RPAREN
    (38) E -> E . PLUS T
    (39) E -> E . MINUS T

    RPAREN          shift and go to state 102
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75


state 78

    (44) F -> PESOS ID .
    (45) F -> PESOS ID . LBRACKET ENTERO RBRACKET
    (47) F -> PESOS ID . LBLOCK typevar RBLOCK

    TIMES           reduce using rule 44 (F -> PESOS ID .)
    DIVIDE          reduce using rule 44 (F -> PESOS ID .)
    SEMICOLON       reduce using rule 44 (F -> PESOS ID .)
    PLUS            reduce using rule 44 (F -> PESOS ID .)
    MINUS           reduce using rule 44 (F -> PESOS ID .)
    RPAREN          reduce using rule 44 (F -> PESOS ID .)
    LBRACKET        shift and go to state 103
    LBLOCK          shift and go to state 104


state 79

    (42) T -> T DIVIDE . F
    (44) F -> . PESOS ID
    (45) F -> . PESOS ID LBRACKET ENTERO RBRACKET
    (46) F -> . ENTERO
    (47) F -> . PESOS ID LBLOCK typevar RBLOCK
    (48) F -> . LPAREN E RPAREN

    PESOS           shift and go to state 51
    ENTERO          shift and go to state 76
    LPAREN          shift and go to state 50

    F                              shift and go to state 105

state 80

    (41) T -> T TIMES . F
    (44) F -> . PESOS ID
    (45) F -> . PESOS ID LBRACKET ENTERO RBRACKET
    (46) F -> . ENTERO
    (47) F -> . PESOS ID LBLOCK typevar RBLOCK
    (48) F -> . LPAREN E RPAREN

    PESOS           shift and go to state 51
    ENTERO          shift and go to state 76
    LPAREN          shift and go to state 50

    F                              shift and go to state 106

state 81

    (13) var_declaration -> ARROBA ID EQUAL LPAREN lista . RPAREN SEMICOLON

    RPAREN          shift and go to state 107


state 82

    (31) lista -> typevar . COMMA lista
    (32) lista -> typevar .

    COMMA           shift and go to state 108
    RPAREN          reduce using rule 32 (lista -> typevar .)
    RBRACKET        reduce using rule 32 (lista -> typevar .)


state 83

    (14) var_declaration -> ARROBA ID EQUAL ARROBA ID . SEMICOLON

    SEMICOLON       shift and go to state 109


state 84

    (50) ciclos -> FOREACH PESOS ID LPAREN ARROBA . ID RPAREN LBLOCK sentencias_ciclos RBLOCK

    ID              shift and go to state 110


state 85

    (59) cond -> typevar GREATER typevar .

    SEMICOLON       reduce using rule 59 (cond -> typevar GREATER typevar .)
    RPAREN          reduce using rule 59 (cond -> typevar GREATER typevar .)


state 86

    (64) cond -> typevar AND typevar .

    SEMICOLON       reduce using rule 64 (cond -> typevar AND typevar .)
    RPAREN          reduce using rule 64 (cond -> typevar AND typevar .)


state 87

    (61) cond -> typevar LESSEQUAL typevar .

    SEMICOLON       reduce using rule 61 (cond -> typevar LESSEQUAL typevar .)
    RPAREN          reduce using rule 61 (cond -> typevar LESSEQUAL typevar .)


state 88

    (63) cond -> typevar DEQUAL typevar .

    SEMICOLON       reduce using rule 63 (cond -> typevar DEQUAL typevar .)
    RPAREN          reduce using rule 63 (cond -> typevar DEQUAL typevar .)


state 89

    (58) cond -> typevar LESS typevar .

    SEMICOLON       reduce using rule 58 (cond -> typevar LESS typevar .)
    RPAREN          reduce using rule 58 (cond -> typevar LESS typevar .)


state 90

    (62) cond -> typevar GREATEREQUAL typevar .

    SEMICOLON       reduce using rule 62 (cond -> typevar GREATEREQUAL typevar .)
    RPAREN          reduce using rule 62 (cond -> typevar GREATEREQUAL typevar .)


state 91

    (60) cond -> typevar ISEQUAL typevar .

    SEMICOLON       reduce using rule 60 (cond -> typevar ISEQUAL typevar .)
    RPAREN          reduce using rule 60 (cond -> typevar ISEQUAL typevar .)


state 92

    (51) ciclos -> WHILE LPAREN cond RPAREN LBLOCK . sentencias_ciclos RBLOCK
    (52) sentencias_ciclos -> . var_declaration sentencias_ciclos
    (53) sentencias_ciclos -> . ciclos sentencias_ciclos
    (54) sentencias_ciclos -> . var_declaration
    (55) sentencias_ciclos -> . ciclos
    (9) var_declaration -> . PESOS ID SEMICOLON
    (10) var_declaration -> . PESOS ID EQUAL E SEMICOLON
    (11) var_declaration -> . PESOS ID EQUAL typevar SEMICOLON
    (12) var_declaration -> . ARROBA ID SEMICOLON
    (13) var_declaration -> . ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON
    (14) var_declaration -> . ARROBA ID EQUAL ARROBA ID SEMICOLON
    (15) var_declaration -> . PORCENTAJE ID SEMICOLON
    (16) var_declaration -> . PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON
    (17) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON
    (18) var_declaration -> . PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON
    (49) ciclos -> . FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK sentencias_ciclos RBLOCK
    (50) ciclos -> . FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK sentencias_ciclos RBLOCK
    (51) ciclos -> . WHILE LPAREN cond RPAREN LBLOCK sentencias_ciclos RBLOCK

    PESOS           shift and go to state 9
    ARROBA          shift and go to state 10
    PORCENTAJE      shift and go to state 3
    FOR             shift and go to state 5
    FOREACH         shift and go to state 11
    WHILE           shift and go to state 14

    var_declaration                shift and go to state 112
    sentencias_ciclos              shift and go to state 113
    ciclos                         shift and go to state 111

state 93

    (19) lista2 -> typevar COMMA . typevar COMMA lista2
    (20) lista2 -> typevar COMMA . LPAREN lista RPAREN COMMA lista2
    (21) lista2 -> typevar COMMA . LBRACKET lista RBRACKET COMMA lista2
    (22) lista2 -> typevar COMMA . typevar
    (23) lista2 -> typevar COMMA . LPAREN lista RPAREN
    (24) lista2 -> typevar COMMA . LBRACKET lista RBRACKET
    (33) typevar -> . CADENA
    (34) typevar -> . CADENAA
    (35) typevar -> . ENTERO
    (36) typevar -> . OCTAL
    (37) typevar -> . HEXADECIMAL

    LPAREN          shift and go to state 114
    LBRACKET        shift and go to state 116
    CADENA          shift and go to state 39
    CADENAA         shift and go to state 37
    ENTERO          shift and go to state 38
    OCTAL           shift and go to state 40
    HEXADECIMAL     shift and go to state 35

    typevar                        shift and go to state 115

state 94

    (17) var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 117


state 95

    (18) var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .

    PESOS           reduce using rule 18 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    ARROBA          reduce using rule 18 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    PORCENTAJE      reduce using rule 18 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    FOR             reduce using rule 18 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    FOREACH         reduce using rule 18 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    WHILE           reduce using rule 18 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    RBLOCK          reduce using rule 18 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    USE             reduce using rule 18 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    REQUIRE         reduce using rule 18 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    $end            reduce using rule 18 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)


state 96

    (25) lista1 -> typevar EQUALGREATER . typevar COMMA lista1
    (26) lista1 -> typevar EQUALGREATER . LPAREN lista RPAREN COMMA lista1
    (27) lista1 -> typevar EQUALGREATER . LBRACKET lista RBRACKET COMMA lista1
    (28) lista1 -> typevar EQUALGREATER . typevar
    (29) lista1 -> typevar EQUALGREATER . LPAREN lista RPAREN
    (30) lista1 -> typevar EQUALGREATER . LBRACKET lista RBRACKET
    (33) typevar -> . CADENA
    (34) typevar -> . CADENAA
    (35) typevar -> . ENTERO
    (36) typevar -> . OCTAL
    (37) typevar -> . HEXADECIMAL

    LPAREN          shift and go to state 118
    LBRACKET        shift and go to state 120
    CADENA          shift and go to state 39
    CADENAA         shift and go to state 37
    ENTERO          shift and go to state 38
    OCTAL           shift and go to state 40
    HEXADECIMAL     shift and go to state 35

    typevar                        shift and go to state 119

state 97

    (16) var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK . SEMICOLON

    SEMICOLON       shift and go to state 121


state 98

    (57) sent_for -> PESOS ID EQUAL ENTERO .

    SEMICOLON       reduce using rule 57 (sent_for -> PESOS ID EQUAL ENTERO .)


state 99

    (49) ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON . PESOS ID incdec RPAREN LBLOCK sentencias_ciclos RBLOCK

    PESOS           shift and go to state 122


state 100

    (38) E -> E PLUS T .
    (41) T -> T . TIMES F
    (42) T -> T . DIVIDE F

    RPAREN          reduce using rule 38 (E -> E PLUS T .)
    PLUS            reduce using rule 38 (E -> E PLUS T .)
    MINUS           reduce using rule 38 (E -> E PLUS T .)
    SEMICOLON       reduce using rule 38 (E -> E PLUS T .)
    TIMES           shift and go to state 80
    DIVIDE          shift and go to state 79


state 101

    (39) E -> E MINUS T .
    (41) T -> T . TIMES F
    (42) T -> T . DIVIDE F

    RPAREN          reduce using rule 39 (E -> E MINUS T .)
    PLUS            reduce using rule 39 (E -> E MINUS T .)
    MINUS           reduce using rule 39 (E -> E MINUS T .)
    SEMICOLON       reduce using rule 39 (E -> E MINUS T .)
    TIMES           shift and go to state 80
    DIVIDE          shift and go to state 79


state 102

    (48) F -> LPAREN E RPAREN .

    TIMES           reduce using rule 48 (F -> LPAREN E RPAREN .)
    DIVIDE          reduce using rule 48 (F -> LPAREN E RPAREN .)
    SEMICOLON       reduce using rule 48 (F -> LPAREN E RPAREN .)
    PLUS            reduce using rule 48 (F -> LPAREN E RPAREN .)
    MINUS           reduce using rule 48 (F -> LPAREN E RPAREN .)
    RPAREN          reduce using rule 48 (F -> LPAREN E RPAREN .)


state 103

    (45) F -> PESOS ID LBRACKET . ENTERO RBRACKET

    ENTERO          shift and go to state 123


state 104

    (47) F -> PESOS ID LBLOCK . typevar RBLOCK
    (33) typevar -> . CADENA
    (34) typevar -> . CADENAA
    (35) typevar -> . ENTERO
    (36) typevar -> . OCTAL
    (37) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 39
    CADENAA         shift and go to state 37
    ENTERO          shift and go to state 38
    OCTAL           shift and go to state 40
    HEXADECIMAL     shift and go to state 35

    typevar                        shift and go to state 124

state 105

    (42) T -> T DIVIDE F .

    TIMES           reduce using rule 42 (T -> T DIVIDE F .)
    DIVIDE          reduce using rule 42 (T -> T DIVIDE F .)
    SEMICOLON       reduce using rule 42 (T -> T DIVIDE F .)
    PLUS            reduce using rule 42 (T -> T DIVIDE F .)
    MINUS           reduce using rule 42 (T -> T DIVIDE F .)
    RPAREN          reduce using rule 42 (T -> T DIVIDE F .)


state 106

    (41) T -> T TIMES F .

    TIMES           reduce using rule 41 (T -> T TIMES F .)
    DIVIDE          reduce using rule 41 (T -> T TIMES F .)
    SEMICOLON       reduce using rule 41 (T -> T TIMES F .)
    PLUS            reduce using rule 41 (T -> T TIMES F .)
    MINUS           reduce using rule 41 (T -> T TIMES F .)
    RPAREN          reduce using rule 41 (T -> T TIMES F .)


state 107

    (13) var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 125


state 108

    (31) lista -> typevar COMMA . lista
    (31) lista -> . typevar COMMA lista
    (32) lista -> . typevar
    (33) typevar -> . CADENA
    (34) typevar -> . CADENAA
    (35) typevar -> . ENTERO
    (36) typevar -> . OCTAL
    (37) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 39
    CADENAA         shift and go to state 37
    ENTERO          shift and go to state 38
    OCTAL           shift and go to state 40
    HEXADECIMAL     shift and go to state 35

    typevar                        shift and go to state 82
    lista                          shift and go to state 126

state 109

    (14) var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .

    PESOS           reduce using rule 14 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    ARROBA          reduce using rule 14 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    PORCENTAJE      reduce using rule 14 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    FOR             reduce using rule 14 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    FOREACH         reduce using rule 14 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    WHILE           reduce using rule 14 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    RBLOCK          reduce using rule 14 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    USE             reduce using rule 14 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    REQUIRE         reduce using rule 14 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    $end            reduce using rule 14 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)


state 110

    (50) ciclos -> FOREACH PESOS ID LPAREN ARROBA ID . RPAREN LBLOCK sentencias_ciclos RBLOCK

    RPAREN          shift and go to state 127


state 111

    (53) sentencias_ciclos -> ciclos . sentencias_ciclos
    (55) sentencias_ciclos -> ciclos .
    (52) sentencias_ciclos -> . var_declaration sentencias_ciclos
    (53) sentencias_ciclos -> . ciclos sentencias_ciclos
    (54) sentencias_ciclos -> . var_declaration
    (55) sentencias_ciclos -> . ciclos
    (9) var_declaration -> . PESOS ID SEMICOLON
    (10) var_declaration -> . PESOS ID EQUAL E SEMICOLON
    (11) var_declaration -> . PESOS ID EQUAL typevar SEMICOLON
    (12) var_declaration -> . ARROBA ID SEMICOLON
    (13) var_declaration -> . ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON
    (14) var_declaration -> . ARROBA ID EQUAL ARROBA ID SEMICOLON
    (15) var_declaration -> . PORCENTAJE ID SEMICOLON
    (16) var_declaration -> . PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON
    (17) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON
    (18) var_declaration -> . PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON
    (49) ciclos -> . FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK sentencias_ciclos RBLOCK
    (50) ciclos -> . FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK sentencias_ciclos RBLOCK
    (51) ciclos -> . WHILE LPAREN cond RPAREN LBLOCK sentencias_ciclos RBLOCK

    RBLOCK          reduce using rule 55 (sentencias_ciclos -> ciclos .)
    PESOS           shift and go to state 9
    ARROBA          shift and go to state 10
    PORCENTAJE      shift and go to state 3
    FOR             shift and go to state 5
    FOREACH         shift and go to state 11
    WHILE           shift and go to state 14

    var_declaration                shift and go to state 112
    sentencias_ciclos              shift and go to state 128
    ciclos                         shift and go to state 111

state 112

    (52) sentencias_ciclos -> var_declaration . sentencias_ciclos
    (54) sentencias_ciclos -> var_declaration .
    (52) sentencias_ciclos -> . var_declaration sentencias_ciclos
    (53) sentencias_ciclos -> . ciclos sentencias_ciclos
    (54) sentencias_ciclos -> . var_declaration
    (55) sentencias_ciclos -> . ciclos
    (9) var_declaration -> . PESOS ID SEMICOLON
    (10) var_declaration -> . PESOS ID EQUAL E SEMICOLON
    (11) var_declaration -> . PESOS ID EQUAL typevar SEMICOLON
    (12) var_declaration -> . ARROBA ID SEMICOLON
    (13) var_declaration -> . ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON
    (14) var_declaration -> . ARROBA ID EQUAL ARROBA ID SEMICOLON
    (15) var_declaration -> . PORCENTAJE ID SEMICOLON
    (16) var_declaration -> . PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON
    (17) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON
    (18) var_declaration -> . PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON
    (49) ciclos -> . FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK sentencias_ciclos RBLOCK
    (50) ciclos -> . FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK sentencias_ciclos RBLOCK
    (51) ciclos -> . WHILE LPAREN cond RPAREN LBLOCK sentencias_ciclos RBLOCK

    RBLOCK          reduce using rule 54 (sentencias_ciclos -> var_declaration .)
    PESOS           shift and go to state 9
    ARROBA          shift and go to state 10
    PORCENTAJE      shift and go to state 3
    FOR             shift and go to state 5
    FOREACH         shift and go to state 11
    WHILE           shift and go to state 14

    var_declaration                shift and go to state 112
    sentencias_ciclos              shift and go to state 129
    ciclos                         shift and go to state 111

state 113

    (51) ciclos -> WHILE LPAREN cond RPAREN LBLOCK sentencias_ciclos . RBLOCK

    RBLOCK          shift and go to state 130


state 114

    (20) lista2 -> typevar COMMA LPAREN . lista RPAREN COMMA lista2
    (23) lista2 -> typevar COMMA LPAREN . lista RPAREN
    (31) lista -> . typevar COMMA lista
    (32) lista -> . typevar
    (33) typevar -> . CADENA
    (34) typevar -> . CADENAA
    (35) typevar -> . ENTERO
    (36) typevar -> . OCTAL
    (37) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 39
    CADENAA         shift and go to state 37
    ENTERO          shift and go to state 38
    OCTAL           shift and go to state 40
    HEXADECIMAL     shift and go to state 35

    typevar                        shift and go to state 82
    lista                          shift and go to state 131

state 115

    (19) lista2 -> typevar COMMA typevar . COMMA lista2
    (22) lista2 -> typevar COMMA typevar .

    COMMA           shift and go to state 132
    RPAREN          reduce using rule 22 (lista2 -> typevar COMMA typevar .)


state 116

    (21) lista2 -> typevar COMMA LBRACKET . lista RBRACKET COMMA lista2
    (24) lista2 -> typevar COMMA LBRACKET . lista RBRACKET
    (31) lista -> . typevar COMMA lista
    (32) lista -> . typevar
    (33) typevar -> . CADENA
    (34) typevar -> . CADENAA
    (35) typevar -> . ENTERO
    (36) typevar -> . OCTAL
    (37) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 39
    CADENAA         shift and go to state 37
    ENTERO          shift and go to state 38
    OCTAL           shift and go to state 40
    HEXADECIMAL     shift and go to state 35

    typevar                        shift and go to state 82
    lista                          shift and go to state 133

state 117

    (17) var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .

    PESOS           reduce using rule 17 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    ARROBA          reduce using rule 17 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    PORCENTAJE      reduce using rule 17 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    FOR             reduce using rule 17 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    FOREACH         reduce using rule 17 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    WHILE           reduce using rule 17 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    RBLOCK          reduce using rule 17 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    USE             reduce using rule 17 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    REQUIRE         reduce using rule 17 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    $end            reduce using rule 17 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)


state 118

    (26) lista1 -> typevar EQUALGREATER LPAREN . lista RPAREN COMMA lista1
    (29) lista1 -> typevar EQUALGREATER LPAREN . lista RPAREN
    (31) lista -> . typevar COMMA lista
    (32) lista -> . typevar
    (33) typevar -> . CADENA
    (34) typevar -> . CADENAA
    (35) typevar -> . ENTERO
    (36) typevar -> . OCTAL
    (37) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 39
    CADENAA         shift and go to state 37
    ENTERO          shift and go to state 38
    OCTAL           shift and go to state 40
    HEXADECIMAL     shift and go to state 35

    typevar                        shift and go to state 82
    lista                          shift and go to state 134

state 119

    (25) lista1 -> typevar EQUALGREATER typevar . COMMA lista1
    (28) lista1 -> typevar EQUALGREATER typevar .

    COMMA           shift and go to state 135
    RBLOCK          reduce using rule 28 (lista1 -> typevar EQUALGREATER typevar .)


state 120

    (27) lista1 -> typevar EQUALGREATER LBRACKET . lista RBRACKET COMMA lista1
    (30) lista1 -> typevar EQUALGREATER LBRACKET . lista RBRACKET
    (31) lista -> . typevar COMMA lista
    (32) lista -> . typevar
    (33) typevar -> . CADENA
    (34) typevar -> . CADENAA
    (35) typevar -> . ENTERO
    (36) typevar -> . OCTAL
    (37) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 39
    CADENAA         shift and go to state 37
    ENTERO          shift and go to state 38
    OCTAL           shift and go to state 40
    HEXADECIMAL     shift and go to state 35

    typevar                        shift and go to state 82
    lista                          shift and go to state 136

state 121

    (16) var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .

    PESOS           reduce using rule 16 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    ARROBA          reduce using rule 16 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    PORCENTAJE      reduce using rule 16 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    FOR             reduce using rule 16 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    FOREACH         reduce using rule 16 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    WHILE           reduce using rule 16 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    RBLOCK          reduce using rule 16 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    USE             reduce using rule 16 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    REQUIRE         reduce using rule 16 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    $end            reduce using rule 16 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)


state 122

    (49) ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS . ID incdec RPAREN LBLOCK sentencias_ciclos RBLOCK

    ID              shift and go to state 137


state 123

    (45) F -> PESOS ID LBRACKET ENTERO . RBRACKET

    RBRACKET        shift and go to state 138


state 124

    (47) F -> PESOS ID LBLOCK typevar . RBLOCK

    RBLOCK          shift and go to state 139


state 125

    (13) var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .

    PESOS           reduce using rule 13 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    ARROBA          reduce using rule 13 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    PORCENTAJE      reduce using rule 13 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    FOR             reduce using rule 13 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    FOREACH         reduce using rule 13 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    WHILE           reduce using rule 13 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    RBLOCK          reduce using rule 13 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    USE             reduce using rule 13 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    REQUIRE         reduce using rule 13 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    $end            reduce using rule 13 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)


state 126

    (31) lista -> typevar COMMA lista .

    RPAREN          reduce using rule 31 (lista -> typevar COMMA lista .)
    RBRACKET        reduce using rule 31 (lista -> typevar COMMA lista .)


state 127

    (50) ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN . LBLOCK sentencias_ciclos RBLOCK

    LBLOCK          shift and go to state 140


state 128

    (53) sentencias_ciclos -> ciclos sentencias_ciclos .

    RBLOCK          reduce using rule 53 (sentencias_ciclos -> ciclos sentencias_ciclos .)


state 129

    (52) sentencias_ciclos -> var_declaration sentencias_ciclos .

    RBLOCK          reduce using rule 52 (sentencias_ciclos -> var_declaration sentencias_ciclos .)


state 130

    (51) ciclos -> WHILE LPAREN cond RPAREN LBLOCK sentencias_ciclos RBLOCK .

    PESOS           reduce using rule 51 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK sentencias_ciclos RBLOCK .)
    ARROBA          reduce using rule 51 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK sentencias_ciclos RBLOCK .)
    PORCENTAJE      reduce using rule 51 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK sentencias_ciclos RBLOCK .)
    FOR             reduce using rule 51 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK sentencias_ciclos RBLOCK .)
    FOREACH         reduce using rule 51 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK sentencias_ciclos RBLOCK .)
    WHILE           reduce using rule 51 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK sentencias_ciclos RBLOCK .)
    RBLOCK          reduce using rule 51 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK sentencias_ciclos RBLOCK .)
    USE             reduce using rule 51 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK sentencias_ciclos RBLOCK .)
    REQUIRE         reduce using rule 51 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK sentencias_ciclos RBLOCK .)
    $end            reduce using rule 51 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK sentencias_ciclos RBLOCK .)


state 131

    (20) lista2 -> typevar COMMA LPAREN lista . RPAREN COMMA lista2
    (23) lista2 -> typevar COMMA LPAREN lista . RPAREN

    RPAREN          shift and go to state 141


state 132

    (19) lista2 -> typevar COMMA typevar COMMA . lista2
    (19) lista2 -> . typevar COMMA typevar COMMA lista2
    (20) lista2 -> . typevar COMMA LPAREN lista RPAREN COMMA lista2
    (21) lista2 -> . typevar COMMA LBRACKET lista RBRACKET COMMA lista2
    (22) lista2 -> . typevar COMMA typevar
    (23) lista2 -> . typevar COMMA LPAREN lista RPAREN
    (24) lista2 -> . typevar COMMA LBRACKET lista RBRACKET
    (33) typevar -> . CADENA
    (34) typevar -> . CADENAA
    (35) typevar -> . ENTERO
    (36) typevar -> . OCTAL
    (37) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 39
    CADENAA         shift and go to state 37
    ENTERO          shift and go to state 38
    OCTAL           shift and go to state 40
    HEXADECIMAL     shift and go to state 35

    typevar                        shift and go to state 65
    lista2                         shift and go to state 142

state 133

    (21) lista2 -> typevar COMMA LBRACKET lista . RBRACKET COMMA lista2
    (24) lista2 -> typevar COMMA LBRACKET lista . RBRACKET

    RBRACKET        shift and go to state 143


state 134

    (26) lista1 -> typevar EQUALGREATER LPAREN lista . RPAREN COMMA lista1
    (29) lista1 -> typevar EQUALGREATER LPAREN lista . RPAREN

    RPAREN          shift and go to state 144


state 135

    (25) lista1 -> typevar EQUALGREATER typevar COMMA . lista1
    (25) lista1 -> . typevar EQUALGREATER typevar COMMA lista1
    (26) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (27) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (28) lista1 -> . typevar EQUALGREATER typevar
    (29) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN
    (30) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET
    (33) typevar -> . CADENA
    (34) typevar -> . CADENAA
    (35) typevar -> . ENTERO
    (36) typevar -> . OCTAL
    (37) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 39
    CADENAA         shift and go to state 37
    ENTERO          shift and go to state 38
    OCTAL           shift and go to state 40
    HEXADECIMAL     shift and go to state 35

    typevar                        shift and go to state 68
    lista1                         shift and go to state 145

state 136

    (27) lista1 -> typevar EQUALGREATER LBRACKET lista . RBRACKET COMMA lista1
    (30) lista1 -> typevar EQUALGREATER LBRACKET lista . RBRACKET

    RBRACKET        shift and go to state 146


state 137

    (49) ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID . incdec RPAREN LBLOCK sentencias_ciclos RBLOCK
    (65) incdec -> . PLUSPLUS
    (66) incdec -> . MINUSMINUS

    PLUSPLUS        shift and go to state 148
    MINUSMINUS      shift and go to state 147

    incdec                         shift and go to state 149

state 138

    (45) F -> PESOS ID LBRACKET ENTERO RBRACKET .

    TIMES           reduce using rule 45 (F -> PESOS ID LBRACKET ENTERO RBRACKET .)
    DIVIDE          reduce using rule 45 (F -> PESOS ID LBRACKET ENTERO RBRACKET .)
    SEMICOLON       reduce using rule 45 (F -> PESOS ID LBRACKET ENTERO RBRACKET .)
    PLUS            reduce using rule 45 (F -> PESOS ID LBRACKET ENTERO RBRACKET .)
    MINUS           reduce using rule 45 (F -> PESOS ID LBRACKET ENTERO RBRACKET .)
    RPAREN          reduce using rule 45 (F -> PESOS ID LBRACKET ENTERO RBRACKET .)


state 139

    (47) F -> PESOS ID LBLOCK typevar RBLOCK .

    TIMES           reduce using rule 47 (F -> PESOS ID LBLOCK typevar RBLOCK .)
    DIVIDE          reduce using rule 47 (F -> PESOS ID LBLOCK typevar RBLOCK .)
    SEMICOLON       reduce using rule 47 (F -> PESOS ID LBLOCK typevar RBLOCK .)
    PLUS            reduce using rule 47 (F -> PESOS ID LBLOCK typevar RBLOCK .)
    MINUS           reduce using rule 47 (F -> PESOS ID LBLOCK typevar RBLOCK .)
    RPAREN          reduce using rule 47 (F -> PESOS ID LBLOCK typevar RBLOCK .)


state 140

    (50) ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK . sentencias_ciclos RBLOCK
    (52) sentencias_ciclos -> . var_declaration sentencias_ciclos
    (53) sentencias_ciclos -> . ciclos sentencias_ciclos
    (54) sentencias_ciclos -> . var_declaration
    (55) sentencias_ciclos -> . ciclos
    (9) var_declaration -> . PESOS ID SEMICOLON
    (10) var_declaration -> . PESOS ID EQUAL E SEMICOLON
    (11) var_declaration -> . PESOS ID EQUAL typevar SEMICOLON
    (12) var_declaration -> . ARROBA ID SEMICOLON
    (13) var_declaration -> . ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON
    (14) var_declaration -> . ARROBA ID EQUAL ARROBA ID SEMICOLON
    (15) var_declaration -> . PORCENTAJE ID SEMICOLON
    (16) var_declaration -> . PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON
    (17) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON
    (18) var_declaration -> . PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON
    (49) ciclos -> . FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK sentencias_ciclos RBLOCK
    (50) ciclos -> . FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK sentencias_ciclos RBLOCK
    (51) ciclos -> . WHILE LPAREN cond RPAREN LBLOCK sentencias_ciclos RBLOCK

    PESOS           shift and go to state 9
    ARROBA          shift and go to state 10
    PORCENTAJE      shift and go to state 3
    FOR             shift and go to state 5
    FOREACH         shift and go to state 11
    WHILE           shift and go to state 14

    var_declaration                shift and go to state 112
    sentencias_ciclos              shift and go to state 150
    ciclos                         shift and go to state 111

state 141

    (20) lista2 -> typevar COMMA LPAREN lista RPAREN . COMMA lista2
    (23) lista2 -> typevar COMMA LPAREN lista RPAREN .

    COMMA           shift and go to state 151
    RPAREN          reduce using rule 23 (lista2 -> typevar COMMA LPAREN lista RPAREN .)


state 142

    (19) lista2 -> typevar COMMA typevar COMMA lista2 .

    RPAREN          reduce using rule 19 (lista2 -> typevar COMMA typevar COMMA lista2 .)


state 143

    (21) lista2 -> typevar COMMA LBRACKET lista RBRACKET . COMMA lista2
    (24) lista2 -> typevar COMMA LBRACKET lista RBRACKET .

    COMMA           shift and go to state 152
    RPAREN          reduce using rule 24 (lista2 -> typevar COMMA LBRACKET lista RBRACKET .)


state 144

    (26) lista1 -> typevar EQUALGREATER LPAREN lista RPAREN . COMMA lista1
    (29) lista1 -> typevar EQUALGREATER LPAREN lista RPAREN .

    COMMA           shift and go to state 153
    RBLOCK          reduce using rule 29 (lista1 -> typevar EQUALGREATER LPAREN lista RPAREN .)


state 145

    (25) lista1 -> typevar EQUALGREATER typevar COMMA lista1 .

    RBLOCK          reduce using rule 25 (lista1 -> typevar EQUALGREATER typevar COMMA lista1 .)


state 146

    (27) lista1 -> typevar EQUALGREATER LBRACKET lista RBRACKET . COMMA lista1
    (30) lista1 -> typevar EQUALGREATER LBRACKET lista RBRACKET .

    COMMA           shift and go to state 154
    RBLOCK          reduce using rule 30 (lista1 -> typevar EQUALGREATER LBRACKET lista RBRACKET .)


state 147

    (66) incdec -> MINUSMINUS .

    RPAREN          reduce using rule 66 (incdec -> MINUSMINUS .)


state 148

    (65) incdec -> PLUSPLUS .

    RPAREN          reduce using rule 65 (incdec -> PLUSPLUS .)


state 149

    (49) ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec . RPAREN LBLOCK sentencias_ciclos RBLOCK

    RPAREN          shift and go to state 155


state 150

    (50) ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK sentencias_ciclos . RBLOCK

    RBLOCK          shift and go to state 156


state 151

    (20) lista2 -> typevar COMMA LPAREN lista RPAREN COMMA . lista2
    (19) lista2 -> . typevar COMMA typevar COMMA lista2
    (20) lista2 -> . typevar COMMA LPAREN lista RPAREN COMMA lista2
    (21) lista2 -> . typevar COMMA LBRACKET lista RBRACKET COMMA lista2
    (22) lista2 -> . typevar COMMA typevar
    (23) lista2 -> . typevar COMMA LPAREN lista RPAREN
    (24) lista2 -> . typevar COMMA LBRACKET lista RBRACKET
    (33) typevar -> . CADENA
    (34) typevar -> . CADENAA
    (35) typevar -> . ENTERO
    (36) typevar -> . OCTAL
    (37) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 39
    CADENAA         shift and go to state 37
    ENTERO          shift and go to state 38
    OCTAL           shift and go to state 40
    HEXADECIMAL     shift and go to state 35

    typevar                        shift and go to state 65
    lista2                         shift and go to state 157

state 152

    (21) lista2 -> typevar COMMA LBRACKET lista RBRACKET COMMA . lista2
    (19) lista2 -> . typevar COMMA typevar COMMA lista2
    (20) lista2 -> . typevar COMMA LPAREN lista RPAREN COMMA lista2
    (21) lista2 -> . typevar COMMA LBRACKET lista RBRACKET COMMA lista2
    (22) lista2 -> . typevar COMMA typevar
    (23) lista2 -> . typevar COMMA LPAREN lista RPAREN
    (24) lista2 -> . typevar COMMA LBRACKET lista RBRACKET
    (33) typevar -> . CADENA
    (34) typevar -> . CADENAA
    (35) typevar -> . ENTERO
    (36) typevar -> . OCTAL
    (37) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 39
    CADENAA         shift and go to state 37
    ENTERO          shift and go to state 38
    OCTAL           shift and go to state 40
    HEXADECIMAL     shift and go to state 35

    typevar                        shift and go to state 65
    lista2                         shift and go to state 158

state 153

    (26) lista1 -> typevar EQUALGREATER LPAREN lista RPAREN COMMA . lista1
    (25) lista1 -> . typevar EQUALGREATER typevar COMMA lista1
    (26) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (27) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (28) lista1 -> . typevar EQUALGREATER typevar
    (29) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN
    (30) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET
    (33) typevar -> . CADENA
    (34) typevar -> . CADENAA
    (35) typevar -> . ENTERO
    (36) typevar -> . OCTAL
    (37) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 39
    CADENAA         shift and go to state 37
    ENTERO          shift and go to state 38
    OCTAL           shift and go to state 40
    HEXADECIMAL     shift and go to state 35

    typevar                        shift and go to state 68
    lista1                         shift and go to state 159

state 154

    (27) lista1 -> typevar EQUALGREATER LBRACKET lista RBRACKET COMMA . lista1
    (25) lista1 -> . typevar EQUALGREATER typevar COMMA lista1
    (26) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (27) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (28) lista1 -> . typevar EQUALGREATER typevar
    (29) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN
    (30) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET
    (33) typevar -> . CADENA
    (34) typevar -> . CADENAA
    (35) typevar -> . ENTERO
    (36) typevar -> . OCTAL
    (37) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 39
    CADENAA         shift and go to state 37
    ENTERO          shift and go to state 38
    OCTAL           shift and go to state 40
    HEXADECIMAL     shift and go to state 35

    typevar                        shift and go to state 68
    lista1                         shift and go to state 160

state 155

    (49) ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN . LBLOCK sentencias_ciclos RBLOCK

    LBLOCK          shift and go to state 161


state 156

    (50) ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK sentencias_ciclos RBLOCK .

    PESOS           reduce using rule 50 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK sentencias_ciclos RBLOCK .)
    ARROBA          reduce using rule 50 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK sentencias_ciclos RBLOCK .)
    PORCENTAJE      reduce using rule 50 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK sentencias_ciclos RBLOCK .)
    FOR             reduce using rule 50 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK sentencias_ciclos RBLOCK .)
    FOREACH         reduce using rule 50 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK sentencias_ciclos RBLOCK .)
    WHILE           reduce using rule 50 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK sentencias_ciclos RBLOCK .)
    RBLOCK          reduce using rule 50 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK sentencias_ciclos RBLOCK .)
    USE             reduce using rule 50 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK sentencias_ciclos RBLOCK .)
    REQUIRE         reduce using rule 50 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK sentencias_ciclos RBLOCK .)
    $end            reduce using rule 50 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK sentencias_ciclos RBLOCK .)


state 157

    (20) lista2 -> typevar COMMA LPAREN lista RPAREN COMMA lista2 .

    RPAREN          reduce using rule 20 (lista2 -> typevar COMMA LPAREN lista RPAREN COMMA lista2 .)


state 158

    (21) lista2 -> typevar COMMA LBRACKET lista RBRACKET COMMA lista2 .

    RPAREN          reduce using rule 21 (lista2 -> typevar COMMA LBRACKET lista RBRACKET COMMA lista2 .)


state 159

    (26) lista1 -> typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1 .

    RBLOCK          reduce using rule 26 (lista1 -> typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1 .)


state 160

    (27) lista1 -> typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1 .

    RBLOCK          reduce using rule 27 (lista1 -> typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1 .)


state 161

    (49) ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK . sentencias_ciclos RBLOCK
    (52) sentencias_ciclos -> . var_declaration sentencias_ciclos
    (53) sentencias_ciclos -> . ciclos sentencias_ciclos
    (54) sentencias_ciclos -> . var_declaration
    (55) sentencias_ciclos -> . ciclos
    (9) var_declaration -> . PESOS ID SEMICOLON
    (10) var_declaration -> . PESOS ID EQUAL E SEMICOLON
    (11) var_declaration -> . PESOS ID EQUAL typevar SEMICOLON
    (12) var_declaration -> . ARROBA ID SEMICOLON
    (13) var_declaration -> . ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON
    (14) var_declaration -> . ARROBA ID EQUAL ARROBA ID SEMICOLON
    (15) var_declaration -> . PORCENTAJE ID SEMICOLON
    (16) var_declaration -> . PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON
    (17) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON
    (18) var_declaration -> . PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON
    (49) ciclos -> . FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK sentencias_ciclos RBLOCK
    (50) ciclos -> . FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK sentencias_ciclos RBLOCK
    (51) ciclos -> . WHILE LPAREN cond RPAREN LBLOCK sentencias_ciclos RBLOCK

    PESOS           shift and go to state 9
    ARROBA          shift and go to state 10
    PORCENTAJE      shift and go to state 3
    FOR             shift and go to state 5
    FOREACH         shift and go to state 11
    WHILE           shift and go to state 14

    var_declaration                shift and go to state 112
    sentencias_ciclos              shift and go to state 162
    ciclos                         shift and go to state 111

state 162

    (49) ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK sentencias_ciclos . RBLOCK

    RBLOCK          shift and go to state 163


state 163

    (49) ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK sentencias_ciclos RBLOCK .

    PESOS           reduce using rule 49 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK sentencias_ciclos RBLOCK .)
    ARROBA          reduce using rule 49 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK sentencias_ciclos RBLOCK .)
    PORCENTAJE      reduce using rule 49 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK sentencias_ciclos RBLOCK .)
    FOR             reduce using rule 49 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK sentencias_ciclos RBLOCK .)
    FOREACH         reduce using rule 49 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK sentencias_ciclos RBLOCK .)
    WHILE           reduce using rule 49 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK sentencias_ciclos RBLOCK .)
    RBLOCK          reduce using rule 49 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK sentencias_ciclos RBLOCK .)
    USE             reduce using rule 49 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK sentencias_ciclos RBLOCK .)
    REQUIRE         reduce using rule 49 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK sentencias_ciclos RBLOCK .)
    $end            reduce using rule 49 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK sentencias_ciclos RBLOCK .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 52 resolved using rule (typevar -> ENTERO)
WARNING: rejected rule (F -> ENTERO) in state 52
