Created by PLY version 3.7 (http://www.dabeaz.com/ply)

Unused terminals:

    EVAL
    SUBSTR
    ANDBW
    EXP
    PLUSGREATER
    EOF
    COMMENT
    POSTINDEX
    NEXT
    INTERROGATION
    GOTO
    EXEC
    COMPLEMENT
    UNSHIFT
    ELSIF
    PREINDEX
    ORBW
    LENGTH
    VALUES
    LESSLESS
    DELETE
    INDEX
    RETURN
    REVERSE
    EXPREGULAR
    OCT
    SELECT
    CMP
    FILENO
    DEFINED
    GREATERGREATER
    SIN
    COLON
    UNLESS
    MKDIR
    ELSE
    LAST
    UNTIL
    REFERENCE
    INT
    PACK
    RAND
    SUB
    READ
    ARROW
    RMDIR
    OPEN
    DOT
    GUIONDOWN
    SHIFT
    INCREMENTO
    CLOSE
    SORT
    HEX
    WRITE
    PUSH
    DECREMENTO
    REFERENCIAS
    JOIN
    EXIT
    REFERENCIALISTA
    EACH
    TELL
    RENAME
    LOG
    DIE
    CHOWN
    SEEK
    POP
    CHOP
    FORK
    XOR
    KEYS
    ABS
    SPLIT
    LOCAL
    IF
    NOTS
    DISTINT
    SYSTEM
    SQRT
    RINDEX
    SLEEP
    DOLLARDOLLAR
    PLUSLESS

Grammar

Rule 0     S' -> program
Rule 1     program -> declaration_list
Rule 2     declaration_list -> declaration declaration_list
Rule 3     declaration_list -> declaration
Rule 4     declaration -> header_declaration
Rule 5     declaration -> print
Rule 6     declaration -> var_declaration
Rule 7     declaration -> ciclos
Rule 8     header_declaration -> USE ID SEMICOLON
Rule 9     header_declaration -> REQUIRE ID SEMICOLON
Rule 10    var_declaration -> PESOS ID SEMICOLON
Rule 11    var_declaration -> PESOS ID EQUAL E SEMICOLON
Rule 12    var_declaration -> PESOS ID incdec SEMICOLON
Rule 13    var_declaration -> PESOS ID EQUAL typevar SEMICOLON
Rule 14    var_declaration -> ARROBA ID SEMICOLON
Rule 15    var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON
Rule 16    var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON
Rule 17    var_declaration -> PORCENTAJE ID SEMICOLON
Rule 18    var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON
Rule 19    var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON
Rule 20    var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON
Rule 21    var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON
Rule 22    lista2 -> typevar COMMA typevar COMMA lista2
Rule 23    lista2 -> typevar COMMA LPAREN lista RPAREN COMMA lista2
Rule 24    lista2 -> typevar COMMA LBRACKET lista RBRACKET COMMA lista2
Rule 25    lista2 -> typevar COMMA typevar
Rule 26    lista2 -> typevar COMMA LPAREN lista RPAREN
Rule 27    lista2 -> typevar COMMA LBRACKET lista RBRACKET
Rule 28    lista2 -> ID COMMA typevar COMMA lista2
Rule 29    lista2 -> ID COMMA LPAREN lista RPAREN COMMA lista2
Rule 30    lista2 -> ID COMMA LBRACKET lista RBRACKET COMMA lista2
Rule 31    lista2 -> ID COMMA typevar
Rule 32    lista2 -> ID COMMA LPAREN lista RPAREN
Rule 33    lista2 -> ID COMMA LBRACKET lista RBRACKET
Rule 34    lista1 -> typevar EQUALGREATER typevar COMMA lista1
Rule 35    lista1 -> typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1
Rule 36    lista1 -> typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
Rule 37    lista1 -> typevar EQUALGREATER typevar
Rule 38    lista1 -> typevar EQUALGREATER LPAREN lista RPAREN
Rule 39    lista1 -> typevar EQUALGREATER LBRACKET lista RBRACKET
Rule 40    lista1 -> ID EQUALGREATER typevar COMMA lista1
Rule 41    lista1 -> ID EQUALGREATER LPAREN lista RPAREN COMMA lista1
Rule 42    lista1 -> ID EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
Rule 43    lista1 -> ID EQUALGREATER typevar
Rule 44    lista1 -> ID EQUALGREATER LPAREN lista RPAREN
Rule 45    lista1 -> ID EQUALGREATER LBRACKET lista RBRACKET
Rule 46    lista -> typevar COMMA lista
Rule 47    lista -> typevar
Rule 48    typevar -> CADENA
Rule 49    typevar -> CADENAA
Rule 50    typevar -> ENTERO
Rule 51    typevar -> OCTAL
Rule 52    typevar -> HEXADECIMAL
Rule 53    E -> E PLUS T
Rule 54    E -> E MINUS T
Rule 55    E -> T
Rule 56    T -> T TIMES F
Rule 57    T -> T DIVIDE F
Rule 58    T -> F
Rule 59    F -> PESOS ID
Rule 60    F -> PESOS ID LBRACKET ENTERO RBRACKET
Rule 61    F -> ENTERO
Rule 62    F -> PESOS ID LBLOCK typevar RBLOCK
Rule 63    F -> LPAREN E RPAREN
Rule 64    ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK
Rule 65    ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK
Rule 66    ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
Rule 67    sent_for -> PESOS ID
Rule 68    sent_for -> PESOS ID EQUAL ENTERO
Rule 69    sent_for -> MY PESOS ID EQUAL ENTERO
Rule 70    sent_for -> PESOS ID EQUAL ENTERO COMMA sent_for
Rule 71    sent_for -> MY PESOS ID EQUAL ENTERO COMMA sent_for
Rule 72    log -> LESS
Rule 73    log -> GREATER
Rule 74    log -> ISEQUAL
Rule 75    log -> LESSEQUAL
Rule 76    log -> GREATEREQUAL
Rule 77    log -> DEQUAL
Rule 78    log -> AND
Rule 79    log -> ANDS
Rule 80    log -> ORS
Rule 81    log -> OR
Rule 82    type -> typevar
Rule 83    type -> var_declaration_gen
Rule 84    cond -> type
Rule 85    cond -> cond log cond
Rule 86    cond -> NOT cond
Rule 87    cond -> LPAREN type RPAREN
Rule 88    cond -> LPAREN cond RPAREN
Rule 89    incdec -> PLUSPLUS
Rule 90    incdec -> MINUSMINUS
Rule 91    print -> PRINT arg SEMICOLON
Rule 92    print -> PRINT LPAREN arg RPAREN SEMICOLON
Rule 93    var_declaration_gen -> PESOS ID
Rule 94    var_declaration_gen -> PESOS ID LBRACKET ENTERO RBRACKET
Rule 95    var_declaration_gen -> PESOS ID LBLOCK typevar RBLOCK
Rule 96    var_declaration_gen -> PESOS ID LBLOCK ID RBLOCK
Rule 97    arg -> var_declaration_gen
Rule 98    arg -> CADENA
Rule 99    arg -> var_declaration_gen COMMA arg
Rule 100   arg -> CADENA COMMA arg

Terminals, with rules where they appear

ABS                  : 
AND                  : 78
ANDBW                : 
ANDS                 : 79
ARROBA               : 14 15 16 16 65
ARROW                : 
CADENA               : 48 98 100
CADENAA              : 49
CHOP                 : 
CHOWN                : 
CLOSE                : 
CMP                  : 
COLON                : 
COMMA                : 22 22 23 23 24 24 25 26 27 28 28 29 29 30 30 31 32 33 34 35 36 40 41 42 46 70 71 99 100
COMMENT              : 
COMPLEMENT           : 
DECREMENTO           : 
DEFINED              : 
DELETE               : 
DEQUAL               : 77
DIE                  : 
DISTINT              : 
DIVIDE               : 57
DOLLARDOLLAR         : 
DOT                  : 
EACH                 : 
ELSE                 : 
ELSIF                : 
ENTERO               : 50 60 61 68 69 70 71 94
EOF                  : 
EQUAL                : 11 13 15 16 18 19 20 21 68 69 70 71
EQUALGREATER         : 34 35 36 37 38 39 40 41 42 43 44 45
EVAL                 : 
EXEC                 : 
EXIT                 : 
EXP                  : 
EXPREGULAR           : 
FILENO               : 
FOR                  : 64
FOREACH              : 65
FORK                 : 
GOTO                 : 
GREATER              : 73
GREATEREQUAL         : 76
GREATERGREATER       : 
GUIONDOWN            : 
HEX                  : 
HEXADECIMAL          : 52
ID                   : 8 9 10 11 12 13 14 15 16 16 17 18 19 20 21 21 28 29 30 31 32 33 40 41 42 43 44 45 59 60 62 64 65 65 67 68 69 70 71 93 94 95 96 96
IF                   : 
INCREMENTO           : 
INDEX                : 
INT                  : 
INTERROGATION        : 
ISEQUAL              : 74
JOIN                 : 
KEYS                 : 
LAST                 : 
LBLOCK               : 18 62 64 65 66 95 96
LBRACKET             : 24 27 30 33 36 39 42 45 60 94
LENGTH               : 
LESS                 : 72
LESSEQUAL            : 75
LESSLESS             : 
LOCAL                : 
LOG                  : 
LPAREN               : 15 19 20 23 26 29 32 35 38 41 44 63 64 65 66 87 88 92
MINUS                : 54
MINUSMINUS           : 90
MKDIR                : 
MY                   : 69 71
NEXT                 : 
NOT                  : 86
NOTS                 : 
OCT                  : 
OCTAL                : 51
OPEN                 : 
OR                   : 81
ORBW                 : 
ORS                  : 80
PACK                 : 
PESOS                : 10 11 12 13 59 60 62 64 65 67 68 69 70 71 93 94 95 96
PLUS                 : 53
PLUSGREATER          : 
PLUSLESS             : 
PLUSPLUS             : 89
POP                  : 
PORCENTAJE           : 17 18 19 20 21 21
POSTINDEX            : 
PREINDEX             : 
PRINT                : 91 92
PUSH                 : 
RAND                 : 
RBLOCK               : 18 62 64 65 66 95 96
RBRACKET             : 24 27 30 33 36 39 42 45 60 94
READ                 : 
REFERENCE            : 
REFERENCIALISTA      : 
REFERENCIAS          : 
RENAME               : 
REQUIRE              : 9
RETURN               : 
REVERSE              : 
RINDEX               : 
RMDIR                : 
RPAREN               : 15 19 20 23 26 29 32 35 38 41 44 63 64 65 66 87 88 92
SEEK                 : 
SELECT               : 
SEMICOLON            : 8 9 10 11 12 13 14 15 16 17 18 19 20 21 64 64 91 92
SHIFT                : 
SIN                  : 
SLEEP                : 
SORT                 : 
SPLIT                : 
SQRT                 : 
SUB                  : 
SUBSTR               : 
SYSTEM               : 
TELL                 : 
TIMES                : 56
UNLESS               : 
UNSHIFT              : 
UNTIL                : 
USE                  : 8
VALUES               : 
WHILE                : 66
WRITE                : 
XOR                  : 
error                : 

Nonterminals, with rules where they appear

E                    : 11 53 54 63
F                    : 56 57 58
T                    : 53 54 55 56 57
arg                  : 91 92 99 100
ciclos               : 7
cond                 : 64 66 85 85 86 88
declaration          : 2 3
declaration_list     : 1 2 64 65 66
header_declaration   : 4
incdec               : 12 64
lista                : 15 23 24 26 27 29 30 32 33 35 36 38 39 41 42 44 45 46
lista1               : 18 19 34 35 36 40 41 42
lista2               : 20 22 23 24 28 29 30
log                  : 85
print                : 5
program              : 0
sent_for             : 64 70 71
type                 : 84 87
typevar              : 13 22 22 23 24 25 25 26 27 28 31 34 34 35 36 37 37 38 39 40 43 46 47 62 82 95
var_declaration      : 6
var_declaration_gen  : 83 97 99

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declaration_list
    (2) declaration_list -> . declaration declaration_list
    (3) declaration_list -> . declaration
    (4) declaration -> . header_declaration
    (5) declaration -> . print
    (6) declaration -> . var_declaration
    (7) declaration -> . ciclos
    (8) header_declaration -> . USE ID SEMICOLON
    (9) header_declaration -> . REQUIRE ID SEMICOLON
    (91) print -> . PRINT arg SEMICOLON
    (92) print -> . PRINT LPAREN arg RPAREN SEMICOLON
    (10) var_declaration -> . PESOS ID SEMICOLON
    (11) var_declaration -> . PESOS ID EQUAL E SEMICOLON
    (12) var_declaration -> . PESOS ID incdec SEMICOLON
    (13) var_declaration -> . PESOS ID EQUAL typevar SEMICOLON
    (14) var_declaration -> . ARROBA ID SEMICOLON
    (15) var_declaration -> . ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON
    (16) var_declaration -> . ARROBA ID EQUAL ARROBA ID SEMICOLON
    (17) var_declaration -> . PORCENTAJE ID SEMICOLON
    (18) var_declaration -> . PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON
    (19) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON
    (20) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON
    (21) var_declaration -> . PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON
    (64) ciclos -> . FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK
    (65) ciclos -> . FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK
    (66) ciclos -> . WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK

    USE             shift and go to state 1
    REQUIRE         shift and go to state 2
    PRINT           shift and go to state 6
    PESOS           shift and go to state 3
    ARROBA          shift and go to state 16
    PORCENTAJE      shift and go to state 14
    FOR             shift and go to state 11
    FOREACH         shift and go to state 12
    WHILE           shift and go to state 4

    header_declaration             shift and go to state 10
    declaration_list               shift and go to state 15
    var_declaration                shift and go to state 7
    program                        shift and go to state 8
    ciclos                         shift and go to state 5
    declaration                    shift and go to state 13
    print                          shift and go to state 9

state 1

    (8) header_declaration -> USE . ID SEMICOLON

    ID              shift and go to state 17


state 2

    (9) header_declaration -> REQUIRE . ID SEMICOLON

    ID              shift and go to state 18


state 3

    (10) var_declaration -> PESOS . ID SEMICOLON
    (11) var_declaration -> PESOS . ID EQUAL E SEMICOLON
    (12) var_declaration -> PESOS . ID incdec SEMICOLON
    (13) var_declaration -> PESOS . ID EQUAL typevar SEMICOLON

    ID              shift and go to state 19


state 4

    (66) ciclos -> WHILE . LPAREN cond RPAREN LBLOCK declaration_list RBLOCK

    LPAREN          shift and go to state 20


state 5

    (7) declaration -> ciclos .

    USE             reduce using rule 7 (declaration -> ciclos .)
    REQUIRE         reduce using rule 7 (declaration -> ciclos .)
    PRINT           reduce using rule 7 (declaration -> ciclos .)
    PESOS           reduce using rule 7 (declaration -> ciclos .)
    ARROBA          reduce using rule 7 (declaration -> ciclos .)
    PORCENTAJE      reduce using rule 7 (declaration -> ciclos .)
    FOR             reduce using rule 7 (declaration -> ciclos .)
    FOREACH         reduce using rule 7 (declaration -> ciclos .)
    WHILE           reduce using rule 7 (declaration -> ciclos .)
    RBLOCK          reduce using rule 7 (declaration -> ciclos .)
    $end            reduce using rule 7 (declaration -> ciclos .)


state 6

    (91) print -> PRINT . arg SEMICOLON
    (92) print -> PRINT . LPAREN arg RPAREN SEMICOLON
    (97) arg -> . var_declaration_gen
    (98) arg -> . CADENA
    (99) arg -> . var_declaration_gen COMMA arg
    (100) arg -> . CADENA COMMA arg
    (93) var_declaration_gen -> . PESOS ID
    (94) var_declaration_gen -> . PESOS ID LBRACKET ENTERO RBRACKET
    (95) var_declaration_gen -> . PESOS ID LBLOCK typevar RBLOCK
    (96) var_declaration_gen -> . PESOS ID LBLOCK ID RBLOCK

    LPAREN          shift and go to state 24
    CADENA          shift and go to state 23
    PESOS           shift and go to state 22

    var_declaration_gen            shift and go to state 21
    arg                            shift and go to state 25

state 7

    (6) declaration -> var_declaration .

    USE             reduce using rule 6 (declaration -> var_declaration .)
    REQUIRE         reduce using rule 6 (declaration -> var_declaration .)
    PRINT           reduce using rule 6 (declaration -> var_declaration .)
    PESOS           reduce using rule 6 (declaration -> var_declaration .)
    ARROBA          reduce using rule 6 (declaration -> var_declaration .)
    PORCENTAJE      reduce using rule 6 (declaration -> var_declaration .)
    FOR             reduce using rule 6 (declaration -> var_declaration .)
    FOREACH         reduce using rule 6 (declaration -> var_declaration .)
    WHILE           reduce using rule 6 (declaration -> var_declaration .)
    RBLOCK          reduce using rule 6 (declaration -> var_declaration .)
    $end            reduce using rule 6 (declaration -> var_declaration .)


state 8

    (0) S' -> program .



state 9

    (5) declaration -> print .

    USE             reduce using rule 5 (declaration -> print .)
    REQUIRE         reduce using rule 5 (declaration -> print .)
    PRINT           reduce using rule 5 (declaration -> print .)
    PESOS           reduce using rule 5 (declaration -> print .)
    ARROBA          reduce using rule 5 (declaration -> print .)
    PORCENTAJE      reduce using rule 5 (declaration -> print .)
    FOR             reduce using rule 5 (declaration -> print .)
    FOREACH         reduce using rule 5 (declaration -> print .)
    WHILE           reduce using rule 5 (declaration -> print .)
    RBLOCK          reduce using rule 5 (declaration -> print .)
    $end            reduce using rule 5 (declaration -> print .)


state 10

    (4) declaration -> header_declaration .

    USE             reduce using rule 4 (declaration -> header_declaration .)
    REQUIRE         reduce using rule 4 (declaration -> header_declaration .)
    PRINT           reduce using rule 4 (declaration -> header_declaration .)
    PESOS           reduce using rule 4 (declaration -> header_declaration .)
    ARROBA          reduce using rule 4 (declaration -> header_declaration .)
    PORCENTAJE      reduce using rule 4 (declaration -> header_declaration .)
    FOR             reduce using rule 4 (declaration -> header_declaration .)
    FOREACH         reduce using rule 4 (declaration -> header_declaration .)
    WHILE           reduce using rule 4 (declaration -> header_declaration .)
    RBLOCK          reduce using rule 4 (declaration -> header_declaration .)
    $end            reduce using rule 4 (declaration -> header_declaration .)


state 11

    (64) ciclos -> FOR . LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK

    LPAREN          shift and go to state 26


state 12

    (65) ciclos -> FOREACH . PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK

    PESOS           shift and go to state 27


state 13

    (2) declaration_list -> declaration . declaration_list
    (3) declaration_list -> declaration .
    (2) declaration_list -> . declaration declaration_list
    (3) declaration_list -> . declaration
    (4) declaration -> . header_declaration
    (5) declaration -> . print
    (6) declaration -> . var_declaration
    (7) declaration -> . ciclos
    (8) header_declaration -> . USE ID SEMICOLON
    (9) header_declaration -> . REQUIRE ID SEMICOLON
    (91) print -> . PRINT arg SEMICOLON
    (92) print -> . PRINT LPAREN arg RPAREN SEMICOLON
    (10) var_declaration -> . PESOS ID SEMICOLON
    (11) var_declaration -> . PESOS ID EQUAL E SEMICOLON
    (12) var_declaration -> . PESOS ID incdec SEMICOLON
    (13) var_declaration -> . PESOS ID EQUAL typevar SEMICOLON
    (14) var_declaration -> . ARROBA ID SEMICOLON
    (15) var_declaration -> . ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON
    (16) var_declaration -> . ARROBA ID EQUAL ARROBA ID SEMICOLON
    (17) var_declaration -> . PORCENTAJE ID SEMICOLON
    (18) var_declaration -> . PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON
    (19) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON
    (20) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON
    (21) var_declaration -> . PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON
    (64) ciclos -> . FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK
    (65) ciclos -> . FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK
    (66) ciclos -> . WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK

    $end            reduce using rule 3 (declaration_list -> declaration .)
    RBLOCK          reduce using rule 3 (declaration_list -> declaration .)
    USE             shift and go to state 1
    REQUIRE         shift and go to state 2
    PRINT           shift and go to state 6
    PESOS           shift and go to state 3
    ARROBA          shift and go to state 16
    PORCENTAJE      shift and go to state 14
    FOR             shift and go to state 11
    FOREACH         shift and go to state 12
    WHILE           shift and go to state 4

    header_declaration             shift and go to state 10
    declaration_list               shift and go to state 28
    var_declaration                shift and go to state 7
    ciclos                         shift and go to state 5
    declaration                    shift and go to state 13
    print                          shift and go to state 9

state 14

    (17) var_declaration -> PORCENTAJE . ID SEMICOLON
    (18) var_declaration -> PORCENTAJE . ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON
    (19) var_declaration -> PORCENTAJE . ID EQUAL LPAREN lista1 RPAREN SEMICOLON
    (20) var_declaration -> PORCENTAJE . ID EQUAL LPAREN lista2 RPAREN SEMICOLON
    (21) var_declaration -> PORCENTAJE . ID EQUAL PORCENTAJE ID SEMICOLON

    ID              shift and go to state 29


state 15

    (1) program -> declaration_list .

    $end            reduce using rule 1 (program -> declaration_list .)


state 16

    (14) var_declaration -> ARROBA . ID SEMICOLON
    (15) var_declaration -> ARROBA . ID EQUAL LPAREN lista RPAREN SEMICOLON
    (16) var_declaration -> ARROBA . ID EQUAL ARROBA ID SEMICOLON

    ID              shift and go to state 30


state 17

    (8) header_declaration -> USE ID . SEMICOLON

    SEMICOLON       shift and go to state 31


state 18

    (9) header_declaration -> REQUIRE ID . SEMICOLON

    SEMICOLON       shift and go to state 32


state 19

    (10) var_declaration -> PESOS ID . SEMICOLON
    (11) var_declaration -> PESOS ID . EQUAL E SEMICOLON
    (12) var_declaration -> PESOS ID . incdec SEMICOLON
    (13) var_declaration -> PESOS ID . EQUAL typevar SEMICOLON
    (89) incdec -> . PLUSPLUS
    (90) incdec -> . MINUSMINUS

    SEMICOLON       shift and go to state 34
    EQUAL           shift and go to state 36
    PLUSPLUS        shift and go to state 35
    MINUSMINUS      shift and go to state 33

    incdec                         shift and go to state 37

state 20

    (66) ciclos -> WHILE LPAREN . cond RPAREN LBLOCK declaration_list RBLOCK
    (84) cond -> . type
    (85) cond -> . cond log cond
    (86) cond -> . NOT cond
    (87) cond -> . LPAREN type RPAREN
    (88) cond -> . LPAREN cond RPAREN
    (82) type -> . typevar
    (83) type -> . var_declaration_gen
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL
    (93) var_declaration_gen -> . PESOS ID
    (94) var_declaration_gen -> . PESOS ID LBRACKET ENTERO RBRACKET
    (95) var_declaration_gen -> . PESOS ID LBLOCK typevar RBLOCK
    (96) var_declaration_gen -> . PESOS ID LBLOCK ID RBLOCK

    NOT             shift and go to state 44
    LPAREN          shift and go to state 43
    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45
    PESOS           shift and go to state 22

    typevar                        shift and go to state 38
    var_declaration_gen            shift and go to state 39
    cond                           shift and go to state 42
    type                           shift and go to state 47

state 21

    (97) arg -> var_declaration_gen .
    (99) arg -> var_declaration_gen . COMMA arg

    RPAREN          reduce using rule 97 (arg -> var_declaration_gen .)
    SEMICOLON       reduce using rule 97 (arg -> var_declaration_gen .)
    COMMA           shift and go to state 49


state 22

    (93) var_declaration_gen -> PESOS . ID
    (94) var_declaration_gen -> PESOS . ID LBRACKET ENTERO RBRACKET
    (95) var_declaration_gen -> PESOS . ID LBLOCK typevar RBLOCK
    (96) var_declaration_gen -> PESOS . ID LBLOCK ID RBLOCK

    ID              shift and go to state 50


state 23

    (98) arg -> CADENA .
    (100) arg -> CADENA . COMMA arg

    RPAREN          reduce using rule 98 (arg -> CADENA .)
    SEMICOLON       reduce using rule 98 (arg -> CADENA .)
    COMMA           shift and go to state 51


state 24

    (92) print -> PRINT LPAREN . arg RPAREN SEMICOLON
    (97) arg -> . var_declaration_gen
    (98) arg -> . CADENA
    (99) arg -> . var_declaration_gen COMMA arg
    (100) arg -> . CADENA COMMA arg
    (93) var_declaration_gen -> . PESOS ID
    (94) var_declaration_gen -> . PESOS ID LBRACKET ENTERO RBRACKET
    (95) var_declaration_gen -> . PESOS ID LBLOCK typevar RBLOCK
    (96) var_declaration_gen -> . PESOS ID LBLOCK ID RBLOCK

    CADENA          shift and go to state 23
    PESOS           shift and go to state 22

    var_declaration_gen            shift and go to state 21
    arg                            shift and go to state 52

state 25

    (91) print -> PRINT arg . SEMICOLON

    SEMICOLON       shift and go to state 53


state 26

    (64) ciclos -> FOR LPAREN . sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK
    (67) sent_for -> . PESOS ID
    (68) sent_for -> . PESOS ID EQUAL ENTERO
    (69) sent_for -> . MY PESOS ID EQUAL ENTERO
    (70) sent_for -> . PESOS ID EQUAL ENTERO COMMA sent_for
    (71) sent_for -> . MY PESOS ID EQUAL ENTERO COMMA sent_for

    PESOS           shift and go to state 55
    MY              shift and go to state 56

    sent_for                       shift and go to state 54

state 27

    (65) ciclos -> FOREACH PESOS . ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK

    ID              shift and go to state 57


state 28

    (2) declaration_list -> declaration declaration_list .

    $end            reduce using rule 2 (declaration_list -> declaration declaration_list .)
    RBLOCK          reduce using rule 2 (declaration_list -> declaration declaration_list .)


state 29

    (17) var_declaration -> PORCENTAJE ID . SEMICOLON
    (18) var_declaration -> PORCENTAJE ID . EQUAL LBLOCK lista1 RBLOCK SEMICOLON
    (19) var_declaration -> PORCENTAJE ID . EQUAL LPAREN lista1 RPAREN SEMICOLON
    (20) var_declaration -> PORCENTAJE ID . EQUAL LPAREN lista2 RPAREN SEMICOLON
    (21) var_declaration -> PORCENTAJE ID . EQUAL PORCENTAJE ID SEMICOLON

    SEMICOLON       shift and go to state 58
    EQUAL           shift and go to state 59


state 30

    (14) var_declaration -> ARROBA ID . SEMICOLON
    (15) var_declaration -> ARROBA ID . EQUAL LPAREN lista RPAREN SEMICOLON
    (16) var_declaration -> ARROBA ID . EQUAL ARROBA ID SEMICOLON

    SEMICOLON       shift and go to state 60
    EQUAL           shift and go to state 61


state 31

    (8) header_declaration -> USE ID SEMICOLON .

    USE             reduce using rule 8 (header_declaration -> USE ID SEMICOLON .)
    REQUIRE         reduce using rule 8 (header_declaration -> USE ID SEMICOLON .)
    PRINT           reduce using rule 8 (header_declaration -> USE ID SEMICOLON .)
    PESOS           reduce using rule 8 (header_declaration -> USE ID SEMICOLON .)
    ARROBA          reduce using rule 8 (header_declaration -> USE ID SEMICOLON .)
    PORCENTAJE      reduce using rule 8 (header_declaration -> USE ID SEMICOLON .)
    FOR             reduce using rule 8 (header_declaration -> USE ID SEMICOLON .)
    FOREACH         reduce using rule 8 (header_declaration -> USE ID SEMICOLON .)
    WHILE           reduce using rule 8 (header_declaration -> USE ID SEMICOLON .)
    $end            reduce using rule 8 (header_declaration -> USE ID SEMICOLON .)
    RBLOCK          reduce using rule 8 (header_declaration -> USE ID SEMICOLON .)


state 32

    (9) header_declaration -> REQUIRE ID SEMICOLON .

    USE             reduce using rule 9 (header_declaration -> REQUIRE ID SEMICOLON .)
    REQUIRE         reduce using rule 9 (header_declaration -> REQUIRE ID SEMICOLON .)
    PRINT           reduce using rule 9 (header_declaration -> REQUIRE ID SEMICOLON .)
    PESOS           reduce using rule 9 (header_declaration -> REQUIRE ID SEMICOLON .)
    ARROBA          reduce using rule 9 (header_declaration -> REQUIRE ID SEMICOLON .)
    PORCENTAJE      reduce using rule 9 (header_declaration -> REQUIRE ID SEMICOLON .)
    FOR             reduce using rule 9 (header_declaration -> REQUIRE ID SEMICOLON .)
    FOREACH         reduce using rule 9 (header_declaration -> REQUIRE ID SEMICOLON .)
    WHILE           reduce using rule 9 (header_declaration -> REQUIRE ID SEMICOLON .)
    $end            reduce using rule 9 (header_declaration -> REQUIRE ID SEMICOLON .)
    RBLOCK          reduce using rule 9 (header_declaration -> REQUIRE ID SEMICOLON .)


state 33

    (90) incdec -> MINUSMINUS .

    RPAREN          reduce using rule 90 (incdec -> MINUSMINUS .)
    SEMICOLON       reduce using rule 90 (incdec -> MINUSMINUS .)


state 34

    (10) var_declaration -> PESOS ID SEMICOLON .

    USE             reduce using rule 10 (var_declaration -> PESOS ID SEMICOLON .)
    REQUIRE         reduce using rule 10 (var_declaration -> PESOS ID SEMICOLON .)
    PRINT           reduce using rule 10 (var_declaration -> PESOS ID SEMICOLON .)
    PESOS           reduce using rule 10 (var_declaration -> PESOS ID SEMICOLON .)
    ARROBA          reduce using rule 10 (var_declaration -> PESOS ID SEMICOLON .)
    PORCENTAJE      reduce using rule 10 (var_declaration -> PESOS ID SEMICOLON .)
    FOR             reduce using rule 10 (var_declaration -> PESOS ID SEMICOLON .)
    FOREACH         reduce using rule 10 (var_declaration -> PESOS ID SEMICOLON .)
    WHILE           reduce using rule 10 (var_declaration -> PESOS ID SEMICOLON .)
    $end            reduce using rule 10 (var_declaration -> PESOS ID SEMICOLON .)
    RBLOCK          reduce using rule 10 (var_declaration -> PESOS ID SEMICOLON .)


state 35

    (89) incdec -> PLUSPLUS .

    RPAREN          reduce using rule 89 (incdec -> PLUSPLUS .)
    SEMICOLON       reduce using rule 89 (incdec -> PLUSPLUS .)


state 36

    (11) var_declaration -> PESOS ID EQUAL . E SEMICOLON
    (13) var_declaration -> PESOS ID EQUAL . typevar SEMICOLON
    (53) E -> . E PLUS T
    (54) E -> . E MINUS T
    (55) E -> . T
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL
    (56) T -> . T TIMES F
    (57) T -> . T DIVIDE F
    (58) T -> . F
    (59) F -> . PESOS ID
    (60) F -> . PESOS ID LBRACKET ENTERO RBRACKET
    (61) F -> . ENTERO
    (62) F -> . PESOS ID LBLOCK typevar RBLOCK
    (63) F -> . LPAREN E RPAREN

    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 63
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45
    PESOS           shift and go to state 68
    LPAREN          shift and go to state 67

    typevar                        shift and go to state 64
    E                              shift and go to state 62
    T                              shift and go to state 66
    F                              shift and go to state 65

state 37

    (12) var_declaration -> PESOS ID incdec . SEMICOLON

    SEMICOLON       shift and go to state 69


state 38

    (82) type -> typevar .

    RPAREN          reduce using rule 82 (type -> typevar .)
    LESS            reduce using rule 82 (type -> typevar .)
    GREATER         reduce using rule 82 (type -> typevar .)
    ISEQUAL         reduce using rule 82 (type -> typevar .)
    LESSEQUAL       reduce using rule 82 (type -> typevar .)
    GREATEREQUAL    reduce using rule 82 (type -> typevar .)
    DEQUAL          reduce using rule 82 (type -> typevar .)
    AND             reduce using rule 82 (type -> typevar .)
    ANDS            reduce using rule 82 (type -> typevar .)
    ORS             reduce using rule 82 (type -> typevar .)
    OR              reduce using rule 82 (type -> typevar .)
    SEMICOLON       reduce using rule 82 (type -> typevar .)


state 39

    (83) type -> var_declaration_gen .

    RPAREN          reduce using rule 83 (type -> var_declaration_gen .)
    LESS            reduce using rule 83 (type -> var_declaration_gen .)
    GREATER         reduce using rule 83 (type -> var_declaration_gen .)
    ISEQUAL         reduce using rule 83 (type -> var_declaration_gen .)
    LESSEQUAL       reduce using rule 83 (type -> var_declaration_gen .)
    GREATEREQUAL    reduce using rule 83 (type -> var_declaration_gen .)
    DEQUAL          reduce using rule 83 (type -> var_declaration_gen .)
    AND             reduce using rule 83 (type -> var_declaration_gen .)
    ANDS            reduce using rule 83 (type -> var_declaration_gen .)
    ORS             reduce using rule 83 (type -> var_declaration_gen .)
    OR              reduce using rule 83 (type -> var_declaration_gen .)
    SEMICOLON       reduce using rule 83 (type -> var_declaration_gen .)


state 40

    (48) typevar -> CADENA .

    EQUALGREATER    reduce using rule 48 (typevar -> CADENA .)
    COMMA           reduce using rule 48 (typevar -> CADENA .)
    RBLOCK          reduce using rule 48 (typevar -> CADENA .)
    RPAREN          reduce using rule 48 (typevar -> CADENA .)
    LESS            reduce using rule 48 (typevar -> CADENA .)
    GREATER         reduce using rule 48 (typevar -> CADENA .)
    ISEQUAL         reduce using rule 48 (typevar -> CADENA .)
    LESSEQUAL       reduce using rule 48 (typevar -> CADENA .)
    GREATEREQUAL    reduce using rule 48 (typevar -> CADENA .)
    DEQUAL          reduce using rule 48 (typevar -> CADENA .)
    AND             reduce using rule 48 (typevar -> CADENA .)
    ANDS            reduce using rule 48 (typevar -> CADENA .)
    ORS             reduce using rule 48 (typevar -> CADENA .)
    OR              reduce using rule 48 (typevar -> CADENA .)
    SEMICOLON       reduce using rule 48 (typevar -> CADENA .)
    RBRACKET        reduce using rule 48 (typevar -> CADENA .)


state 41

    (51) typevar -> OCTAL .

    EQUALGREATER    reduce using rule 51 (typevar -> OCTAL .)
    COMMA           reduce using rule 51 (typevar -> OCTAL .)
    RBLOCK          reduce using rule 51 (typevar -> OCTAL .)
    RPAREN          reduce using rule 51 (typevar -> OCTAL .)
    LESS            reduce using rule 51 (typevar -> OCTAL .)
    GREATER         reduce using rule 51 (typevar -> OCTAL .)
    ISEQUAL         reduce using rule 51 (typevar -> OCTAL .)
    LESSEQUAL       reduce using rule 51 (typevar -> OCTAL .)
    GREATEREQUAL    reduce using rule 51 (typevar -> OCTAL .)
    DEQUAL          reduce using rule 51 (typevar -> OCTAL .)
    AND             reduce using rule 51 (typevar -> OCTAL .)
    ANDS            reduce using rule 51 (typevar -> OCTAL .)
    ORS             reduce using rule 51 (typevar -> OCTAL .)
    OR              reduce using rule 51 (typevar -> OCTAL .)
    SEMICOLON       reduce using rule 51 (typevar -> OCTAL .)
    RBRACKET        reduce using rule 51 (typevar -> OCTAL .)


state 42

    (66) ciclos -> WHILE LPAREN cond . RPAREN LBLOCK declaration_list RBLOCK
    (85) cond -> cond . log cond
    (72) log -> . LESS
    (73) log -> . GREATER
    (74) log -> . ISEQUAL
    (75) log -> . LESSEQUAL
    (76) log -> . GREATEREQUAL
    (77) log -> . DEQUAL
    (78) log -> . AND
    (79) log -> . ANDS
    (80) log -> . ORS
    (81) log -> . OR

    RPAREN          shift and go to state 72
    LESS            shift and go to state 74
    GREATER         shift and go to state 81
    ISEQUAL         shift and go to state 76
    LESSEQUAL       shift and go to state 78
    GREATEREQUAL    shift and go to state 71
    DEQUAL          shift and go to state 75
    AND             shift and go to state 70
    ANDS            shift and go to state 80
    ORS             shift and go to state 77
    OR              shift and go to state 79

    log                            shift and go to state 73

state 43

    (87) cond -> LPAREN . type RPAREN
    (88) cond -> LPAREN . cond RPAREN
    (82) type -> . typevar
    (83) type -> . var_declaration_gen
    (84) cond -> . type
    (85) cond -> . cond log cond
    (86) cond -> . NOT cond
    (87) cond -> . LPAREN type RPAREN
    (88) cond -> . LPAREN cond RPAREN
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL
    (93) var_declaration_gen -> . PESOS ID
    (94) var_declaration_gen -> . PESOS ID LBRACKET ENTERO RBRACKET
    (95) var_declaration_gen -> . PESOS ID LBLOCK typevar RBLOCK
    (96) var_declaration_gen -> . PESOS ID LBLOCK ID RBLOCK

    NOT             shift and go to state 44
    LPAREN          shift and go to state 43
    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45
    PESOS           shift and go to state 22

    typevar                        shift and go to state 38
    cond                           shift and go to state 82
    var_declaration_gen            shift and go to state 39
    type                           shift and go to state 83

state 44

    (86) cond -> NOT . cond
    (84) cond -> . type
    (85) cond -> . cond log cond
    (86) cond -> . NOT cond
    (87) cond -> . LPAREN type RPAREN
    (88) cond -> . LPAREN cond RPAREN
    (82) type -> . typevar
    (83) type -> . var_declaration_gen
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL
    (93) var_declaration_gen -> . PESOS ID
    (94) var_declaration_gen -> . PESOS ID LBRACKET ENTERO RBRACKET
    (95) var_declaration_gen -> . PESOS ID LBLOCK typevar RBLOCK
    (96) var_declaration_gen -> . PESOS ID LBLOCK ID RBLOCK

    NOT             shift and go to state 44
    LPAREN          shift and go to state 43
    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45
    PESOS           shift and go to state 22

    typevar                        shift and go to state 38
    type                           shift and go to state 47
    var_declaration_gen            shift and go to state 39
    cond                           shift and go to state 84

state 45

    (52) typevar -> HEXADECIMAL .

    EQUALGREATER    reduce using rule 52 (typevar -> HEXADECIMAL .)
    COMMA           reduce using rule 52 (typevar -> HEXADECIMAL .)
    RBLOCK          reduce using rule 52 (typevar -> HEXADECIMAL .)
    RPAREN          reduce using rule 52 (typevar -> HEXADECIMAL .)
    LESS            reduce using rule 52 (typevar -> HEXADECIMAL .)
    GREATER         reduce using rule 52 (typevar -> HEXADECIMAL .)
    ISEQUAL         reduce using rule 52 (typevar -> HEXADECIMAL .)
    LESSEQUAL       reduce using rule 52 (typevar -> HEXADECIMAL .)
    GREATEREQUAL    reduce using rule 52 (typevar -> HEXADECIMAL .)
    DEQUAL          reduce using rule 52 (typevar -> HEXADECIMAL .)
    AND             reduce using rule 52 (typevar -> HEXADECIMAL .)
    ANDS            reduce using rule 52 (typevar -> HEXADECIMAL .)
    ORS             reduce using rule 52 (typevar -> HEXADECIMAL .)
    OR              reduce using rule 52 (typevar -> HEXADECIMAL .)
    SEMICOLON       reduce using rule 52 (typevar -> HEXADECIMAL .)
    RBRACKET        reduce using rule 52 (typevar -> HEXADECIMAL .)


state 46

    (50) typevar -> ENTERO .

    EQUALGREATER    reduce using rule 50 (typevar -> ENTERO .)
    COMMA           reduce using rule 50 (typevar -> ENTERO .)
    RBLOCK          reduce using rule 50 (typevar -> ENTERO .)
    RPAREN          reduce using rule 50 (typevar -> ENTERO .)
    LESS            reduce using rule 50 (typevar -> ENTERO .)
    GREATER         reduce using rule 50 (typevar -> ENTERO .)
    ISEQUAL         reduce using rule 50 (typevar -> ENTERO .)
    LESSEQUAL       reduce using rule 50 (typevar -> ENTERO .)
    GREATEREQUAL    reduce using rule 50 (typevar -> ENTERO .)
    DEQUAL          reduce using rule 50 (typevar -> ENTERO .)
    AND             reduce using rule 50 (typevar -> ENTERO .)
    ANDS            reduce using rule 50 (typevar -> ENTERO .)
    ORS             reduce using rule 50 (typevar -> ENTERO .)
    OR              reduce using rule 50 (typevar -> ENTERO .)
    SEMICOLON       reduce using rule 50 (typevar -> ENTERO .)
    RBRACKET        reduce using rule 50 (typevar -> ENTERO .)


state 47

    (84) cond -> type .

    LESS            reduce using rule 84 (cond -> type .)
    GREATER         reduce using rule 84 (cond -> type .)
    ISEQUAL         reduce using rule 84 (cond -> type .)
    LESSEQUAL       reduce using rule 84 (cond -> type .)
    GREATEREQUAL    reduce using rule 84 (cond -> type .)
    DEQUAL          reduce using rule 84 (cond -> type .)
    AND             reduce using rule 84 (cond -> type .)
    ANDS            reduce using rule 84 (cond -> type .)
    ORS             reduce using rule 84 (cond -> type .)
    OR              reduce using rule 84 (cond -> type .)
    RPAREN          reduce using rule 84 (cond -> type .)
    SEMICOLON       reduce using rule 84 (cond -> type .)


state 48

    (49) typevar -> CADENAA .

    EQUALGREATER    reduce using rule 49 (typevar -> CADENAA .)
    COMMA           reduce using rule 49 (typevar -> CADENAA .)
    RBLOCK          reduce using rule 49 (typevar -> CADENAA .)
    RPAREN          reduce using rule 49 (typevar -> CADENAA .)
    LESS            reduce using rule 49 (typevar -> CADENAA .)
    GREATER         reduce using rule 49 (typevar -> CADENAA .)
    ISEQUAL         reduce using rule 49 (typevar -> CADENAA .)
    LESSEQUAL       reduce using rule 49 (typevar -> CADENAA .)
    GREATEREQUAL    reduce using rule 49 (typevar -> CADENAA .)
    DEQUAL          reduce using rule 49 (typevar -> CADENAA .)
    AND             reduce using rule 49 (typevar -> CADENAA .)
    ANDS            reduce using rule 49 (typevar -> CADENAA .)
    ORS             reduce using rule 49 (typevar -> CADENAA .)
    OR              reduce using rule 49 (typevar -> CADENAA .)
    SEMICOLON       reduce using rule 49 (typevar -> CADENAA .)
    RBRACKET        reduce using rule 49 (typevar -> CADENAA .)


state 49

    (99) arg -> var_declaration_gen COMMA . arg
    (97) arg -> . var_declaration_gen
    (98) arg -> . CADENA
    (99) arg -> . var_declaration_gen COMMA arg
    (100) arg -> . CADENA COMMA arg
    (93) var_declaration_gen -> . PESOS ID
    (94) var_declaration_gen -> . PESOS ID LBRACKET ENTERO RBRACKET
    (95) var_declaration_gen -> . PESOS ID LBLOCK typevar RBLOCK
    (96) var_declaration_gen -> . PESOS ID LBLOCK ID RBLOCK

    CADENA          shift and go to state 23
    PESOS           shift and go to state 22

    var_declaration_gen            shift and go to state 21
    arg                            shift and go to state 85

state 50

    (93) var_declaration_gen -> PESOS ID .
    (94) var_declaration_gen -> PESOS ID . LBRACKET ENTERO RBRACKET
    (95) var_declaration_gen -> PESOS ID . LBLOCK typevar RBLOCK
    (96) var_declaration_gen -> PESOS ID . LBLOCK ID RBLOCK

    COMMA           reduce using rule 93 (var_declaration_gen -> PESOS ID .)
    SEMICOLON       reduce using rule 93 (var_declaration_gen -> PESOS ID .)
    RPAREN          reduce using rule 93 (var_declaration_gen -> PESOS ID .)
    LESS            reduce using rule 93 (var_declaration_gen -> PESOS ID .)
    GREATER         reduce using rule 93 (var_declaration_gen -> PESOS ID .)
    ISEQUAL         reduce using rule 93 (var_declaration_gen -> PESOS ID .)
    LESSEQUAL       reduce using rule 93 (var_declaration_gen -> PESOS ID .)
    GREATEREQUAL    reduce using rule 93 (var_declaration_gen -> PESOS ID .)
    DEQUAL          reduce using rule 93 (var_declaration_gen -> PESOS ID .)
    AND             reduce using rule 93 (var_declaration_gen -> PESOS ID .)
    ANDS            reduce using rule 93 (var_declaration_gen -> PESOS ID .)
    ORS             reduce using rule 93 (var_declaration_gen -> PESOS ID .)
    OR              reduce using rule 93 (var_declaration_gen -> PESOS ID .)
    LBRACKET        shift and go to state 86
    LBLOCK          shift and go to state 87


state 51

    (100) arg -> CADENA COMMA . arg
    (97) arg -> . var_declaration_gen
    (98) arg -> . CADENA
    (99) arg -> . var_declaration_gen COMMA arg
    (100) arg -> . CADENA COMMA arg
    (93) var_declaration_gen -> . PESOS ID
    (94) var_declaration_gen -> . PESOS ID LBRACKET ENTERO RBRACKET
    (95) var_declaration_gen -> . PESOS ID LBLOCK typevar RBLOCK
    (96) var_declaration_gen -> . PESOS ID LBLOCK ID RBLOCK

    CADENA          shift and go to state 23
    PESOS           shift and go to state 22

    var_declaration_gen            shift and go to state 21
    arg                            shift and go to state 88

state 52

    (92) print -> PRINT LPAREN arg . RPAREN SEMICOLON

    RPAREN          shift and go to state 89


state 53

    (91) print -> PRINT arg SEMICOLON .

    USE             reduce using rule 91 (print -> PRINT arg SEMICOLON .)
    REQUIRE         reduce using rule 91 (print -> PRINT arg SEMICOLON .)
    PRINT           reduce using rule 91 (print -> PRINT arg SEMICOLON .)
    PESOS           reduce using rule 91 (print -> PRINT arg SEMICOLON .)
    ARROBA          reduce using rule 91 (print -> PRINT arg SEMICOLON .)
    PORCENTAJE      reduce using rule 91 (print -> PRINT arg SEMICOLON .)
    FOR             reduce using rule 91 (print -> PRINT arg SEMICOLON .)
    FOREACH         reduce using rule 91 (print -> PRINT arg SEMICOLON .)
    WHILE           reduce using rule 91 (print -> PRINT arg SEMICOLON .)
    RBLOCK          reduce using rule 91 (print -> PRINT arg SEMICOLON .)
    $end            reduce using rule 91 (print -> PRINT arg SEMICOLON .)


state 54

    (64) ciclos -> FOR LPAREN sent_for . SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK

    SEMICOLON       shift and go to state 90


state 55

    (67) sent_for -> PESOS . ID
    (68) sent_for -> PESOS . ID EQUAL ENTERO
    (70) sent_for -> PESOS . ID EQUAL ENTERO COMMA sent_for

    ID              shift and go to state 91


state 56

    (69) sent_for -> MY . PESOS ID EQUAL ENTERO
    (71) sent_for -> MY . PESOS ID EQUAL ENTERO COMMA sent_for

    PESOS           shift and go to state 92


state 57

    (65) ciclos -> FOREACH PESOS ID . LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK

    LPAREN          shift and go to state 93


state 58

    (17) var_declaration -> PORCENTAJE ID SEMICOLON .

    USE             reduce using rule 17 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    REQUIRE         reduce using rule 17 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    PRINT           reduce using rule 17 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    PESOS           reduce using rule 17 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    ARROBA          reduce using rule 17 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    PORCENTAJE      reduce using rule 17 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    FOR             reduce using rule 17 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    FOREACH         reduce using rule 17 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    WHILE           reduce using rule 17 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    $end            reduce using rule 17 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    RBLOCK          reduce using rule 17 (var_declaration -> PORCENTAJE ID SEMICOLON .)


state 59

    (18) var_declaration -> PORCENTAJE ID EQUAL . LBLOCK lista1 RBLOCK SEMICOLON
    (19) var_declaration -> PORCENTAJE ID EQUAL . LPAREN lista1 RPAREN SEMICOLON
    (20) var_declaration -> PORCENTAJE ID EQUAL . LPAREN lista2 RPAREN SEMICOLON
    (21) var_declaration -> PORCENTAJE ID EQUAL . PORCENTAJE ID SEMICOLON

    LBLOCK          shift and go to state 96
    LPAREN          shift and go to state 95
    PORCENTAJE      shift and go to state 94


state 60

    (14) var_declaration -> ARROBA ID SEMICOLON .

    USE             reduce using rule 14 (var_declaration -> ARROBA ID SEMICOLON .)
    REQUIRE         reduce using rule 14 (var_declaration -> ARROBA ID SEMICOLON .)
    PRINT           reduce using rule 14 (var_declaration -> ARROBA ID SEMICOLON .)
    PESOS           reduce using rule 14 (var_declaration -> ARROBA ID SEMICOLON .)
    ARROBA          reduce using rule 14 (var_declaration -> ARROBA ID SEMICOLON .)
    PORCENTAJE      reduce using rule 14 (var_declaration -> ARROBA ID SEMICOLON .)
    FOR             reduce using rule 14 (var_declaration -> ARROBA ID SEMICOLON .)
    FOREACH         reduce using rule 14 (var_declaration -> ARROBA ID SEMICOLON .)
    WHILE           reduce using rule 14 (var_declaration -> ARROBA ID SEMICOLON .)
    $end            reduce using rule 14 (var_declaration -> ARROBA ID SEMICOLON .)
    RBLOCK          reduce using rule 14 (var_declaration -> ARROBA ID SEMICOLON .)


state 61

    (15) var_declaration -> ARROBA ID EQUAL . LPAREN lista RPAREN SEMICOLON
    (16) var_declaration -> ARROBA ID EQUAL . ARROBA ID SEMICOLON

    LPAREN          shift and go to state 98
    ARROBA          shift and go to state 97


state 62

    (11) var_declaration -> PESOS ID EQUAL E . SEMICOLON
    (53) E -> E . PLUS T
    (54) E -> E . MINUS T

    SEMICOLON       shift and go to state 99
    PLUS            shift and go to state 101
    MINUS           shift and go to state 100


state 63

    (50) typevar -> ENTERO .
    (61) F -> ENTERO .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 50 (typevar -> ENTERO .)
    SEMICOLON       reduce using rule 50 (typevar -> ENTERO .)
    TIMES           reduce using rule 61 (F -> ENTERO .)
    DIVIDE          reduce using rule 61 (F -> ENTERO .)
    PLUS            reduce using rule 61 (F -> ENTERO .)
    MINUS           reduce using rule 61 (F -> ENTERO .)

  ! SEMICOLON       [ reduce using rule 61 (F -> ENTERO .) ]


state 64

    (13) var_declaration -> PESOS ID EQUAL typevar . SEMICOLON

    SEMICOLON       shift and go to state 102


state 65

    (58) T -> F .

    TIMES           reduce using rule 58 (T -> F .)
    DIVIDE          reduce using rule 58 (T -> F .)
    RPAREN          reduce using rule 58 (T -> F .)
    PLUS            reduce using rule 58 (T -> F .)
    MINUS           reduce using rule 58 (T -> F .)
    SEMICOLON       reduce using rule 58 (T -> F .)


state 66

    (55) E -> T .
    (56) T -> T . TIMES F
    (57) T -> T . DIVIDE F

    SEMICOLON       reduce using rule 55 (E -> T .)
    PLUS            reduce using rule 55 (E -> T .)
    MINUS           reduce using rule 55 (E -> T .)
    RPAREN          reduce using rule 55 (E -> T .)
    TIMES           shift and go to state 104
    DIVIDE          shift and go to state 103


state 67

    (63) F -> LPAREN . E RPAREN
    (53) E -> . E PLUS T
    (54) E -> . E MINUS T
    (55) E -> . T
    (56) T -> . T TIMES F
    (57) T -> . T DIVIDE F
    (58) T -> . F
    (59) F -> . PESOS ID
    (60) F -> . PESOS ID LBRACKET ENTERO RBRACKET
    (61) F -> . ENTERO
    (62) F -> . PESOS ID LBLOCK typevar RBLOCK
    (63) F -> . LPAREN E RPAREN

    PESOS           shift and go to state 68
    ENTERO          shift and go to state 106
    LPAREN          shift and go to state 67

    E                              shift and go to state 105
    T                              shift and go to state 66
    F                              shift and go to state 65

state 68

    (59) F -> PESOS . ID
    (60) F -> PESOS . ID LBRACKET ENTERO RBRACKET
    (62) F -> PESOS . ID LBLOCK typevar RBLOCK

    ID              shift and go to state 107


state 69

    (12) var_declaration -> PESOS ID incdec SEMICOLON .

    USE             reduce using rule 12 (var_declaration -> PESOS ID incdec SEMICOLON .)
    REQUIRE         reduce using rule 12 (var_declaration -> PESOS ID incdec SEMICOLON .)
    PRINT           reduce using rule 12 (var_declaration -> PESOS ID incdec SEMICOLON .)
    PESOS           reduce using rule 12 (var_declaration -> PESOS ID incdec SEMICOLON .)
    ARROBA          reduce using rule 12 (var_declaration -> PESOS ID incdec SEMICOLON .)
    PORCENTAJE      reduce using rule 12 (var_declaration -> PESOS ID incdec SEMICOLON .)
    FOR             reduce using rule 12 (var_declaration -> PESOS ID incdec SEMICOLON .)
    FOREACH         reduce using rule 12 (var_declaration -> PESOS ID incdec SEMICOLON .)
    WHILE           reduce using rule 12 (var_declaration -> PESOS ID incdec SEMICOLON .)
    $end            reduce using rule 12 (var_declaration -> PESOS ID incdec SEMICOLON .)
    RBLOCK          reduce using rule 12 (var_declaration -> PESOS ID incdec SEMICOLON .)


state 70

    (78) log -> AND .

    NOT             reduce using rule 78 (log -> AND .)
    LPAREN          reduce using rule 78 (log -> AND .)
    CADENA          reduce using rule 78 (log -> AND .)
    CADENAA         reduce using rule 78 (log -> AND .)
    ENTERO          reduce using rule 78 (log -> AND .)
    OCTAL           reduce using rule 78 (log -> AND .)
    HEXADECIMAL     reduce using rule 78 (log -> AND .)
    PESOS           reduce using rule 78 (log -> AND .)


state 71

    (76) log -> GREATEREQUAL .

    NOT             reduce using rule 76 (log -> GREATEREQUAL .)
    LPAREN          reduce using rule 76 (log -> GREATEREQUAL .)
    CADENA          reduce using rule 76 (log -> GREATEREQUAL .)
    CADENAA         reduce using rule 76 (log -> GREATEREQUAL .)
    ENTERO          reduce using rule 76 (log -> GREATEREQUAL .)
    OCTAL           reduce using rule 76 (log -> GREATEREQUAL .)
    HEXADECIMAL     reduce using rule 76 (log -> GREATEREQUAL .)
    PESOS           reduce using rule 76 (log -> GREATEREQUAL .)


state 72

    (66) ciclos -> WHILE LPAREN cond RPAREN . LBLOCK declaration_list RBLOCK

    LBLOCK          shift and go to state 108


state 73

    (85) cond -> cond log . cond
    (84) cond -> . type
    (85) cond -> . cond log cond
    (86) cond -> . NOT cond
    (87) cond -> . LPAREN type RPAREN
    (88) cond -> . LPAREN cond RPAREN
    (82) type -> . typevar
    (83) type -> . var_declaration_gen
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL
    (93) var_declaration_gen -> . PESOS ID
    (94) var_declaration_gen -> . PESOS ID LBRACKET ENTERO RBRACKET
    (95) var_declaration_gen -> . PESOS ID LBLOCK typevar RBLOCK
    (96) var_declaration_gen -> . PESOS ID LBLOCK ID RBLOCK

    NOT             shift and go to state 44
    LPAREN          shift and go to state 43
    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45
    PESOS           shift and go to state 22

    typevar                        shift and go to state 38
    type                           shift and go to state 47
    var_declaration_gen            shift and go to state 39
    cond                           shift and go to state 109

state 74

    (72) log -> LESS .

    NOT             reduce using rule 72 (log -> LESS .)
    LPAREN          reduce using rule 72 (log -> LESS .)
    CADENA          reduce using rule 72 (log -> LESS .)
    CADENAA         reduce using rule 72 (log -> LESS .)
    ENTERO          reduce using rule 72 (log -> LESS .)
    OCTAL           reduce using rule 72 (log -> LESS .)
    HEXADECIMAL     reduce using rule 72 (log -> LESS .)
    PESOS           reduce using rule 72 (log -> LESS .)


state 75

    (77) log -> DEQUAL .

    NOT             reduce using rule 77 (log -> DEQUAL .)
    LPAREN          reduce using rule 77 (log -> DEQUAL .)
    CADENA          reduce using rule 77 (log -> DEQUAL .)
    CADENAA         reduce using rule 77 (log -> DEQUAL .)
    ENTERO          reduce using rule 77 (log -> DEQUAL .)
    OCTAL           reduce using rule 77 (log -> DEQUAL .)
    HEXADECIMAL     reduce using rule 77 (log -> DEQUAL .)
    PESOS           reduce using rule 77 (log -> DEQUAL .)


state 76

    (74) log -> ISEQUAL .

    NOT             reduce using rule 74 (log -> ISEQUAL .)
    LPAREN          reduce using rule 74 (log -> ISEQUAL .)
    CADENA          reduce using rule 74 (log -> ISEQUAL .)
    CADENAA         reduce using rule 74 (log -> ISEQUAL .)
    ENTERO          reduce using rule 74 (log -> ISEQUAL .)
    OCTAL           reduce using rule 74 (log -> ISEQUAL .)
    HEXADECIMAL     reduce using rule 74 (log -> ISEQUAL .)
    PESOS           reduce using rule 74 (log -> ISEQUAL .)


state 77

    (80) log -> ORS .

    NOT             reduce using rule 80 (log -> ORS .)
    LPAREN          reduce using rule 80 (log -> ORS .)
    CADENA          reduce using rule 80 (log -> ORS .)
    CADENAA         reduce using rule 80 (log -> ORS .)
    ENTERO          reduce using rule 80 (log -> ORS .)
    OCTAL           reduce using rule 80 (log -> ORS .)
    HEXADECIMAL     reduce using rule 80 (log -> ORS .)
    PESOS           reduce using rule 80 (log -> ORS .)


state 78

    (75) log -> LESSEQUAL .

    NOT             reduce using rule 75 (log -> LESSEQUAL .)
    LPAREN          reduce using rule 75 (log -> LESSEQUAL .)
    CADENA          reduce using rule 75 (log -> LESSEQUAL .)
    CADENAA         reduce using rule 75 (log -> LESSEQUAL .)
    ENTERO          reduce using rule 75 (log -> LESSEQUAL .)
    OCTAL           reduce using rule 75 (log -> LESSEQUAL .)
    HEXADECIMAL     reduce using rule 75 (log -> LESSEQUAL .)
    PESOS           reduce using rule 75 (log -> LESSEQUAL .)


state 79

    (81) log -> OR .

    NOT             reduce using rule 81 (log -> OR .)
    LPAREN          reduce using rule 81 (log -> OR .)
    CADENA          reduce using rule 81 (log -> OR .)
    CADENAA         reduce using rule 81 (log -> OR .)
    ENTERO          reduce using rule 81 (log -> OR .)
    OCTAL           reduce using rule 81 (log -> OR .)
    HEXADECIMAL     reduce using rule 81 (log -> OR .)
    PESOS           reduce using rule 81 (log -> OR .)


state 80

    (79) log -> ANDS .

    NOT             reduce using rule 79 (log -> ANDS .)
    LPAREN          reduce using rule 79 (log -> ANDS .)
    CADENA          reduce using rule 79 (log -> ANDS .)
    CADENAA         reduce using rule 79 (log -> ANDS .)
    ENTERO          reduce using rule 79 (log -> ANDS .)
    OCTAL           reduce using rule 79 (log -> ANDS .)
    HEXADECIMAL     reduce using rule 79 (log -> ANDS .)
    PESOS           reduce using rule 79 (log -> ANDS .)


state 81

    (73) log -> GREATER .

    NOT             reduce using rule 73 (log -> GREATER .)
    LPAREN          reduce using rule 73 (log -> GREATER .)
    CADENA          reduce using rule 73 (log -> GREATER .)
    CADENAA         reduce using rule 73 (log -> GREATER .)
    ENTERO          reduce using rule 73 (log -> GREATER .)
    OCTAL           reduce using rule 73 (log -> GREATER .)
    HEXADECIMAL     reduce using rule 73 (log -> GREATER .)
    PESOS           reduce using rule 73 (log -> GREATER .)


state 82

    (88) cond -> LPAREN cond . RPAREN
    (85) cond -> cond . log cond
    (72) log -> . LESS
    (73) log -> . GREATER
    (74) log -> . ISEQUAL
    (75) log -> . LESSEQUAL
    (76) log -> . GREATEREQUAL
    (77) log -> . DEQUAL
    (78) log -> . AND
    (79) log -> . ANDS
    (80) log -> . ORS
    (81) log -> . OR

    RPAREN          shift and go to state 110
    LESS            shift and go to state 74
    GREATER         shift and go to state 81
    ISEQUAL         shift and go to state 76
    LESSEQUAL       shift and go to state 78
    GREATEREQUAL    shift and go to state 71
    DEQUAL          shift and go to state 75
    AND             shift and go to state 70
    ANDS            shift and go to state 80
    ORS             shift and go to state 77
    OR              shift and go to state 79

    log                            shift and go to state 73

state 83

    (87) cond -> LPAREN type . RPAREN
    (84) cond -> type .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 111
    LESS            reduce using rule 84 (cond -> type .)
    GREATER         reduce using rule 84 (cond -> type .)
    ISEQUAL         reduce using rule 84 (cond -> type .)
    LESSEQUAL       reduce using rule 84 (cond -> type .)
    GREATEREQUAL    reduce using rule 84 (cond -> type .)
    DEQUAL          reduce using rule 84 (cond -> type .)
    AND             reduce using rule 84 (cond -> type .)
    ANDS            reduce using rule 84 (cond -> type .)
    ORS             reduce using rule 84 (cond -> type .)
    OR              reduce using rule 84 (cond -> type .)

  ! RPAREN          [ reduce using rule 84 (cond -> type .) ]


state 84

    (86) cond -> NOT cond .
    (85) cond -> cond . log cond
    (72) log -> . LESS
    (73) log -> . GREATER
    (74) log -> . ISEQUAL
    (75) log -> . LESSEQUAL
    (76) log -> . GREATEREQUAL
    (77) log -> . DEQUAL
    (78) log -> . AND
    (79) log -> . ANDS
    (80) log -> . ORS
    (81) log -> . OR

  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for DEQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for ANDS resolved as shift
  ! shift/reduce conflict for ORS resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 86 (cond -> NOT cond .)
    SEMICOLON       reduce using rule 86 (cond -> NOT cond .)
    LESS            shift and go to state 74
    GREATER         shift and go to state 81
    ISEQUAL         shift and go to state 76
    LESSEQUAL       shift and go to state 78
    GREATEREQUAL    shift and go to state 71
    DEQUAL          shift and go to state 75
    AND             shift and go to state 70
    ANDS            shift and go to state 80
    ORS             shift and go to state 77
    OR              shift and go to state 79

  ! LESS            [ reduce using rule 86 (cond -> NOT cond .) ]
  ! GREATER         [ reduce using rule 86 (cond -> NOT cond .) ]
  ! ISEQUAL         [ reduce using rule 86 (cond -> NOT cond .) ]
  ! LESSEQUAL       [ reduce using rule 86 (cond -> NOT cond .) ]
  ! GREATEREQUAL    [ reduce using rule 86 (cond -> NOT cond .) ]
  ! DEQUAL          [ reduce using rule 86 (cond -> NOT cond .) ]
  ! AND             [ reduce using rule 86 (cond -> NOT cond .) ]
  ! ANDS            [ reduce using rule 86 (cond -> NOT cond .) ]
  ! ORS             [ reduce using rule 86 (cond -> NOT cond .) ]
  ! OR              [ reduce using rule 86 (cond -> NOT cond .) ]

    log                            shift and go to state 73

state 85

    (99) arg -> var_declaration_gen COMMA arg .

    RPAREN          reduce using rule 99 (arg -> var_declaration_gen COMMA arg .)
    SEMICOLON       reduce using rule 99 (arg -> var_declaration_gen COMMA arg .)


state 86

    (94) var_declaration_gen -> PESOS ID LBRACKET . ENTERO RBRACKET

    ENTERO          shift and go to state 112


state 87

    (95) var_declaration_gen -> PESOS ID LBLOCK . typevar RBLOCK
    (96) var_declaration_gen -> PESOS ID LBLOCK . ID RBLOCK
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL

    ID              shift and go to state 114
    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45

    typevar                        shift and go to state 113

state 88

    (100) arg -> CADENA COMMA arg .

    RPAREN          reduce using rule 100 (arg -> CADENA COMMA arg .)
    SEMICOLON       reduce using rule 100 (arg -> CADENA COMMA arg .)


state 89

    (92) print -> PRINT LPAREN arg RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 115


state 90

    (64) ciclos -> FOR LPAREN sent_for SEMICOLON . cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK
    (84) cond -> . type
    (85) cond -> . cond log cond
    (86) cond -> . NOT cond
    (87) cond -> . LPAREN type RPAREN
    (88) cond -> . LPAREN cond RPAREN
    (82) type -> . typevar
    (83) type -> . var_declaration_gen
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL
    (93) var_declaration_gen -> . PESOS ID
    (94) var_declaration_gen -> . PESOS ID LBRACKET ENTERO RBRACKET
    (95) var_declaration_gen -> . PESOS ID LBLOCK typevar RBLOCK
    (96) var_declaration_gen -> . PESOS ID LBLOCK ID RBLOCK

    NOT             shift and go to state 44
    LPAREN          shift and go to state 43
    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45
    PESOS           shift and go to state 22

    typevar                        shift and go to state 38
    cond                           shift and go to state 116
    type                           shift and go to state 47
    var_declaration_gen            shift and go to state 39

state 91

    (67) sent_for -> PESOS ID .
    (68) sent_for -> PESOS ID . EQUAL ENTERO
    (70) sent_for -> PESOS ID . EQUAL ENTERO COMMA sent_for

    SEMICOLON       reduce using rule 67 (sent_for -> PESOS ID .)
    EQUAL           shift and go to state 117


state 92

    (69) sent_for -> MY PESOS . ID EQUAL ENTERO
    (71) sent_for -> MY PESOS . ID EQUAL ENTERO COMMA sent_for

    ID              shift and go to state 118


state 93

    (65) ciclos -> FOREACH PESOS ID LPAREN . ARROBA ID RPAREN LBLOCK declaration_list RBLOCK

    ARROBA          shift and go to state 119


state 94

    (21) var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE . ID SEMICOLON

    ID              shift and go to state 120


state 95

    (19) var_declaration -> PORCENTAJE ID EQUAL LPAREN . lista1 RPAREN SEMICOLON
    (20) var_declaration -> PORCENTAJE ID EQUAL LPAREN . lista2 RPAREN SEMICOLON
    (34) lista1 -> . typevar EQUALGREATER typevar COMMA lista1
    (35) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (36) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (37) lista1 -> . typevar EQUALGREATER typevar
    (38) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN
    (39) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET
    (40) lista1 -> . ID EQUALGREATER typevar COMMA lista1
    (41) lista1 -> . ID EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (42) lista1 -> . ID EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (43) lista1 -> . ID EQUALGREATER typevar
    (44) lista1 -> . ID EQUALGREATER LPAREN lista RPAREN
    (45) lista1 -> . ID EQUALGREATER LBRACKET lista RBRACKET
    (22) lista2 -> . typevar COMMA typevar COMMA lista2
    (23) lista2 -> . typevar COMMA LPAREN lista RPAREN COMMA lista2
    (24) lista2 -> . typevar COMMA LBRACKET lista RBRACKET COMMA lista2
    (25) lista2 -> . typevar COMMA typevar
    (26) lista2 -> . typevar COMMA LPAREN lista RPAREN
    (27) lista2 -> . typevar COMMA LBRACKET lista RBRACKET
    (28) lista2 -> . ID COMMA typevar COMMA lista2
    (29) lista2 -> . ID COMMA LPAREN lista RPAREN COMMA lista2
    (30) lista2 -> . ID COMMA LBRACKET lista RBRACKET COMMA lista2
    (31) lista2 -> . ID COMMA typevar
    (32) lista2 -> . ID COMMA LPAREN lista RPAREN
    (33) lista2 -> . ID COMMA LBRACKET lista RBRACKET
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL

    ID              shift and go to state 123
    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45

    typevar                        shift and go to state 121
    lista1                         shift and go to state 122
    lista2                         shift and go to state 124

state 96

    (18) var_declaration -> PORCENTAJE ID EQUAL LBLOCK . lista1 RBLOCK SEMICOLON
    (34) lista1 -> . typevar EQUALGREATER typevar COMMA lista1
    (35) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (36) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (37) lista1 -> . typevar EQUALGREATER typevar
    (38) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN
    (39) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET
    (40) lista1 -> . ID EQUALGREATER typevar COMMA lista1
    (41) lista1 -> . ID EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (42) lista1 -> . ID EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (43) lista1 -> . ID EQUALGREATER typevar
    (44) lista1 -> . ID EQUALGREATER LPAREN lista RPAREN
    (45) lista1 -> . ID EQUALGREATER LBRACKET lista RBRACKET
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL

    ID              shift and go to state 127
    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45

    typevar                        shift and go to state 125
    lista1                         shift and go to state 126

state 97

    (16) var_declaration -> ARROBA ID EQUAL ARROBA . ID SEMICOLON

    ID              shift and go to state 128


state 98

    (15) var_declaration -> ARROBA ID EQUAL LPAREN . lista RPAREN SEMICOLON
    (46) lista -> . typevar COMMA lista
    (47) lista -> . typevar
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45

    typevar                        shift and go to state 129
    lista                          shift and go to state 130

state 99

    (11) var_declaration -> PESOS ID EQUAL E SEMICOLON .

    USE             reduce using rule 11 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    REQUIRE         reduce using rule 11 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    PRINT           reduce using rule 11 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    PESOS           reduce using rule 11 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    ARROBA          reduce using rule 11 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    PORCENTAJE      reduce using rule 11 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    FOR             reduce using rule 11 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    FOREACH         reduce using rule 11 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    WHILE           reduce using rule 11 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    $end            reduce using rule 11 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    RBLOCK          reduce using rule 11 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)


state 100

    (54) E -> E MINUS . T
    (56) T -> . T TIMES F
    (57) T -> . T DIVIDE F
    (58) T -> . F
    (59) F -> . PESOS ID
    (60) F -> . PESOS ID LBRACKET ENTERO RBRACKET
    (61) F -> . ENTERO
    (62) F -> . PESOS ID LBLOCK typevar RBLOCK
    (63) F -> . LPAREN E RPAREN

    PESOS           shift and go to state 68
    ENTERO          shift and go to state 106
    LPAREN          shift and go to state 67

    T                              shift and go to state 131
    F                              shift and go to state 65

state 101

    (53) E -> E PLUS . T
    (56) T -> . T TIMES F
    (57) T -> . T DIVIDE F
    (58) T -> . F
    (59) F -> . PESOS ID
    (60) F -> . PESOS ID LBRACKET ENTERO RBRACKET
    (61) F -> . ENTERO
    (62) F -> . PESOS ID LBLOCK typevar RBLOCK
    (63) F -> . LPAREN E RPAREN

    PESOS           shift and go to state 68
    ENTERO          shift and go to state 106
    LPAREN          shift and go to state 67

    T                              shift and go to state 132
    F                              shift and go to state 65

state 102

    (13) var_declaration -> PESOS ID EQUAL typevar SEMICOLON .

    USE             reduce using rule 13 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    REQUIRE         reduce using rule 13 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    PRINT           reduce using rule 13 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    PESOS           reduce using rule 13 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    ARROBA          reduce using rule 13 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    PORCENTAJE      reduce using rule 13 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    FOR             reduce using rule 13 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    FOREACH         reduce using rule 13 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    WHILE           reduce using rule 13 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    $end            reduce using rule 13 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    RBLOCK          reduce using rule 13 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)


state 103

    (57) T -> T DIVIDE . F
    (59) F -> . PESOS ID
    (60) F -> . PESOS ID LBRACKET ENTERO RBRACKET
    (61) F -> . ENTERO
    (62) F -> . PESOS ID LBLOCK typevar RBLOCK
    (63) F -> . LPAREN E RPAREN

    PESOS           shift and go to state 68
    ENTERO          shift and go to state 106
    LPAREN          shift and go to state 67

    F                              shift and go to state 133

state 104

    (56) T -> T TIMES . F
    (59) F -> . PESOS ID
    (60) F -> . PESOS ID LBRACKET ENTERO RBRACKET
    (61) F -> . ENTERO
    (62) F -> . PESOS ID LBLOCK typevar RBLOCK
    (63) F -> . LPAREN E RPAREN

    PESOS           shift and go to state 68
    ENTERO          shift and go to state 106
    LPAREN          shift and go to state 67

    F                              shift and go to state 134

state 105

    (63) F -> LPAREN E . RPAREN
    (53) E -> E . PLUS T
    (54) E -> E . MINUS T

    RPAREN          shift and go to state 135
    PLUS            shift and go to state 101
    MINUS           shift and go to state 100


state 106

    (61) F -> ENTERO .

    TIMES           reduce using rule 61 (F -> ENTERO .)
    DIVIDE          reduce using rule 61 (F -> ENTERO .)
    RPAREN          reduce using rule 61 (F -> ENTERO .)
    PLUS            reduce using rule 61 (F -> ENTERO .)
    MINUS           reduce using rule 61 (F -> ENTERO .)
    SEMICOLON       reduce using rule 61 (F -> ENTERO .)


state 107

    (59) F -> PESOS ID .
    (60) F -> PESOS ID . LBRACKET ENTERO RBRACKET
    (62) F -> PESOS ID . LBLOCK typevar RBLOCK

    TIMES           reduce using rule 59 (F -> PESOS ID .)
    DIVIDE          reduce using rule 59 (F -> PESOS ID .)
    RPAREN          reduce using rule 59 (F -> PESOS ID .)
    PLUS            reduce using rule 59 (F -> PESOS ID .)
    MINUS           reduce using rule 59 (F -> PESOS ID .)
    SEMICOLON       reduce using rule 59 (F -> PESOS ID .)
    LBRACKET        shift and go to state 136
    LBLOCK          shift and go to state 137


state 108

    (66) ciclos -> WHILE LPAREN cond RPAREN LBLOCK . declaration_list RBLOCK
    (2) declaration_list -> . declaration declaration_list
    (3) declaration_list -> . declaration
    (4) declaration -> . header_declaration
    (5) declaration -> . print
    (6) declaration -> . var_declaration
    (7) declaration -> . ciclos
    (8) header_declaration -> . USE ID SEMICOLON
    (9) header_declaration -> . REQUIRE ID SEMICOLON
    (91) print -> . PRINT arg SEMICOLON
    (92) print -> . PRINT LPAREN arg RPAREN SEMICOLON
    (10) var_declaration -> . PESOS ID SEMICOLON
    (11) var_declaration -> . PESOS ID EQUAL E SEMICOLON
    (12) var_declaration -> . PESOS ID incdec SEMICOLON
    (13) var_declaration -> . PESOS ID EQUAL typevar SEMICOLON
    (14) var_declaration -> . ARROBA ID SEMICOLON
    (15) var_declaration -> . ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON
    (16) var_declaration -> . ARROBA ID EQUAL ARROBA ID SEMICOLON
    (17) var_declaration -> . PORCENTAJE ID SEMICOLON
    (18) var_declaration -> . PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON
    (19) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON
    (20) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON
    (21) var_declaration -> . PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON
    (64) ciclos -> . FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK
    (65) ciclos -> . FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK
    (66) ciclos -> . WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK

    USE             shift and go to state 1
    REQUIRE         shift and go to state 2
    PRINT           shift and go to state 6
    PESOS           shift and go to state 3
    ARROBA          shift and go to state 16
    PORCENTAJE      shift and go to state 14
    FOR             shift and go to state 11
    FOREACH         shift and go to state 12
    WHILE           shift and go to state 4

    header_declaration             shift and go to state 10
    declaration_list               shift and go to state 138
    var_declaration                shift and go to state 7
    ciclos                         shift and go to state 5
    declaration                    shift and go to state 13
    print                          shift and go to state 9

state 109

    (85) cond -> cond log cond .
    (85) cond -> cond . log cond
    (72) log -> . LESS
    (73) log -> . GREATER
    (74) log -> . ISEQUAL
    (75) log -> . LESSEQUAL
    (76) log -> . GREATEREQUAL
    (77) log -> . DEQUAL
    (78) log -> . AND
    (79) log -> . ANDS
    (80) log -> . ORS
    (81) log -> . OR

  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for DEQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for ANDS resolved as shift
  ! shift/reduce conflict for ORS resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 85 (cond -> cond log cond .)
    SEMICOLON       reduce using rule 85 (cond -> cond log cond .)
    LESS            shift and go to state 74
    GREATER         shift and go to state 81
    ISEQUAL         shift and go to state 76
    LESSEQUAL       shift and go to state 78
    GREATEREQUAL    shift and go to state 71
    DEQUAL          shift and go to state 75
    AND             shift and go to state 70
    ANDS            shift and go to state 80
    ORS             shift and go to state 77
    OR              shift and go to state 79

  ! LESS            [ reduce using rule 85 (cond -> cond log cond .) ]
  ! GREATER         [ reduce using rule 85 (cond -> cond log cond .) ]
  ! ISEQUAL         [ reduce using rule 85 (cond -> cond log cond .) ]
  ! LESSEQUAL       [ reduce using rule 85 (cond -> cond log cond .) ]
  ! GREATEREQUAL    [ reduce using rule 85 (cond -> cond log cond .) ]
  ! DEQUAL          [ reduce using rule 85 (cond -> cond log cond .) ]
  ! AND             [ reduce using rule 85 (cond -> cond log cond .) ]
  ! ANDS            [ reduce using rule 85 (cond -> cond log cond .) ]
  ! ORS             [ reduce using rule 85 (cond -> cond log cond .) ]
  ! OR              [ reduce using rule 85 (cond -> cond log cond .) ]

    log                            shift and go to state 73

state 110

    (88) cond -> LPAREN cond RPAREN .

    RPAREN          reduce using rule 88 (cond -> LPAREN cond RPAREN .)
    LESS            reduce using rule 88 (cond -> LPAREN cond RPAREN .)
    GREATER         reduce using rule 88 (cond -> LPAREN cond RPAREN .)
    ISEQUAL         reduce using rule 88 (cond -> LPAREN cond RPAREN .)
    LESSEQUAL       reduce using rule 88 (cond -> LPAREN cond RPAREN .)
    GREATEREQUAL    reduce using rule 88 (cond -> LPAREN cond RPAREN .)
    DEQUAL          reduce using rule 88 (cond -> LPAREN cond RPAREN .)
    AND             reduce using rule 88 (cond -> LPAREN cond RPAREN .)
    ANDS            reduce using rule 88 (cond -> LPAREN cond RPAREN .)
    ORS             reduce using rule 88 (cond -> LPAREN cond RPAREN .)
    OR              reduce using rule 88 (cond -> LPAREN cond RPAREN .)
    SEMICOLON       reduce using rule 88 (cond -> LPAREN cond RPAREN .)


state 111

    (87) cond -> LPAREN type RPAREN .

    RPAREN          reduce using rule 87 (cond -> LPAREN type RPAREN .)
    LESS            reduce using rule 87 (cond -> LPAREN type RPAREN .)
    GREATER         reduce using rule 87 (cond -> LPAREN type RPAREN .)
    ISEQUAL         reduce using rule 87 (cond -> LPAREN type RPAREN .)
    LESSEQUAL       reduce using rule 87 (cond -> LPAREN type RPAREN .)
    GREATEREQUAL    reduce using rule 87 (cond -> LPAREN type RPAREN .)
    DEQUAL          reduce using rule 87 (cond -> LPAREN type RPAREN .)
    AND             reduce using rule 87 (cond -> LPAREN type RPAREN .)
    ANDS            reduce using rule 87 (cond -> LPAREN type RPAREN .)
    ORS             reduce using rule 87 (cond -> LPAREN type RPAREN .)
    OR              reduce using rule 87 (cond -> LPAREN type RPAREN .)
    SEMICOLON       reduce using rule 87 (cond -> LPAREN type RPAREN .)


state 112

    (94) var_declaration_gen -> PESOS ID LBRACKET ENTERO . RBRACKET

    RBRACKET        shift and go to state 139


state 113

    (95) var_declaration_gen -> PESOS ID LBLOCK typevar . RBLOCK

    RBLOCK          shift and go to state 140


state 114

    (96) var_declaration_gen -> PESOS ID LBLOCK ID . RBLOCK

    RBLOCK          shift and go to state 141


state 115

    (92) print -> PRINT LPAREN arg RPAREN SEMICOLON .

    USE             reduce using rule 92 (print -> PRINT LPAREN arg RPAREN SEMICOLON .)
    REQUIRE         reduce using rule 92 (print -> PRINT LPAREN arg RPAREN SEMICOLON .)
    PRINT           reduce using rule 92 (print -> PRINT LPAREN arg RPAREN SEMICOLON .)
    PESOS           reduce using rule 92 (print -> PRINT LPAREN arg RPAREN SEMICOLON .)
    ARROBA          reduce using rule 92 (print -> PRINT LPAREN arg RPAREN SEMICOLON .)
    PORCENTAJE      reduce using rule 92 (print -> PRINT LPAREN arg RPAREN SEMICOLON .)
    FOR             reduce using rule 92 (print -> PRINT LPAREN arg RPAREN SEMICOLON .)
    FOREACH         reduce using rule 92 (print -> PRINT LPAREN arg RPAREN SEMICOLON .)
    WHILE           reduce using rule 92 (print -> PRINT LPAREN arg RPAREN SEMICOLON .)
    RBLOCK          reduce using rule 92 (print -> PRINT LPAREN arg RPAREN SEMICOLON .)
    $end            reduce using rule 92 (print -> PRINT LPAREN arg RPAREN SEMICOLON .)


state 116

    (64) ciclos -> FOR LPAREN sent_for SEMICOLON cond . SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK
    (85) cond -> cond . log cond
    (72) log -> . LESS
    (73) log -> . GREATER
    (74) log -> . ISEQUAL
    (75) log -> . LESSEQUAL
    (76) log -> . GREATEREQUAL
    (77) log -> . DEQUAL
    (78) log -> . AND
    (79) log -> . ANDS
    (80) log -> . ORS
    (81) log -> . OR

    SEMICOLON       shift and go to state 142
    LESS            shift and go to state 74
    GREATER         shift and go to state 81
    ISEQUAL         shift and go to state 76
    LESSEQUAL       shift and go to state 78
    GREATEREQUAL    shift and go to state 71
    DEQUAL          shift and go to state 75
    AND             shift and go to state 70
    ANDS            shift and go to state 80
    ORS             shift and go to state 77
    OR              shift and go to state 79

    log                            shift and go to state 73

state 117

    (68) sent_for -> PESOS ID EQUAL . ENTERO
    (70) sent_for -> PESOS ID EQUAL . ENTERO COMMA sent_for

    ENTERO          shift and go to state 143


state 118

    (69) sent_for -> MY PESOS ID . EQUAL ENTERO
    (71) sent_for -> MY PESOS ID . EQUAL ENTERO COMMA sent_for

    EQUAL           shift and go to state 144


state 119

    (65) ciclos -> FOREACH PESOS ID LPAREN ARROBA . ID RPAREN LBLOCK declaration_list RBLOCK

    ID              shift and go to state 145


state 120

    (21) var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID . SEMICOLON

    SEMICOLON       shift and go to state 146


state 121

    (34) lista1 -> typevar . EQUALGREATER typevar COMMA lista1
    (35) lista1 -> typevar . EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (36) lista1 -> typevar . EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (37) lista1 -> typevar . EQUALGREATER typevar
    (38) lista1 -> typevar . EQUALGREATER LPAREN lista RPAREN
    (39) lista1 -> typevar . EQUALGREATER LBRACKET lista RBRACKET
    (22) lista2 -> typevar . COMMA typevar COMMA lista2
    (23) lista2 -> typevar . COMMA LPAREN lista RPAREN COMMA lista2
    (24) lista2 -> typevar . COMMA LBRACKET lista RBRACKET COMMA lista2
    (25) lista2 -> typevar . COMMA typevar
    (26) lista2 -> typevar . COMMA LPAREN lista RPAREN
    (27) lista2 -> typevar . COMMA LBRACKET lista RBRACKET

    EQUALGREATER    shift and go to state 147
    COMMA           shift and go to state 148


state 122

    (19) var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 . RPAREN SEMICOLON

    RPAREN          shift and go to state 149


state 123

    (40) lista1 -> ID . EQUALGREATER typevar COMMA lista1
    (41) lista1 -> ID . EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (42) lista1 -> ID . EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (43) lista1 -> ID . EQUALGREATER typevar
    (44) lista1 -> ID . EQUALGREATER LPAREN lista RPAREN
    (45) lista1 -> ID . EQUALGREATER LBRACKET lista RBRACKET
    (28) lista2 -> ID . COMMA typevar COMMA lista2
    (29) lista2 -> ID . COMMA LPAREN lista RPAREN COMMA lista2
    (30) lista2 -> ID . COMMA LBRACKET lista RBRACKET COMMA lista2
    (31) lista2 -> ID . COMMA typevar
    (32) lista2 -> ID . COMMA LPAREN lista RPAREN
    (33) lista2 -> ID . COMMA LBRACKET lista RBRACKET

    EQUALGREATER    shift and go to state 150
    COMMA           shift and go to state 151


state 124

    (20) var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 . RPAREN SEMICOLON

    RPAREN          shift and go to state 152


state 125

    (34) lista1 -> typevar . EQUALGREATER typevar COMMA lista1
    (35) lista1 -> typevar . EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (36) lista1 -> typevar . EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (37) lista1 -> typevar . EQUALGREATER typevar
    (38) lista1 -> typevar . EQUALGREATER LPAREN lista RPAREN
    (39) lista1 -> typevar . EQUALGREATER LBRACKET lista RBRACKET

    EQUALGREATER    shift and go to state 147


state 126

    (18) var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 . RBLOCK SEMICOLON

    RBLOCK          shift and go to state 153


state 127

    (40) lista1 -> ID . EQUALGREATER typevar COMMA lista1
    (41) lista1 -> ID . EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (42) lista1 -> ID . EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (43) lista1 -> ID . EQUALGREATER typevar
    (44) lista1 -> ID . EQUALGREATER LPAREN lista RPAREN
    (45) lista1 -> ID . EQUALGREATER LBRACKET lista RBRACKET

    EQUALGREATER    shift and go to state 150


state 128

    (16) var_declaration -> ARROBA ID EQUAL ARROBA ID . SEMICOLON

    SEMICOLON       shift and go to state 154


state 129

    (46) lista -> typevar . COMMA lista
    (47) lista -> typevar .

    COMMA           shift and go to state 155
    RPAREN          reduce using rule 47 (lista -> typevar .)
    RBRACKET        reduce using rule 47 (lista -> typevar .)


state 130

    (15) var_declaration -> ARROBA ID EQUAL LPAREN lista . RPAREN SEMICOLON

    RPAREN          shift and go to state 156


state 131

    (54) E -> E MINUS T .
    (56) T -> T . TIMES F
    (57) T -> T . DIVIDE F

    SEMICOLON       reduce using rule 54 (E -> E MINUS T .)
    PLUS            reduce using rule 54 (E -> E MINUS T .)
    MINUS           reduce using rule 54 (E -> E MINUS T .)
    RPAREN          reduce using rule 54 (E -> E MINUS T .)
    TIMES           shift and go to state 104
    DIVIDE          shift and go to state 103


state 132

    (53) E -> E PLUS T .
    (56) T -> T . TIMES F
    (57) T -> T . DIVIDE F

    SEMICOLON       reduce using rule 53 (E -> E PLUS T .)
    PLUS            reduce using rule 53 (E -> E PLUS T .)
    MINUS           reduce using rule 53 (E -> E PLUS T .)
    RPAREN          reduce using rule 53 (E -> E PLUS T .)
    TIMES           shift and go to state 104
    DIVIDE          shift and go to state 103


state 133

    (57) T -> T DIVIDE F .

    TIMES           reduce using rule 57 (T -> T DIVIDE F .)
    DIVIDE          reduce using rule 57 (T -> T DIVIDE F .)
    RPAREN          reduce using rule 57 (T -> T DIVIDE F .)
    PLUS            reduce using rule 57 (T -> T DIVIDE F .)
    MINUS           reduce using rule 57 (T -> T DIVIDE F .)
    SEMICOLON       reduce using rule 57 (T -> T DIVIDE F .)


state 134

    (56) T -> T TIMES F .

    TIMES           reduce using rule 56 (T -> T TIMES F .)
    DIVIDE          reduce using rule 56 (T -> T TIMES F .)
    RPAREN          reduce using rule 56 (T -> T TIMES F .)
    PLUS            reduce using rule 56 (T -> T TIMES F .)
    MINUS           reduce using rule 56 (T -> T TIMES F .)
    SEMICOLON       reduce using rule 56 (T -> T TIMES F .)


state 135

    (63) F -> LPAREN E RPAREN .

    TIMES           reduce using rule 63 (F -> LPAREN E RPAREN .)
    DIVIDE          reduce using rule 63 (F -> LPAREN E RPAREN .)
    RPAREN          reduce using rule 63 (F -> LPAREN E RPAREN .)
    PLUS            reduce using rule 63 (F -> LPAREN E RPAREN .)
    MINUS           reduce using rule 63 (F -> LPAREN E RPAREN .)
    SEMICOLON       reduce using rule 63 (F -> LPAREN E RPAREN .)


state 136

    (60) F -> PESOS ID LBRACKET . ENTERO RBRACKET

    ENTERO          shift and go to state 157


state 137

    (62) F -> PESOS ID LBLOCK . typevar RBLOCK
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45

    typevar                        shift and go to state 158

state 138

    (66) ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list . RBLOCK

    RBLOCK          shift and go to state 159


state 139

    (94) var_declaration_gen -> PESOS ID LBRACKET ENTERO RBRACKET .

    COMMA           reduce using rule 94 (var_declaration_gen -> PESOS ID LBRACKET ENTERO RBRACKET .)
    SEMICOLON       reduce using rule 94 (var_declaration_gen -> PESOS ID LBRACKET ENTERO RBRACKET .)
    RPAREN          reduce using rule 94 (var_declaration_gen -> PESOS ID LBRACKET ENTERO RBRACKET .)
    LESS            reduce using rule 94 (var_declaration_gen -> PESOS ID LBRACKET ENTERO RBRACKET .)
    GREATER         reduce using rule 94 (var_declaration_gen -> PESOS ID LBRACKET ENTERO RBRACKET .)
    ISEQUAL         reduce using rule 94 (var_declaration_gen -> PESOS ID LBRACKET ENTERO RBRACKET .)
    LESSEQUAL       reduce using rule 94 (var_declaration_gen -> PESOS ID LBRACKET ENTERO RBRACKET .)
    GREATEREQUAL    reduce using rule 94 (var_declaration_gen -> PESOS ID LBRACKET ENTERO RBRACKET .)
    DEQUAL          reduce using rule 94 (var_declaration_gen -> PESOS ID LBRACKET ENTERO RBRACKET .)
    AND             reduce using rule 94 (var_declaration_gen -> PESOS ID LBRACKET ENTERO RBRACKET .)
    ANDS            reduce using rule 94 (var_declaration_gen -> PESOS ID LBRACKET ENTERO RBRACKET .)
    ORS             reduce using rule 94 (var_declaration_gen -> PESOS ID LBRACKET ENTERO RBRACKET .)
    OR              reduce using rule 94 (var_declaration_gen -> PESOS ID LBRACKET ENTERO RBRACKET .)


state 140

    (95) var_declaration_gen -> PESOS ID LBLOCK typevar RBLOCK .

    COMMA           reduce using rule 95 (var_declaration_gen -> PESOS ID LBLOCK typevar RBLOCK .)
    SEMICOLON       reduce using rule 95 (var_declaration_gen -> PESOS ID LBLOCK typevar RBLOCK .)
    RPAREN          reduce using rule 95 (var_declaration_gen -> PESOS ID LBLOCK typevar RBLOCK .)
    LESS            reduce using rule 95 (var_declaration_gen -> PESOS ID LBLOCK typevar RBLOCK .)
    GREATER         reduce using rule 95 (var_declaration_gen -> PESOS ID LBLOCK typevar RBLOCK .)
    ISEQUAL         reduce using rule 95 (var_declaration_gen -> PESOS ID LBLOCK typevar RBLOCK .)
    LESSEQUAL       reduce using rule 95 (var_declaration_gen -> PESOS ID LBLOCK typevar RBLOCK .)
    GREATEREQUAL    reduce using rule 95 (var_declaration_gen -> PESOS ID LBLOCK typevar RBLOCK .)
    DEQUAL          reduce using rule 95 (var_declaration_gen -> PESOS ID LBLOCK typevar RBLOCK .)
    AND             reduce using rule 95 (var_declaration_gen -> PESOS ID LBLOCK typevar RBLOCK .)
    ANDS            reduce using rule 95 (var_declaration_gen -> PESOS ID LBLOCK typevar RBLOCK .)
    ORS             reduce using rule 95 (var_declaration_gen -> PESOS ID LBLOCK typevar RBLOCK .)
    OR              reduce using rule 95 (var_declaration_gen -> PESOS ID LBLOCK typevar RBLOCK .)


state 141

    (96) var_declaration_gen -> PESOS ID LBLOCK ID RBLOCK .

    COMMA           reduce using rule 96 (var_declaration_gen -> PESOS ID LBLOCK ID RBLOCK .)
    SEMICOLON       reduce using rule 96 (var_declaration_gen -> PESOS ID LBLOCK ID RBLOCK .)
    RPAREN          reduce using rule 96 (var_declaration_gen -> PESOS ID LBLOCK ID RBLOCK .)
    LESS            reduce using rule 96 (var_declaration_gen -> PESOS ID LBLOCK ID RBLOCK .)
    GREATER         reduce using rule 96 (var_declaration_gen -> PESOS ID LBLOCK ID RBLOCK .)
    ISEQUAL         reduce using rule 96 (var_declaration_gen -> PESOS ID LBLOCK ID RBLOCK .)
    LESSEQUAL       reduce using rule 96 (var_declaration_gen -> PESOS ID LBLOCK ID RBLOCK .)
    GREATEREQUAL    reduce using rule 96 (var_declaration_gen -> PESOS ID LBLOCK ID RBLOCK .)
    DEQUAL          reduce using rule 96 (var_declaration_gen -> PESOS ID LBLOCK ID RBLOCK .)
    AND             reduce using rule 96 (var_declaration_gen -> PESOS ID LBLOCK ID RBLOCK .)
    ANDS            reduce using rule 96 (var_declaration_gen -> PESOS ID LBLOCK ID RBLOCK .)
    ORS             reduce using rule 96 (var_declaration_gen -> PESOS ID LBLOCK ID RBLOCK .)
    OR              reduce using rule 96 (var_declaration_gen -> PESOS ID LBLOCK ID RBLOCK .)


state 142

    (64) ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON . PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK

    PESOS           shift and go to state 160


state 143

    (68) sent_for -> PESOS ID EQUAL ENTERO .
    (70) sent_for -> PESOS ID EQUAL ENTERO . COMMA sent_for

    SEMICOLON       reduce using rule 68 (sent_for -> PESOS ID EQUAL ENTERO .)
    COMMA           shift and go to state 161


state 144

    (69) sent_for -> MY PESOS ID EQUAL . ENTERO
    (71) sent_for -> MY PESOS ID EQUAL . ENTERO COMMA sent_for

    ENTERO          shift and go to state 162


state 145

    (65) ciclos -> FOREACH PESOS ID LPAREN ARROBA ID . RPAREN LBLOCK declaration_list RBLOCK

    RPAREN          shift and go to state 163


state 146

    (21) var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .

    USE             reduce using rule 21 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    REQUIRE         reduce using rule 21 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    PRINT           reduce using rule 21 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    PESOS           reduce using rule 21 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    ARROBA          reduce using rule 21 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    PORCENTAJE      reduce using rule 21 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    FOR             reduce using rule 21 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    FOREACH         reduce using rule 21 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    WHILE           reduce using rule 21 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    $end            reduce using rule 21 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    RBLOCK          reduce using rule 21 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)


state 147

    (34) lista1 -> typevar EQUALGREATER . typevar COMMA lista1
    (35) lista1 -> typevar EQUALGREATER . LPAREN lista RPAREN COMMA lista1
    (36) lista1 -> typevar EQUALGREATER . LBRACKET lista RBRACKET COMMA lista1
    (37) lista1 -> typevar EQUALGREATER . typevar
    (38) lista1 -> typevar EQUALGREATER . LPAREN lista RPAREN
    (39) lista1 -> typevar EQUALGREATER . LBRACKET lista RBRACKET
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL

    LPAREN          shift and go to state 166
    LBRACKET        shift and go to state 165
    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45

    typevar                        shift and go to state 164

state 148

    (22) lista2 -> typevar COMMA . typevar COMMA lista2
    (23) lista2 -> typevar COMMA . LPAREN lista RPAREN COMMA lista2
    (24) lista2 -> typevar COMMA . LBRACKET lista RBRACKET COMMA lista2
    (25) lista2 -> typevar COMMA . typevar
    (26) lista2 -> typevar COMMA . LPAREN lista RPAREN
    (27) lista2 -> typevar COMMA . LBRACKET lista RBRACKET
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL

    LPAREN          shift and go to state 168
    LBRACKET        shift and go to state 167
    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45

    typevar                        shift and go to state 169

state 149

    (19) var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 170


state 150

    (40) lista1 -> ID EQUALGREATER . typevar COMMA lista1
    (41) lista1 -> ID EQUALGREATER . LPAREN lista RPAREN COMMA lista1
    (42) lista1 -> ID EQUALGREATER . LBRACKET lista RBRACKET COMMA lista1
    (43) lista1 -> ID EQUALGREATER . typevar
    (44) lista1 -> ID EQUALGREATER . LPAREN lista RPAREN
    (45) lista1 -> ID EQUALGREATER . LBRACKET lista RBRACKET
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL

    LPAREN          shift and go to state 173
    LBRACKET        shift and go to state 172
    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45

    typevar                        shift and go to state 171

state 151

    (28) lista2 -> ID COMMA . typevar COMMA lista2
    (29) lista2 -> ID COMMA . LPAREN lista RPAREN COMMA lista2
    (30) lista2 -> ID COMMA . LBRACKET lista RBRACKET COMMA lista2
    (31) lista2 -> ID COMMA . typevar
    (32) lista2 -> ID COMMA . LPAREN lista RPAREN
    (33) lista2 -> ID COMMA . LBRACKET lista RBRACKET
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL

    LPAREN          shift and go to state 176
    LBRACKET        shift and go to state 175
    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45

    typevar                        shift and go to state 174

state 152

    (20) var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 177


state 153

    (18) var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK . SEMICOLON

    SEMICOLON       shift and go to state 178


state 154

    (16) var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .

    USE             reduce using rule 16 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    REQUIRE         reduce using rule 16 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    PRINT           reduce using rule 16 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    PESOS           reduce using rule 16 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    ARROBA          reduce using rule 16 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    PORCENTAJE      reduce using rule 16 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    FOR             reduce using rule 16 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    FOREACH         reduce using rule 16 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    WHILE           reduce using rule 16 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    $end            reduce using rule 16 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    RBLOCK          reduce using rule 16 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)


state 155

    (46) lista -> typevar COMMA . lista
    (46) lista -> . typevar COMMA lista
    (47) lista -> . typevar
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45

    lista                          shift and go to state 179
    typevar                        shift and go to state 129

state 156

    (15) var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 180


state 157

    (60) F -> PESOS ID LBRACKET ENTERO . RBRACKET

    RBRACKET        shift and go to state 181


state 158

    (62) F -> PESOS ID LBLOCK typevar . RBLOCK

    RBLOCK          shift and go to state 182


state 159

    (66) ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .

    USE             reduce using rule 66 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    REQUIRE         reduce using rule 66 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    PRINT           reduce using rule 66 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    PESOS           reduce using rule 66 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    ARROBA          reduce using rule 66 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    PORCENTAJE      reduce using rule 66 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    FOR             reduce using rule 66 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    FOREACH         reduce using rule 66 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    WHILE           reduce using rule 66 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    $end            reduce using rule 66 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    RBLOCK          reduce using rule 66 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)


state 160

    (64) ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS . ID incdec RPAREN LBLOCK declaration_list RBLOCK

    ID              shift and go to state 183


state 161

    (70) sent_for -> PESOS ID EQUAL ENTERO COMMA . sent_for
    (67) sent_for -> . PESOS ID
    (68) sent_for -> . PESOS ID EQUAL ENTERO
    (69) sent_for -> . MY PESOS ID EQUAL ENTERO
    (70) sent_for -> . PESOS ID EQUAL ENTERO COMMA sent_for
    (71) sent_for -> . MY PESOS ID EQUAL ENTERO COMMA sent_for

    PESOS           shift and go to state 55
    MY              shift and go to state 56

    sent_for                       shift and go to state 184

state 162

    (69) sent_for -> MY PESOS ID EQUAL ENTERO .
    (71) sent_for -> MY PESOS ID EQUAL ENTERO . COMMA sent_for

    SEMICOLON       reduce using rule 69 (sent_for -> MY PESOS ID EQUAL ENTERO .)
    COMMA           shift and go to state 185


state 163

    (65) ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN . LBLOCK declaration_list RBLOCK

    LBLOCK          shift and go to state 186


state 164

    (34) lista1 -> typevar EQUALGREATER typevar . COMMA lista1
    (37) lista1 -> typevar EQUALGREATER typevar .

    COMMA           shift and go to state 187
    RBLOCK          reduce using rule 37 (lista1 -> typevar EQUALGREATER typevar .)
    RPAREN          reduce using rule 37 (lista1 -> typevar EQUALGREATER typevar .)


state 165

    (36) lista1 -> typevar EQUALGREATER LBRACKET . lista RBRACKET COMMA lista1
    (39) lista1 -> typevar EQUALGREATER LBRACKET . lista RBRACKET
    (46) lista -> . typevar COMMA lista
    (47) lista -> . typevar
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45

    lista                          shift and go to state 188
    typevar                        shift and go to state 129

state 166

    (35) lista1 -> typevar EQUALGREATER LPAREN . lista RPAREN COMMA lista1
    (38) lista1 -> typevar EQUALGREATER LPAREN . lista RPAREN
    (46) lista -> . typevar COMMA lista
    (47) lista -> . typevar
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45

    lista                          shift and go to state 189
    typevar                        shift and go to state 129

state 167

    (24) lista2 -> typevar COMMA LBRACKET . lista RBRACKET COMMA lista2
    (27) lista2 -> typevar COMMA LBRACKET . lista RBRACKET
    (46) lista -> . typevar COMMA lista
    (47) lista -> . typevar
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45

    lista                          shift and go to state 190
    typevar                        shift and go to state 129

state 168

    (23) lista2 -> typevar COMMA LPAREN . lista RPAREN COMMA lista2
    (26) lista2 -> typevar COMMA LPAREN . lista RPAREN
    (46) lista -> . typevar COMMA lista
    (47) lista -> . typevar
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45

    lista                          shift and go to state 191
    typevar                        shift and go to state 129

state 169

    (22) lista2 -> typevar COMMA typevar . COMMA lista2
    (25) lista2 -> typevar COMMA typevar .

    COMMA           shift and go to state 192
    RPAREN          reduce using rule 25 (lista2 -> typevar COMMA typevar .)


state 170

    (19) var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON .

    USE             reduce using rule 19 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON .)
    REQUIRE         reduce using rule 19 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON .)
    PRINT           reduce using rule 19 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON .)
    PESOS           reduce using rule 19 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON .)
    ARROBA          reduce using rule 19 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON .)
    PORCENTAJE      reduce using rule 19 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON .)
    FOR             reduce using rule 19 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON .)
    FOREACH         reduce using rule 19 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON .)
    WHILE           reduce using rule 19 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON .)
    $end            reduce using rule 19 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON .)
    RBLOCK          reduce using rule 19 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON .)


state 171

    (40) lista1 -> ID EQUALGREATER typevar . COMMA lista1
    (43) lista1 -> ID EQUALGREATER typevar .

    COMMA           shift and go to state 193
    RBLOCK          reduce using rule 43 (lista1 -> ID EQUALGREATER typevar .)
    RPAREN          reduce using rule 43 (lista1 -> ID EQUALGREATER typevar .)


state 172

    (42) lista1 -> ID EQUALGREATER LBRACKET . lista RBRACKET COMMA lista1
    (45) lista1 -> ID EQUALGREATER LBRACKET . lista RBRACKET
    (46) lista -> . typevar COMMA lista
    (47) lista -> . typevar
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45

    typevar                        shift and go to state 129
    lista                          shift and go to state 194

state 173

    (41) lista1 -> ID EQUALGREATER LPAREN . lista RPAREN COMMA lista1
    (44) lista1 -> ID EQUALGREATER LPAREN . lista RPAREN
    (46) lista -> . typevar COMMA lista
    (47) lista -> . typevar
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45

    typevar                        shift and go to state 129
    lista                          shift and go to state 195

state 174

    (28) lista2 -> ID COMMA typevar . COMMA lista2
    (31) lista2 -> ID COMMA typevar .

    COMMA           shift and go to state 196
    RPAREN          reduce using rule 31 (lista2 -> ID COMMA typevar .)


state 175

    (30) lista2 -> ID COMMA LBRACKET . lista RBRACKET COMMA lista2
    (33) lista2 -> ID COMMA LBRACKET . lista RBRACKET
    (46) lista -> . typevar COMMA lista
    (47) lista -> . typevar
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45

    typevar                        shift and go to state 129
    lista                          shift and go to state 197

state 176

    (29) lista2 -> ID COMMA LPAREN . lista RPAREN COMMA lista2
    (32) lista2 -> ID COMMA LPAREN . lista RPAREN
    (46) lista -> . typevar COMMA lista
    (47) lista -> . typevar
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45

    typevar                        shift and go to state 129
    lista                          shift and go to state 198

state 177

    (20) var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .

    USE             reduce using rule 20 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    REQUIRE         reduce using rule 20 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    PRINT           reduce using rule 20 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    PESOS           reduce using rule 20 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    ARROBA          reduce using rule 20 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    PORCENTAJE      reduce using rule 20 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    FOR             reduce using rule 20 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    FOREACH         reduce using rule 20 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    WHILE           reduce using rule 20 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    $end            reduce using rule 20 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    RBLOCK          reduce using rule 20 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)


state 178

    (18) var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .

    USE             reduce using rule 18 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    REQUIRE         reduce using rule 18 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    PRINT           reduce using rule 18 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    PESOS           reduce using rule 18 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    ARROBA          reduce using rule 18 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    PORCENTAJE      reduce using rule 18 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    FOR             reduce using rule 18 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    FOREACH         reduce using rule 18 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    WHILE           reduce using rule 18 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    $end            reduce using rule 18 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    RBLOCK          reduce using rule 18 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)


state 179

    (46) lista -> typevar COMMA lista .

    RPAREN          reduce using rule 46 (lista -> typevar COMMA lista .)
    RBRACKET        reduce using rule 46 (lista -> typevar COMMA lista .)


state 180

    (15) var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .

    USE             reduce using rule 15 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    REQUIRE         reduce using rule 15 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    PRINT           reduce using rule 15 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    PESOS           reduce using rule 15 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    ARROBA          reduce using rule 15 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    PORCENTAJE      reduce using rule 15 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    FOR             reduce using rule 15 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    FOREACH         reduce using rule 15 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    WHILE           reduce using rule 15 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    $end            reduce using rule 15 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    RBLOCK          reduce using rule 15 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)


state 181

    (60) F -> PESOS ID LBRACKET ENTERO RBRACKET .

    TIMES           reduce using rule 60 (F -> PESOS ID LBRACKET ENTERO RBRACKET .)
    DIVIDE          reduce using rule 60 (F -> PESOS ID LBRACKET ENTERO RBRACKET .)
    RPAREN          reduce using rule 60 (F -> PESOS ID LBRACKET ENTERO RBRACKET .)
    PLUS            reduce using rule 60 (F -> PESOS ID LBRACKET ENTERO RBRACKET .)
    MINUS           reduce using rule 60 (F -> PESOS ID LBRACKET ENTERO RBRACKET .)
    SEMICOLON       reduce using rule 60 (F -> PESOS ID LBRACKET ENTERO RBRACKET .)


state 182

    (62) F -> PESOS ID LBLOCK typevar RBLOCK .

    TIMES           reduce using rule 62 (F -> PESOS ID LBLOCK typevar RBLOCK .)
    DIVIDE          reduce using rule 62 (F -> PESOS ID LBLOCK typevar RBLOCK .)
    RPAREN          reduce using rule 62 (F -> PESOS ID LBLOCK typevar RBLOCK .)
    PLUS            reduce using rule 62 (F -> PESOS ID LBLOCK typevar RBLOCK .)
    MINUS           reduce using rule 62 (F -> PESOS ID LBLOCK typevar RBLOCK .)
    SEMICOLON       reduce using rule 62 (F -> PESOS ID LBLOCK typevar RBLOCK .)


state 183

    (64) ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID . incdec RPAREN LBLOCK declaration_list RBLOCK
    (89) incdec -> . PLUSPLUS
    (90) incdec -> . MINUSMINUS

    PLUSPLUS        shift and go to state 35
    MINUSMINUS      shift and go to state 33

    incdec                         shift and go to state 199

state 184

    (70) sent_for -> PESOS ID EQUAL ENTERO COMMA sent_for .

    SEMICOLON       reduce using rule 70 (sent_for -> PESOS ID EQUAL ENTERO COMMA sent_for .)


state 185

    (71) sent_for -> MY PESOS ID EQUAL ENTERO COMMA . sent_for
    (67) sent_for -> . PESOS ID
    (68) sent_for -> . PESOS ID EQUAL ENTERO
    (69) sent_for -> . MY PESOS ID EQUAL ENTERO
    (70) sent_for -> . PESOS ID EQUAL ENTERO COMMA sent_for
    (71) sent_for -> . MY PESOS ID EQUAL ENTERO COMMA sent_for

    PESOS           shift and go to state 55
    MY              shift and go to state 56

    sent_for                       shift and go to state 200

state 186

    (65) ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK . declaration_list RBLOCK
    (2) declaration_list -> . declaration declaration_list
    (3) declaration_list -> . declaration
    (4) declaration -> . header_declaration
    (5) declaration -> . print
    (6) declaration -> . var_declaration
    (7) declaration -> . ciclos
    (8) header_declaration -> . USE ID SEMICOLON
    (9) header_declaration -> . REQUIRE ID SEMICOLON
    (91) print -> . PRINT arg SEMICOLON
    (92) print -> . PRINT LPAREN arg RPAREN SEMICOLON
    (10) var_declaration -> . PESOS ID SEMICOLON
    (11) var_declaration -> . PESOS ID EQUAL E SEMICOLON
    (12) var_declaration -> . PESOS ID incdec SEMICOLON
    (13) var_declaration -> . PESOS ID EQUAL typevar SEMICOLON
    (14) var_declaration -> . ARROBA ID SEMICOLON
    (15) var_declaration -> . ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON
    (16) var_declaration -> . ARROBA ID EQUAL ARROBA ID SEMICOLON
    (17) var_declaration -> . PORCENTAJE ID SEMICOLON
    (18) var_declaration -> . PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON
    (19) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON
    (20) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON
    (21) var_declaration -> . PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON
    (64) ciclos -> . FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK
    (65) ciclos -> . FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK
    (66) ciclos -> . WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK

    USE             shift and go to state 1
    REQUIRE         shift and go to state 2
    PRINT           shift and go to state 6
    PESOS           shift and go to state 3
    ARROBA          shift and go to state 16
    PORCENTAJE      shift and go to state 14
    FOR             shift and go to state 11
    FOREACH         shift and go to state 12
    WHILE           shift and go to state 4

    header_declaration             shift and go to state 10
    declaration_list               shift and go to state 201
    var_declaration                shift and go to state 7
    ciclos                         shift and go to state 5
    declaration                    shift and go to state 13
    print                          shift and go to state 9

state 187

    (34) lista1 -> typevar EQUALGREATER typevar COMMA . lista1
    (34) lista1 -> . typevar EQUALGREATER typevar COMMA lista1
    (35) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (36) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (37) lista1 -> . typevar EQUALGREATER typevar
    (38) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN
    (39) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET
    (40) lista1 -> . ID EQUALGREATER typevar COMMA lista1
    (41) lista1 -> . ID EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (42) lista1 -> . ID EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (43) lista1 -> . ID EQUALGREATER typevar
    (44) lista1 -> . ID EQUALGREATER LPAREN lista RPAREN
    (45) lista1 -> . ID EQUALGREATER LBRACKET lista RBRACKET
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL

    ID              shift and go to state 127
    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45

    lista1                         shift and go to state 202
    typevar                        shift and go to state 125

state 188

    (36) lista1 -> typevar EQUALGREATER LBRACKET lista . RBRACKET COMMA lista1
    (39) lista1 -> typevar EQUALGREATER LBRACKET lista . RBRACKET

    RBRACKET        shift and go to state 203


state 189

    (35) lista1 -> typevar EQUALGREATER LPAREN lista . RPAREN COMMA lista1
    (38) lista1 -> typevar EQUALGREATER LPAREN lista . RPAREN

    RPAREN          shift and go to state 204


state 190

    (24) lista2 -> typevar COMMA LBRACKET lista . RBRACKET COMMA lista2
    (27) lista2 -> typevar COMMA LBRACKET lista . RBRACKET

    RBRACKET        shift and go to state 205


state 191

    (23) lista2 -> typevar COMMA LPAREN lista . RPAREN COMMA lista2
    (26) lista2 -> typevar COMMA LPAREN lista . RPAREN

    RPAREN          shift and go to state 206


state 192

    (22) lista2 -> typevar COMMA typevar COMMA . lista2
    (22) lista2 -> . typevar COMMA typevar COMMA lista2
    (23) lista2 -> . typevar COMMA LPAREN lista RPAREN COMMA lista2
    (24) lista2 -> . typevar COMMA LBRACKET lista RBRACKET COMMA lista2
    (25) lista2 -> . typevar COMMA typevar
    (26) lista2 -> . typevar COMMA LPAREN lista RPAREN
    (27) lista2 -> . typevar COMMA LBRACKET lista RBRACKET
    (28) lista2 -> . ID COMMA typevar COMMA lista2
    (29) lista2 -> . ID COMMA LPAREN lista RPAREN COMMA lista2
    (30) lista2 -> . ID COMMA LBRACKET lista RBRACKET COMMA lista2
    (31) lista2 -> . ID COMMA typevar
    (32) lista2 -> . ID COMMA LPAREN lista RPAREN
    (33) lista2 -> . ID COMMA LBRACKET lista RBRACKET
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL

    ID              shift and go to state 208
    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45

    typevar                        shift and go to state 207
    lista2                         shift and go to state 209

state 193

    (40) lista1 -> ID EQUALGREATER typevar COMMA . lista1
    (34) lista1 -> . typevar EQUALGREATER typevar COMMA lista1
    (35) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (36) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (37) lista1 -> . typevar EQUALGREATER typevar
    (38) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN
    (39) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET
    (40) lista1 -> . ID EQUALGREATER typevar COMMA lista1
    (41) lista1 -> . ID EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (42) lista1 -> . ID EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (43) lista1 -> . ID EQUALGREATER typevar
    (44) lista1 -> . ID EQUALGREATER LPAREN lista RPAREN
    (45) lista1 -> . ID EQUALGREATER LBRACKET lista RBRACKET
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL

    ID              shift and go to state 127
    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45

    lista1                         shift and go to state 210
    typevar                        shift and go to state 125

state 194

    (42) lista1 -> ID EQUALGREATER LBRACKET lista . RBRACKET COMMA lista1
    (45) lista1 -> ID EQUALGREATER LBRACKET lista . RBRACKET

    RBRACKET        shift and go to state 211


state 195

    (41) lista1 -> ID EQUALGREATER LPAREN lista . RPAREN COMMA lista1
    (44) lista1 -> ID EQUALGREATER LPAREN lista . RPAREN

    RPAREN          shift and go to state 212


state 196

    (28) lista2 -> ID COMMA typevar COMMA . lista2
    (22) lista2 -> . typevar COMMA typevar COMMA lista2
    (23) lista2 -> . typevar COMMA LPAREN lista RPAREN COMMA lista2
    (24) lista2 -> . typevar COMMA LBRACKET lista RBRACKET COMMA lista2
    (25) lista2 -> . typevar COMMA typevar
    (26) lista2 -> . typevar COMMA LPAREN lista RPAREN
    (27) lista2 -> . typevar COMMA LBRACKET lista RBRACKET
    (28) lista2 -> . ID COMMA typevar COMMA lista2
    (29) lista2 -> . ID COMMA LPAREN lista RPAREN COMMA lista2
    (30) lista2 -> . ID COMMA LBRACKET lista RBRACKET COMMA lista2
    (31) lista2 -> . ID COMMA typevar
    (32) lista2 -> . ID COMMA LPAREN lista RPAREN
    (33) lista2 -> . ID COMMA LBRACKET lista RBRACKET
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL

    ID              shift and go to state 208
    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45

    typevar                        shift and go to state 207
    lista2                         shift and go to state 213

state 197

    (30) lista2 -> ID COMMA LBRACKET lista . RBRACKET COMMA lista2
    (33) lista2 -> ID COMMA LBRACKET lista . RBRACKET

    RBRACKET        shift and go to state 214


state 198

    (29) lista2 -> ID COMMA LPAREN lista . RPAREN COMMA lista2
    (32) lista2 -> ID COMMA LPAREN lista . RPAREN

    RPAREN          shift and go to state 215


state 199

    (64) ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec . RPAREN LBLOCK declaration_list RBLOCK

    RPAREN          shift and go to state 216


state 200

    (71) sent_for -> MY PESOS ID EQUAL ENTERO COMMA sent_for .

    SEMICOLON       reduce using rule 71 (sent_for -> MY PESOS ID EQUAL ENTERO COMMA sent_for .)


state 201

    (65) ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list . RBLOCK

    RBLOCK          shift and go to state 217


state 202

    (34) lista1 -> typevar EQUALGREATER typevar COMMA lista1 .

    RBLOCK          reduce using rule 34 (lista1 -> typevar EQUALGREATER typevar COMMA lista1 .)
    RPAREN          reduce using rule 34 (lista1 -> typevar EQUALGREATER typevar COMMA lista1 .)


state 203

    (36) lista1 -> typevar EQUALGREATER LBRACKET lista RBRACKET . COMMA lista1
    (39) lista1 -> typevar EQUALGREATER LBRACKET lista RBRACKET .

    COMMA           shift and go to state 218
    RBLOCK          reduce using rule 39 (lista1 -> typevar EQUALGREATER LBRACKET lista RBRACKET .)
    RPAREN          reduce using rule 39 (lista1 -> typevar EQUALGREATER LBRACKET lista RBRACKET .)


state 204

    (35) lista1 -> typevar EQUALGREATER LPAREN lista RPAREN . COMMA lista1
    (38) lista1 -> typevar EQUALGREATER LPAREN lista RPAREN .

    COMMA           shift and go to state 219
    RBLOCK          reduce using rule 38 (lista1 -> typevar EQUALGREATER LPAREN lista RPAREN .)
    RPAREN          reduce using rule 38 (lista1 -> typevar EQUALGREATER LPAREN lista RPAREN .)


state 205

    (24) lista2 -> typevar COMMA LBRACKET lista RBRACKET . COMMA lista2
    (27) lista2 -> typevar COMMA LBRACKET lista RBRACKET .

    COMMA           shift and go to state 220
    RPAREN          reduce using rule 27 (lista2 -> typevar COMMA LBRACKET lista RBRACKET .)


state 206

    (23) lista2 -> typevar COMMA LPAREN lista RPAREN . COMMA lista2
    (26) lista2 -> typevar COMMA LPAREN lista RPAREN .

    COMMA           shift and go to state 221
    RPAREN          reduce using rule 26 (lista2 -> typevar COMMA LPAREN lista RPAREN .)


state 207

    (22) lista2 -> typevar . COMMA typevar COMMA lista2
    (23) lista2 -> typevar . COMMA LPAREN lista RPAREN COMMA lista2
    (24) lista2 -> typevar . COMMA LBRACKET lista RBRACKET COMMA lista2
    (25) lista2 -> typevar . COMMA typevar
    (26) lista2 -> typevar . COMMA LPAREN lista RPAREN
    (27) lista2 -> typevar . COMMA LBRACKET lista RBRACKET

    COMMA           shift and go to state 148


state 208

    (28) lista2 -> ID . COMMA typevar COMMA lista2
    (29) lista2 -> ID . COMMA LPAREN lista RPAREN COMMA lista2
    (30) lista2 -> ID . COMMA LBRACKET lista RBRACKET COMMA lista2
    (31) lista2 -> ID . COMMA typevar
    (32) lista2 -> ID . COMMA LPAREN lista RPAREN
    (33) lista2 -> ID . COMMA LBRACKET lista RBRACKET

    COMMA           shift and go to state 151


state 209

    (22) lista2 -> typevar COMMA typevar COMMA lista2 .

    RPAREN          reduce using rule 22 (lista2 -> typevar COMMA typevar COMMA lista2 .)


state 210

    (40) lista1 -> ID EQUALGREATER typevar COMMA lista1 .

    RBLOCK          reduce using rule 40 (lista1 -> ID EQUALGREATER typevar COMMA lista1 .)
    RPAREN          reduce using rule 40 (lista1 -> ID EQUALGREATER typevar COMMA lista1 .)


state 211

    (42) lista1 -> ID EQUALGREATER LBRACKET lista RBRACKET . COMMA lista1
    (45) lista1 -> ID EQUALGREATER LBRACKET lista RBRACKET .

    COMMA           shift and go to state 222
    RBLOCK          reduce using rule 45 (lista1 -> ID EQUALGREATER LBRACKET lista RBRACKET .)
    RPAREN          reduce using rule 45 (lista1 -> ID EQUALGREATER LBRACKET lista RBRACKET .)


state 212

    (41) lista1 -> ID EQUALGREATER LPAREN lista RPAREN . COMMA lista1
    (44) lista1 -> ID EQUALGREATER LPAREN lista RPAREN .

    COMMA           shift and go to state 223
    RBLOCK          reduce using rule 44 (lista1 -> ID EQUALGREATER LPAREN lista RPAREN .)
    RPAREN          reduce using rule 44 (lista1 -> ID EQUALGREATER LPAREN lista RPAREN .)


state 213

    (28) lista2 -> ID COMMA typevar COMMA lista2 .

    RPAREN          reduce using rule 28 (lista2 -> ID COMMA typevar COMMA lista2 .)


state 214

    (30) lista2 -> ID COMMA LBRACKET lista RBRACKET . COMMA lista2
    (33) lista2 -> ID COMMA LBRACKET lista RBRACKET .

    COMMA           shift and go to state 224
    RPAREN          reduce using rule 33 (lista2 -> ID COMMA LBRACKET lista RBRACKET .)


state 215

    (29) lista2 -> ID COMMA LPAREN lista RPAREN . COMMA lista2
    (32) lista2 -> ID COMMA LPAREN lista RPAREN .

    COMMA           shift and go to state 225
    RPAREN          reduce using rule 32 (lista2 -> ID COMMA LPAREN lista RPAREN .)


state 216

    (64) ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN . LBLOCK declaration_list RBLOCK

    LBLOCK          shift and go to state 226


state 217

    (65) ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK .

    USE             reduce using rule 65 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK .)
    REQUIRE         reduce using rule 65 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK .)
    PRINT           reduce using rule 65 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK .)
    PESOS           reduce using rule 65 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK .)
    ARROBA          reduce using rule 65 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK .)
    PORCENTAJE      reduce using rule 65 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK .)
    FOR             reduce using rule 65 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK .)
    FOREACH         reduce using rule 65 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK .)
    WHILE           reduce using rule 65 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK .)
    $end            reduce using rule 65 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK .)
    RBLOCK          reduce using rule 65 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK .)


state 218

    (36) lista1 -> typevar EQUALGREATER LBRACKET lista RBRACKET COMMA . lista1
    (34) lista1 -> . typevar EQUALGREATER typevar COMMA lista1
    (35) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (36) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (37) lista1 -> . typevar EQUALGREATER typevar
    (38) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN
    (39) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET
    (40) lista1 -> . ID EQUALGREATER typevar COMMA lista1
    (41) lista1 -> . ID EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (42) lista1 -> . ID EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (43) lista1 -> . ID EQUALGREATER typevar
    (44) lista1 -> . ID EQUALGREATER LPAREN lista RPAREN
    (45) lista1 -> . ID EQUALGREATER LBRACKET lista RBRACKET
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL

    ID              shift and go to state 127
    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45

    typevar                        shift and go to state 125
    lista1                         shift and go to state 227

state 219

    (35) lista1 -> typevar EQUALGREATER LPAREN lista RPAREN COMMA . lista1
    (34) lista1 -> . typevar EQUALGREATER typevar COMMA lista1
    (35) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (36) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (37) lista1 -> . typevar EQUALGREATER typevar
    (38) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN
    (39) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET
    (40) lista1 -> . ID EQUALGREATER typevar COMMA lista1
    (41) lista1 -> . ID EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (42) lista1 -> . ID EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (43) lista1 -> . ID EQUALGREATER typevar
    (44) lista1 -> . ID EQUALGREATER LPAREN lista RPAREN
    (45) lista1 -> . ID EQUALGREATER LBRACKET lista RBRACKET
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL

    ID              shift and go to state 127
    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45

    typevar                        shift and go to state 125
    lista1                         shift and go to state 228

state 220

    (24) lista2 -> typevar COMMA LBRACKET lista RBRACKET COMMA . lista2
    (22) lista2 -> . typevar COMMA typevar COMMA lista2
    (23) lista2 -> . typevar COMMA LPAREN lista RPAREN COMMA lista2
    (24) lista2 -> . typevar COMMA LBRACKET lista RBRACKET COMMA lista2
    (25) lista2 -> . typevar COMMA typevar
    (26) lista2 -> . typevar COMMA LPAREN lista RPAREN
    (27) lista2 -> . typevar COMMA LBRACKET lista RBRACKET
    (28) lista2 -> . ID COMMA typevar COMMA lista2
    (29) lista2 -> . ID COMMA LPAREN lista RPAREN COMMA lista2
    (30) lista2 -> . ID COMMA LBRACKET lista RBRACKET COMMA lista2
    (31) lista2 -> . ID COMMA typevar
    (32) lista2 -> . ID COMMA LPAREN lista RPAREN
    (33) lista2 -> . ID COMMA LBRACKET lista RBRACKET
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL

    ID              shift and go to state 208
    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45

    typevar                        shift and go to state 207
    lista2                         shift and go to state 229

state 221

    (23) lista2 -> typevar COMMA LPAREN lista RPAREN COMMA . lista2
    (22) lista2 -> . typevar COMMA typevar COMMA lista2
    (23) lista2 -> . typevar COMMA LPAREN lista RPAREN COMMA lista2
    (24) lista2 -> . typevar COMMA LBRACKET lista RBRACKET COMMA lista2
    (25) lista2 -> . typevar COMMA typevar
    (26) lista2 -> . typevar COMMA LPAREN lista RPAREN
    (27) lista2 -> . typevar COMMA LBRACKET lista RBRACKET
    (28) lista2 -> . ID COMMA typevar COMMA lista2
    (29) lista2 -> . ID COMMA LPAREN lista RPAREN COMMA lista2
    (30) lista2 -> . ID COMMA LBRACKET lista RBRACKET COMMA lista2
    (31) lista2 -> . ID COMMA typevar
    (32) lista2 -> . ID COMMA LPAREN lista RPAREN
    (33) lista2 -> . ID COMMA LBRACKET lista RBRACKET
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL

    ID              shift and go to state 208
    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45

    typevar                        shift and go to state 207
    lista2                         shift and go to state 230

state 222

    (42) lista1 -> ID EQUALGREATER LBRACKET lista RBRACKET COMMA . lista1
    (34) lista1 -> . typevar EQUALGREATER typevar COMMA lista1
    (35) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (36) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (37) lista1 -> . typevar EQUALGREATER typevar
    (38) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN
    (39) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET
    (40) lista1 -> . ID EQUALGREATER typevar COMMA lista1
    (41) lista1 -> . ID EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (42) lista1 -> . ID EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (43) lista1 -> . ID EQUALGREATER typevar
    (44) lista1 -> . ID EQUALGREATER LPAREN lista RPAREN
    (45) lista1 -> . ID EQUALGREATER LBRACKET lista RBRACKET
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL

    ID              shift and go to state 127
    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45

    typevar                        shift and go to state 125
    lista1                         shift and go to state 231

state 223

    (41) lista1 -> ID EQUALGREATER LPAREN lista RPAREN COMMA . lista1
    (34) lista1 -> . typevar EQUALGREATER typevar COMMA lista1
    (35) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (36) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (37) lista1 -> . typevar EQUALGREATER typevar
    (38) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN
    (39) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET
    (40) lista1 -> . ID EQUALGREATER typevar COMMA lista1
    (41) lista1 -> . ID EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (42) lista1 -> . ID EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (43) lista1 -> . ID EQUALGREATER typevar
    (44) lista1 -> . ID EQUALGREATER LPAREN lista RPAREN
    (45) lista1 -> . ID EQUALGREATER LBRACKET lista RBRACKET
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL

    ID              shift and go to state 127
    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45

    typevar                        shift and go to state 125
    lista1                         shift and go to state 232

state 224

    (30) lista2 -> ID COMMA LBRACKET lista RBRACKET COMMA . lista2
    (22) lista2 -> . typevar COMMA typevar COMMA lista2
    (23) lista2 -> . typevar COMMA LPAREN lista RPAREN COMMA lista2
    (24) lista2 -> . typevar COMMA LBRACKET lista RBRACKET COMMA lista2
    (25) lista2 -> . typevar COMMA typevar
    (26) lista2 -> . typevar COMMA LPAREN lista RPAREN
    (27) lista2 -> . typevar COMMA LBRACKET lista RBRACKET
    (28) lista2 -> . ID COMMA typevar COMMA lista2
    (29) lista2 -> . ID COMMA LPAREN lista RPAREN COMMA lista2
    (30) lista2 -> . ID COMMA LBRACKET lista RBRACKET COMMA lista2
    (31) lista2 -> . ID COMMA typevar
    (32) lista2 -> . ID COMMA LPAREN lista RPAREN
    (33) lista2 -> . ID COMMA LBRACKET lista RBRACKET
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL

    ID              shift and go to state 208
    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45

    typevar                        shift and go to state 207
    lista2                         shift and go to state 233

state 225

    (29) lista2 -> ID COMMA LPAREN lista RPAREN COMMA . lista2
    (22) lista2 -> . typevar COMMA typevar COMMA lista2
    (23) lista2 -> . typevar COMMA LPAREN lista RPAREN COMMA lista2
    (24) lista2 -> . typevar COMMA LBRACKET lista RBRACKET COMMA lista2
    (25) lista2 -> . typevar COMMA typevar
    (26) lista2 -> . typevar COMMA LPAREN lista RPAREN
    (27) lista2 -> . typevar COMMA LBRACKET lista RBRACKET
    (28) lista2 -> . ID COMMA typevar COMMA lista2
    (29) lista2 -> . ID COMMA LPAREN lista RPAREN COMMA lista2
    (30) lista2 -> . ID COMMA LBRACKET lista RBRACKET COMMA lista2
    (31) lista2 -> . ID COMMA typevar
    (32) lista2 -> . ID COMMA LPAREN lista RPAREN
    (33) lista2 -> . ID COMMA LBRACKET lista RBRACKET
    (48) typevar -> . CADENA
    (49) typevar -> . CADENAA
    (50) typevar -> . ENTERO
    (51) typevar -> . OCTAL
    (52) typevar -> . HEXADECIMAL

    ID              shift and go to state 208
    CADENA          shift and go to state 40
    CADENAA         shift and go to state 48
    ENTERO          shift and go to state 46
    OCTAL           shift and go to state 41
    HEXADECIMAL     shift and go to state 45

    typevar                        shift and go to state 207
    lista2                         shift and go to state 234

state 226

    (64) ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK . declaration_list RBLOCK
    (2) declaration_list -> . declaration declaration_list
    (3) declaration_list -> . declaration
    (4) declaration -> . header_declaration
    (5) declaration -> . print
    (6) declaration -> . var_declaration
    (7) declaration -> . ciclos
    (8) header_declaration -> . USE ID SEMICOLON
    (9) header_declaration -> . REQUIRE ID SEMICOLON
    (91) print -> . PRINT arg SEMICOLON
    (92) print -> . PRINT LPAREN arg RPAREN SEMICOLON
    (10) var_declaration -> . PESOS ID SEMICOLON
    (11) var_declaration -> . PESOS ID EQUAL E SEMICOLON
    (12) var_declaration -> . PESOS ID incdec SEMICOLON
    (13) var_declaration -> . PESOS ID EQUAL typevar SEMICOLON
    (14) var_declaration -> . ARROBA ID SEMICOLON
    (15) var_declaration -> . ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON
    (16) var_declaration -> . ARROBA ID EQUAL ARROBA ID SEMICOLON
    (17) var_declaration -> . PORCENTAJE ID SEMICOLON
    (18) var_declaration -> . PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON
    (19) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON
    (20) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON
    (21) var_declaration -> . PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON
    (64) ciclos -> . FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK
    (65) ciclos -> . FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK
    (66) ciclos -> . WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK

    USE             shift and go to state 1
    REQUIRE         shift and go to state 2
    PRINT           shift and go to state 6
    PESOS           shift and go to state 3
    ARROBA          shift and go to state 16
    PORCENTAJE      shift and go to state 14
    FOR             shift and go to state 11
    FOREACH         shift and go to state 12
    WHILE           shift and go to state 4

    header_declaration             shift and go to state 10
    declaration_list               shift and go to state 235
    var_declaration                shift and go to state 7
    ciclos                         shift and go to state 5
    declaration                    shift and go to state 13
    print                          shift and go to state 9

state 227

    (36) lista1 -> typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1 .

    RBLOCK          reduce using rule 36 (lista1 -> typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1 .)
    RPAREN          reduce using rule 36 (lista1 -> typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1 .)


state 228

    (35) lista1 -> typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1 .

    RBLOCK          reduce using rule 35 (lista1 -> typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1 .)
    RPAREN          reduce using rule 35 (lista1 -> typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1 .)


state 229

    (24) lista2 -> typevar COMMA LBRACKET lista RBRACKET COMMA lista2 .

    RPAREN          reduce using rule 24 (lista2 -> typevar COMMA LBRACKET lista RBRACKET COMMA lista2 .)


state 230

    (23) lista2 -> typevar COMMA LPAREN lista RPAREN COMMA lista2 .

    RPAREN          reduce using rule 23 (lista2 -> typevar COMMA LPAREN lista RPAREN COMMA lista2 .)


state 231

    (42) lista1 -> ID EQUALGREATER LBRACKET lista RBRACKET COMMA lista1 .

    RBLOCK          reduce using rule 42 (lista1 -> ID EQUALGREATER LBRACKET lista RBRACKET COMMA lista1 .)
    RPAREN          reduce using rule 42 (lista1 -> ID EQUALGREATER LBRACKET lista RBRACKET COMMA lista1 .)


state 232

    (41) lista1 -> ID EQUALGREATER LPAREN lista RPAREN COMMA lista1 .

    RBLOCK          reduce using rule 41 (lista1 -> ID EQUALGREATER LPAREN lista RPAREN COMMA lista1 .)
    RPAREN          reduce using rule 41 (lista1 -> ID EQUALGREATER LPAREN lista RPAREN COMMA lista1 .)


state 233

    (30) lista2 -> ID COMMA LBRACKET lista RBRACKET COMMA lista2 .

    RPAREN          reduce using rule 30 (lista2 -> ID COMMA LBRACKET lista RBRACKET COMMA lista2 .)


state 234

    (29) lista2 -> ID COMMA LPAREN lista RPAREN COMMA lista2 .

    RPAREN          reduce using rule 29 (lista2 -> ID COMMA LPAREN lista RPAREN COMMA lista2 .)


state 235

    (64) ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list . RBLOCK

    RBLOCK          shift and go to state 236


state 236

    (64) ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK .

    USE             reduce using rule 64 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK .)
    REQUIRE         reduce using rule 64 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK .)
    PRINT           reduce using rule 64 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK .)
    PESOS           reduce using rule 64 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK .)
    ARROBA          reduce using rule 64 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK .)
    PORCENTAJE      reduce using rule 64 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK .)
    FOR             reduce using rule 64 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK .)
    FOREACH         reduce using rule 64 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK .)
    WHILE           reduce using rule 64 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK .)
    $end            reduce using rule 64 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK .)
    RBLOCK          reduce using rule 64 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 83 resolved as shift
WARNING: shift/reduce conflict for LESS in state 84 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 84 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 84 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 84 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 84 resolved as shift
WARNING: shift/reduce conflict for DEQUAL in state 84 resolved as shift
WARNING: shift/reduce conflict for AND in state 84 resolved as shift
WARNING: shift/reduce conflict for ANDS in state 84 resolved as shift
WARNING: shift/reduce conflict for ORS in state 84 resolved as shift
WARNING: shift/reduce conflict for OR in state 84 resolved as shift
WARNING: shift/reduce conflict for LESS in state 109 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 109 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 109 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 109 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 109 resolved as shift
WARNING: shift/reduce conflict for DEQUAL in state 109 resolved as shift
WARNING: shift/reduce conflict for AND in state 109 resolved as shift
WARNING: shift/reduce conflict for ANDS in state 109 resolved as shift
WARNING: shift/reduce conflict for ORS in state 109 resolved as shift
WARNING: shift/reduce conflict for OR in state 109 resolved as shift
WARNING: reduce/reduce conflict in state 63 resolved using rule (typevar -> ENTERO)
WARNING: rejected rule (F -> ENTERO) in state 63
