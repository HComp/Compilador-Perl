Created by PLY version 3.7 (http://www.dabeaz.com/ply)

Unused terminals:

    EVAL
    SUBSTR
    EXP
    PLUSGREATER
    EOF
    COMMENT
    POSTINDEX
    NEXT
    INTERROGATION
    GOTO
    EXEC
    COMPLEMENT
    UNSHIFT
    PREINDEX
    ORBW
    LENGTH
    VALUES
    LESSLESS
    DELETE
    INDEX
    RETURN
    REVERSE
    EXPREGULAR
    OCT
    SELECT
    CMP
    FILENO
    DEFINED
    GREATERGREATER
    SIN
    COLON
    UNLESS
    MKDIR
    LAST
    UNTIL
    REFERENCE
    INT
    PACK
    RAND
    READ
    ARROW
    RMDIR
    OPEN
    DOT
    GUIONDOWN
    SHIFT
    INCREMENTO
    CLOSE
    SORT
    HEX
    WRITE
    PUSH
    DECREMENTO
    REFERENCIAS
    JOIN
    EXIT
    REFERENCIALISTA
    EACH
    TELL
    RENAME
    LOG
    DIE
    CHOWN
    SEEK
    POP
    CHOP
    FORK
    XOR
    KEYS
    ABS
    SPLIT
    LOCAL
    NOTS
    DISTINT
    SYSTEM
    SQRT
    RINDEX
    SLEEP
    DOLLARDOLLAR
    PLUSLESS

Grammar

Rule 0     S' -> program
Rule 1     program -> declaration_list
Rule 2     declaration_list -> declaration declaration_list
Rule 3     declaration_list -> declaration
Rule 4     declaration -> header_declaration
Rule 5     declaration -> print
Rule 6     declaration -> var_declaration
Rule 7     declaration -> sentencia_if
Rule 8     declaration -> function_declaration
Rule 9     declaration -> call_function SEMICOLON
Rule 10    declaration -> E SEMICOLON
Rule 11    declaration -> ciclos
Rule 12    header_declaration -> USE ID SEMICOLON
Rule 13    header_declaration -> REQUIRE ID SEMICOLON
Rule 14    var_declaration -> PESOS ID SEMICOLON
Rule 15    var_declaration -> MY PESOS ID SEMICOLON
Rule 16    var_declaration -> PESOS ID EQUAL E SEMICOLON
Rule 17    var_declaration -> PESOS ID EQUAL call_function SEMICOLON
Rule 18    var_declaration -> PESOS ID incdec SEMICOLON
Rule 19    var_declaration -> MY PESOS ID EQUAL typevar SEMICOLON
Rule 20    var_declaration -> PESOS ID EQUAL typevar SEMICOLON
Rule 21    var_declaration -> ARROBA ID SEMICOLON
Rule 22    var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON
Rule 23    var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON
Rule 24    var_declaration -> PORCENTAJE ID SEMICOLON
Rule 25    var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON
Rule 26    var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON
Rule 27    var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON
Rule 28    var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON
Rule 29    lista2 -> typevar COMMA typevar COMMA lista2
Rule 30    lista2 -> typevar COMMA LPAREN lista RPAREN COMMA lista2
Rule 31    lista2 -> typevar COMMA LBRACKET lista RBRACKET COMMA lista2
Rule 32    lista2 -> typevar COMMA typevar
Rule 33    lista2 -> typevar COMMA LPAREN lista RPAREN
Rule 34    lista2 -> typevar COMMA LBRACKET lista RBRACKET
Rule 35    lista2 -> ID COMMA typevar COMMA lista2
Rule 36    lista2 -> ID COMMA LPAREN lista RPAREN COMMA lista2
Rule 37    lista2 -> ID COMMA LBRACKET lista RBRACKET COMMA lista2
Rule 38    lista2 -> ID COMMA typevar
Rule 39    lista2 -> ID COMMA LPAREN lista RPAREN
Rule 40    lista2 -> ID COMMA LBRACKET lista RBRACKET
Rule 41    lista1 -> typevar EQUALGREATER typevar COMMA lista1
Rule 42    lista1 -> typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1
Rule 43    lista1 -> typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
Rule 44    lista1 -> typevar EQUALGREATER typevar
Rule 45    lista1 -> typevar EQUALGREATER LPAREN lista RPAREN
Rule 46    lista1 -> typevar EQUALGREATER LBRACKET lista RBRACKET
Rule 47    lista1 -> ID EQUALGREATER typevar COMMA lista1
Rule 48    lista1 -> ID EQUALGREATER LPAREN lista RPAREN COMMA lista1
Rule 49    lista1 -> ID EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
Rule 50    lista1 -> ID EQUALGREATER typevar
Rule 51    lista1 -> ID EQUALGREATER LPAREN lista RPAREN
Rule 52    lista1 -> ID EQUALGREATER LBRACKET lista RBRACKET
Rule 53    lista -> typevar COMMA lista
Rule 54    lista -> typevar
Rule 55    typevar -> CADENA
Rule 56    typevar -> CADENAA
Rule 57    typevar -> ENTERO
Rule 58    typevar -> OCTAL
Rule 59    typevar -> HEXADECIMAL
Rule 60    E -> E PLUS T
Rule 61    E -> E MINUS T
Rule 62    E -> T
Rule 63    T -> T TIMES F
Rule 64    T -> T DIVIDE F
Rule 65    T -> F
Rule 66    F -> PESOS ID
Rule 67    F -> PESOS ID LBRACKET ENTERO RBRACKET
Rule 68    F -> ENTERO
Rule 69    F -> PESOS ID LBLOCK typevar RBLOCK
Rule 70    F -> LPAREN E RPAREN
Rule 71    ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK
Rule 72    ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK
Rule 73    ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
Rule 74    sent_for -> PESOS ID
Rule 75    sent_for -> PESOS ID EQUAL ENTERO
Rule 76    sent_for -> MY PESOS ID EQUAL ENTERO
Rule 77    sent_for -> MY PESOS ID EQUAL ENTERO COMMA sent_for
Rule 78    sent_for -> PESOS ID EQUAL ENTERO COMMA sent_for
Rule 79    log -> LESS
Rule 80    log -> GREATER
Rule 81    log -> ISEQUAL
Rule 82    log -> LESSEQUAL
Rule 83    log -> GREATEREQUAL
Rule 84    log -> DEQUAL
Rule 85    log -> AND
Rule 86    log -> ANDS
Rule 87    log -> ORS
Rule 88    log -> OR
Rule 89    type -> typevar
Rule 90    type -> var_declaration_gen
Rule 91    cond -> type
Rule 92    cond -> cond log cond
Rule 93    cond -> NOT cond
Rule 94    cond -> LPAREN type RPAREN
Rule 95    cond -> LPAREN cond RPAREN
Rule 96    incdec -> PLUSPLUS
Rule 97    incdec -> MINUSMINUS
Rule 98    print -> PRINT arg SEMICOLON
Rule 99    print -> PRINT LPAREN arg RPAREN SEMICOLON
Rule 100   var_declaration_gen -> PESOS ID
Rule 101   var_declaration_gen -> PESOS ID LBRACKET ENTERO RBRACKET
Rule 102   var_declaration_gen -> PESOS ID LBLOCK typevar RBLOCK
Rule 103   var_declaration_gen -> PESOS ID LBLOCK ID RBLOCK
Rule 104   arg -> var_declaration_gen
Rule 105   arg -> type
Rule 106   arg -> type COMMA arg
Rule 107   arg -> CADENA
Rule 108   arg -> var_declaration_gen COMMA arg
Rule 109   arg -> CADENA COMMA arg
Rule 110   sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
Rule 111   sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK
Rule 112   sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
Rule 113   function_declaration -> SUB ID LBLOCK declaration_list RBLOCK
Rule 114   call_function -> ANDBW ID
Rule 115   call_function -> ANDBW ID LPAREN arg RPAREN

Terminals, with rules where they appear

ABS                  : 
AND                  : 85
ANDBW                : 114 115
ANDS                 : 86
ARROBA               : 21 22 23 23 72
ARROW                : 
CADENA               : 55 107 109
CADENAA              : 56
CHOP                 : 
CHOWN                : 
CLOSE                : 
CMP                  : 
COLON                : 
COMMA                : 29 29 30 30 31 31 32 33 34 35 35 36 36 37 37 38 39 40 41 42 43 47 48 49 53 77 78 106 108 109
COMMENT              : 
COMPLEMENT           : 
DECREMENTO           : 
DEFINED              : 
DELETE               : 
DEQUAL               : 84
DIE                  : 
DISTINT              : 
DIVIDE               : 64
DOLLARDOLLAR         : 
DOT                  : 
EACH                 : 
ELSE                 : 111
ELSIF                : 112
ENTERO               : 57 67 68 75 76 77 78 101
EOF                  : 
EQUAL                : 16 17 19 20 22 23 25 26 27 28 75 76 77 78
EQUALGREATER         : 41 42 43 44 45 46 47 48 49 50 51 52
EVAL                 : 
EXEC                 : 
EXIT                 : 
EXP                  : 
EXPREGULAR           : 
FILENO               : 
FOR                  : 71
FOREACH              : 72
FORK                 : 
GOTO                 : 
GREATER              : 80
GREATEREQUAL         : 83
GREATERGREATER       : 
GUIONDOWN            : 
HEX                  : 
HEXADECIMAL          : 59
ID                   : 12 13 14 15 16 17 18 19 20 21 22 23 23 24 25 26 27 28 28 35 36 37 38 39 40 47 48 49 50 51 52 66 67 69 71 72 72 74 75 76 77 78 100 101 102 103 103 113 114 115
IF                   : 110 111 112
INCREMENTO           : 
INDEX                : 
INT                  : 
INTERROGATION        : 
ISEQUAL              : 81
JOIN                 : 
KEYS                 : 
LAST                 : 
LBLOCK               : 25 69 71 72 73 102 103 110 111 111 112 112 113
LBRACKET             : 31 34 37 40 43 46 49 52 67 101
LENGTH               : 
LESS                 : 79
LESSEQUAL            : 82
LESSLESS             : 
LOCAL                : 
LOG                  : 
LPAREN               : 22 26 27 30 33 36 39 42 45 48 51 70 71 72 73 94 95 99 110 111 112 112 115
MINUS                : 61
MINUSMINUS           : 97
MKDIR                : 
MY                   : 15 19 76 77
NEXT                 : 
NOT                  : 93
NOTS                 : 
OCT                  : 
OCTAL                : 58
OPEN                 : 
OR                   : 88
ORBW                 : 
ORS                  : 87
PACK                 : 
PESOS                : 14 15 16 17 18 19 20 66 67 69 71 72 74 75 76 77 78 100 101 102 103
PLUS                 : 60
PLUSGREATER          : 
PLUSLESS             : 
PLUSPLUS             : 96
POP                  : 
PORCENTAJE           : 24 25 26 27 28 28
POSTINDEX            : 
PREINDEX             : 
PRINT                : 98 99
PUSH                 : 
RAND                 : 
RBLOCK               : 25 69 71 72 73 102 103 110 111 111 112 112 113
RBRACKET             : 31 34 37 40 43 46 49 52 67 101
READ                 : 
REFERENCE            : 
REFERENCIALISTA      : 
REFERENCIAS          : 
RENAME               : 
REQUIRE              : 13
RETURN               : 
REVERSE              : 
RINDEX               : 
RMDIR                : 
RPAREN               : 22 26 27 30 33 36 39 42 45 48 51 70 71 72 73 94 95 99 110 111 112 112 115
SEEK                 : 
SELECT               : 
SEMICOLON            : 9 10 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 71 71 98 99
SHIFT                : 
SIN                  : 
SLEEP                : 
SORT                 : 
SPLIT                : 
SQRT                 : 
SUB                  : 113
SUBSTR               : 
SYSTEM               : 
TELL                 : 
TIMES                : 63
UNLESS               : 
UNSHIFT              : 
UNTIL                : 
USE                  : 12
VALUES               : 
WHILE                : 73
WRITE                : 
XOR                  : 
error                : 

Nonterminals, with rules where they appear

E                    : 10 16 60 61 70
F                    : 63 64 65
T                    : 60 61 62 63 64
arg                  : 98 99 106 108 109 115
call_function        : 9 17
ciclos               : 11
cond                 : 71 73 92 92 93 95 110 111 112 112
declaration          : 2 3
declaration_list     : 1 2 71 72 73 110 111 111 112 112 113
function_declaration : 8
header_declaration   : 4
incdec               : 18 71
lista                : 22 30 31 33 34 36 37 39 40 42 43 45 46 48 49 51 52 53
lista1               : 25 26 41 42 43 47 48 49
lista2               : 27 29 30 31 35 36 37
log                  : 92
print                : 5
program              : 0
sent_for             : 71 77 78
sentencia_if         : 7
type                 : 91 94 105 106
typevar              : 19 20 29 29 30 31 32 32 33 34 35 38 41 41 42 43 44 44 45 46 47 50 53 54 69 89 102
var_declaration      : 6
var_declaration_gen  : 90 104 108

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declaration_list
    (2) declaration_list -> . declaration declaration_list
    (3) declaration_list -> . declaration
    (4) declaration -> . header_declaration
    (5) declaration -> . print
    (6) declaration -> . var_declaration
    (7) declaration -> . sentencia_if
    (8) declaration -> . function_declaration
    (9) declaration -> . call_function SEMICOLON
    (10) declaration -> . E SEMICOLON
    (11) declaration -> . ciclos
    (12) header_declaration -> . USE ID SEMICOLON
    (13) header_declaration -> . REQUIRE ID SEMICOLON
    (98) print -> . PRINT arg SEMICOLON
    (99) print -> . PRINT LPAREN arg RPAREN SEMICOLON
    (14) var_declaration -> . PESOS ID SEMICOLON
    (15) var_declaration -> . MY PESOS ID SEMICOLON
    (16) var_declaration -> . PESOS ID EQUAL E SEMICOLON
    (17) var_declaration -> . PESOS ID EQUAL call_function SEMICOLON
    (18) var_declaration -> . PESOS ID incdec SEMICOLON
    (19) var_declaration -> . MY PESOS ID EQUAL typevar SEMICOLON
    (20) var_declaration -> . PESOS ID EQUAL typevar SEMICOLON
    (21) var_declaration -> . ARROBA ID SEMICOLON
    (22) var_declaration -> . ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON
    (23) var_declaration -> . ARROBA ID EQUAL ARROBA ID SEMICOLON
    (24) var_declaration -> . PORCENTAJE ID SEMICOLON
    (25) var_declaration -> . PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON
    (26) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON
    (27) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON
    (28) var_declaration -> . PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON
    (110) sentencia_if -> . IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
    (111) sentencia_if -> . IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK
    (112) sentencia_if -> . IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
    (113) function_declaration -> . SUB ID LBLOCK declaration_list RBLOCK
    (114) call_function -> . ANDBW ID
    (115) call_function -> . ANDBW ID LPAREN arg RPAREN
    (60) E -> . E PLUS T
    (61) E -> . E MINUS T
    (62) E -> . T
    (71) ciclos -> . FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK
    (72) ciclos -> . FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK
    (73) ciclos -> . WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
    (63) T -> . T TIMES F
    (64) T -> . T DIVIDE F
    (65) T -> . F
    (66) F -> . PESOS ID
    (67) F -> . PESOS ID LBRACKET ENTERO RBRACKET
    (68) F -> . ENTERO
    (69) F -> . PESOS ID LBLOCK typevar RBLOCK
    (70) F -> . LPAREN E RPAREN

    USE             shift and go to state 1
    REQUIRE         shift and go to state 3
    PRINT           shift and go to state 8
    PESOS           shift and go to state 4
    MY              shift and go to state 26
    ARROBA          shift and go to state 28
    PORCENTAJE      shift and go to state 22
    IF              shift and go to state 21
    SUB             shift and go to state 9
    ANDBW           shift and go to state 6
    FOR             shift and go to state 16
    FOREACH         shift and go to state 24
    WHILE           shift and go to state 5
    ENTERO          shift and go to state 13
    LPAREN          shift and go to state 19

    header_declaration             shift and go to state 14
    E                              shift and go to state 15
    function_declaration           shift and go to state 23
    call_function                  shift and go to state 2
    F                              shift and go to state 17
    T                              shift and go to state 18
    declaration_list               shift and go to state 25
    var_declaration                shift and go to state 10
    program                        shift and go to state 11
    ciclos                         shift and go to state 7
    declaration                    shift and go to state 20
    print                          shift and go to state 12
    sentencia_if                   shift and go to state 27

state 1

    (12) header_declaration -> USE . ID SEMICOLON

    ID              shift and go to state 29


state 2

    (9) declaration -> call_function . SEMICOLON

    SEMICOLON       shift and go to state 30


state 3

    (13) header_declaration -> REQUIRE . ID SEMICOLON

    ID              shift and go to state 31


state 4

    (14) var_declaration -> PESOS . ID SEMICOLON
    (16) var_declaration -> PESOS . ID EQUAL E SEMICOLON
    (17) var_declaration -> PESOS . ID EQUAL call_function SEMICOLON
    (18) var_declaration -> PESOS . ID incdec SEMICOLON
    (20) var_declaration -> PESOS . ID EQUAL typevar SEMICOLON
    (66) F -> PESOS . ID
    (67) F -> PESOS . ID LBRACKET ENTERO RBRACKET
    (69) F -> PESOS . ID LBLOCK typevar RBLOCK

    ID              shift and go to state 32


state 5

    (73) ciclos -> WHILE . LPAREN cond RPAREN LBLOCK declaration_list RBLOCK

    LPAREN          shift and go to state 33


state 6

    (114) call_function -> ANDBW . ID
    (115) call_function -> ANDBW . ID LPAREN arg RPAREN

    ID              shift and go to state 34


state 7

    (11) declaration -> ciclos .

    USE             reduce using rule 11 (declaration -> ciclos .)
    REQUIRE         reduce using rule 11 (declaration -> ciclos .)
    PRINT           reduce using rule 11 (declaration -> ciclos .)
    PESOS           reduce using rule 11 (declaration -> ciclos .)
    MY              reduce using rule 11 (declaration -> ciclos .)
    ARROBA          reduce using rule 11 (declaration -> ciclos .)
    PORCENTAJE      reduce using rule 11 (declaration -> ciclos .)
    IF              reduce using rule 11 (declaration -> ciclos .)
    SUB             reduce using rule 11 (declaration -> ciclos .)
    ANDBW           reduce using rule 11 (declaration -> ciclos .)
    FOR             reduce using rule 11 (declaration -> ciclos .)
    FOREACH         reduce using rule 11 (declaration -> ciclos .)
    WHILE           reduce using rule 11 (declaration -> ciclos .)
    ENTERO          reduce using rule 11 (declaration -> ciclos .)
    LPAREN          reduce using rule 11 (declaration -> ciclos .)
    RBLOCK          reduce using rule 11 (declaration -> ciclos .)
    $end            reduce using rule 11 (declaration -> ciclos .)


state 8

    (98) print -> PRINT . arg SEMICOLON
    (99) print -> PRINT . LPAREN arg RPAREN SEMICOLON
    (104) arg -> . var_declaration_gen
    (105) arg -> . type
    (106) arg -> . type COMMA arg
    (107) arg -> . CADENA
    (108) arg -> . var_declaration_gen COMMA arg
    (109) arg -> . CADENA COMMA arg
    (100) var_declaration_gen -> . PESOS ID
    (101) var_declaration_gen -> . PESOS ID LBRACKET ENTERO RBRACKET
    (102) var_declaration_gen -> . PESOS ID LBLOCK typevar RBLOCK
    (103) var_declaration_gen -> . PESOS ID LBLOCK ID RBLOCK
    (89) type -> . typevar
    (90) type -> . var_declaration_gen
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    LPAREN          shift and go to state 42
    CADENA          shift and go to state 38
    PESOS           shift and go to state 37
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    typevar                        shift and go to state 35
    var_declaration_gen            shift and go to state 36
    type                           shift and go to state 44
    arg                            shift and go to state 43

state 9

    (113) function_declaration -> SUB . ID LBLOCK declaration_list RBLOCK

    ID              shift and go to state 46


state 10

    (6) declaration -> var_declaration .

    USE             reduce using rule 6 (declaration -> var_declaration .)
    REQUIRE         reduce using rule 6 (declaration -> var_declaration .)
    PRINT           reduce using rule 6 (declaration -> var_declaration .)
    PESOS           reduce using rule 6 (declaration -> var_declaration .)
    MY              reduce using rule 6 (declaration -> var_declaration .)
    ARROBA          reduce using rule 6 (declaration -> var_declaration .)
    PORCENTAJE      reduce using rule 6 (declaration -> var_declaration .)
    IF              reduce using rule 6 (declaration -> var_declaration .)
    SUB             reduce using rule 6 (declaration -> var_declaration .)
    ANDBW           reduce using rule 6 (declaration -> var_declaration .)
    FOR             reduce using rule 6 (declaration -> var_declaration .)
    FOREACH         reduce using rule 6 (declaration -> var_declaration .)
    WHILE           reduce using rule 6 (declaration -> var_declaration .)
    ENTERO          reduce using rule 6 (declaration -> var_declaration .)
    LPAREN          reduce using rule 6 (declaration -> var_declaration .)
    RBLOCK          reduce using rule 6 (declaration -> var_declaration .)
    $end            reduce using rule 6 (declaration -> var_declaration .)


state 11

    (0) S' -> program .



state 12

    (5) declaration -> print .

    USE             reduce using rule 5 (declaration -> print .)
    REQUIRE         reduce using rule 5 (declaration -> print .)
    PRINT           reduce using rule 5 (declaration -> print .)
    PESOS           reduce using rule 5 (declaration -> print .)
    MY              reduce using rule 5 (declaration -> print .)
    ARROBA          reduce using rule 5 (declaration -> print .)
    PORCENTAJE      reduce using rule 5 (declaration -> print .)
    IF              reduce using rule 5 (declaration -> print .)
    SUB             reduce using rule 5 (declaration -> print .)
    ANDBW           reduce using rule 5 (declaration -> print .)
    FOR             reduce using rule 5 (declaration -> print .)
    FOREACH         reduce using rule 5 (declaration -> print .)
    WHILE           reduce using rule 5 (declaration -> print .)
    ENTERO          reduce using rule 5 (declaration -> print .)
    LPAREN          reduce using rule 5 (declaration -> print .)
    RBLOCK          reduce using rule 5 (declaration -> print .)
    $end            reduce using rule 5 (declaration -> print .)


state 13

    (68) F -> ENTERO .

    TIMES           reduce using rule 68 (F -> ENTERO .)
    DIVIDE          reduce using rule 68 (F -> ENTERO .)
    SEMICOLON       reduce using rule 68 (F -> ENTERO .)
    PLUS            reduce using rule 68 (F -> ENTERO .)
    MINUS           reduce using rule 68 (F -> ENTERO .)
    RPAREN          reduce using rule 68 (F -> ENTERO .)


state 14

    (4) declaration -> header_declaration .

    USE             reduce using rule 4 (declaration -> header_declaration .)
    REQUIRE         reduce using rule 4 (declaration -> header_declaration .)
    PRINT           reduce using rule 4 (declaration -> header_declaration .)
    PESOS           reduce using rule 4 (declaration -> header_declaration .)
    MY              reduce using rule 4 (declaration -> header_declaration .)
    ARROBA          reduce using rule 4 (declaration -> header_declaration .)
    PORCENTAJE      reduce using rule 4 (declaration -> header_declaration .)
    IF              reduce using rule 4 (declaration -> header_declaration .)
    SUB             reduce using rule 4 (declaration -> header_declaration .)
    ANDBW           reduce using rule 4 (declaration -> header_declaration .)
    FOR             reduce using rule 4 (declaration -> header_declaration .)
    FOREACH         reduce using rule 4 (declaration -> header_declaration .)
    WHILE           reduce using rule 4 (declaration -> header_declaration .)
    ENTERO          reduce using rule 4 (declaration -> header_declaration .)
    LPAREN          reduce using rule 4 (declaration -> header_declaration .)
    RBLOCK          reduce using rule 4 (declaration -> header_declaration .)
    $end            reduce using rule 4 (declaration -> header_declaration .)


state 15

    (10) declaration -> E . SEMICOLON
    (60) E -> E . PLUS T
    (61) E -> E . MINUS T

    SEMICOLON       shift and go to state 48
    PLUS            shift and go to state 47
    MINUS           shift and go to state 49


state 16

    (71) ciclos -> FOR . LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK

    LPAREN          shift and go to state 50


state 17

    (65) T -> F .

    TIMES           reduce using rule 65 (T -> F .)
    DIVIDE          reduce using rule 65 (T -> F .)
    SEMICOLON       reduce using rule 65 (T -> F .)
    PLUS            reduce using rule 65 (T -> F .)
    MINUS           reduce using rule 65 (T -> F .)
    RPAREN          reduce using rule 65 (T -> F .)


state 18

    (62) E -> T .
    (63) T -> T . TIMES F
    (64) T -> T . DIVIDE F

    SEMICOLON       reduce using rule 62 (E -> T .)
    PLUS            reduce using rule 62 (E -> T .)
    MINUS           reduce using rule 62 (E -> T .)
    RPAREN          reduce using rule 62 (E -> T .)
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 51


state 19

    (70) F -> LPAREN . E RPAREN
    (60) E -> . E PLUS T
    (61) E -> . E MINUS T
    (62) E -> . T
    (63) T -> . T TIMES F
    (64) T -> . T DIVIDE F
    (65) T -> . F
    (66) F -> . PESOS ID
    (67) F -> . PESOS ID LBRACKET ENTERO RBRACKET
    (68) F -> . ENTERO
    (69) F -> . PESOS ID LBLOCK typevar RBLOCK
    (70) F -> . LPAREN E RPAREN

    PESOS           shift and go to state 53
    ENTERO          shift and go to state 13
    LPAREN          shift and go to state 19

    E                              shift and go to state 54
    T                              shift and go to state 18
    F                              shift and go to state 17

state 20

    (2) declaration_list -> declaration . declaration_list
    (3) declaration_list -> declaration .
    (2) declaration_list -> . declaration declaration_list
    (3) declaration_list -> . declaration
    (4) declaration -> . header_declaration
    (5) declaration -> . print
    (6) declaration -> . var_declaration
    (7) declaration -> . sentencia_if
    (8) declaration -> . function_declaration
    (9) declaration -> . call_function SEMICOLON
    (10) declaration -> . E SEMICOLON
    (11) declaration -> . ciclos
    (12) header_declaration -> . USE ID SEMICOLON
    (13) header_declaration -> . REQUIRE ID SEMICOLON
    (98) print -> . PRINT arg SEMICOLON
    (99) print -> . PRINT LPAREN arg RPAREN SEMICOLON
    (14) var_declaration -> . PESOS ID SEMICOLON
    (15) var_declaration -> . MY PESOS ID SEMICOLON
    (16) var_declaration -> . PESOS ID EQUAL E SEMICOLON
    (17) var_declaration -> . PESOS ID EQUAL call_function SEMICOLON
    (18) var_declaration -> . PESOS ID incdec SEMICOLON
    (19) var_declaration -> . MY PESOS ID EQUAL typevar SEMICOLON
    (20) var_declaration -> . PESOS ID EQUAL typevar SEMICOLON
    (21) var_declaration -> . ARROBA ID SEMICOLON
    (22) var_declaration -> . ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON
    (23) var_declaration -> . ARROBA ID EQUAL ARROBA ID SEMICOLON
    (24) var_declaration -> . PORCENTAJE ID SEMICOLON
    (25) var_declaration -> . PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON
    (26) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON
    (27) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON
    (28) var_declaration -> . PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON
    (110) sentencia_if -> . IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
    (111) sentencia_if -> . IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK
    (112) sentencia_if -> . IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
    (113) function_declaration -> . SUB ID LBLOCK declaration_list RBLOCK
    (114) call_function -> . ANDBW ID
    (115) call_function -> . ANDBW ID LPAREN arg RPAREN
    (60) E -> . E PLUS T
    (61) E -> . E MINUS T
    (62) E -> . T
    (71) ciclos -> . FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK
    (72) ciclos -> . FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK
    (73) ciclos -> . WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
    (63) T -> . T TIMES F
    (64) T -> . T DIVIDE F
    (65) T -> . F
    (66) F -> . PESOS ID
    (67) F -> . PESOS ID LBRACKET ENTERO RBRACKET
    (68) F -> . ENTERO
    (69) F -> . PESOS ID LBLOCK typevar RBLOCK
    (70) F -> . LPAREN E RPAREN

    RBLOCK          reduce using rule 3 (declaration_list -> declaration .)
    $end            reduce using rule 3 (declaration_list -> declaration .)
    USE             shift and go to state 1
    REQUIRE         shift and go to state 3
    PRINT           shift and go to state 8
    PESOS           shift and go to state 4
    MY              shift and go to state 26
    ARROBA          shift and go to state 28
    PORCENTAJE      shift and go to state 22
    IF              shift and go to state 21
    SUB             shift and go to state 9
    ANDBW           shift and go to state 6
    FOR             shift and go to state 16
    FOREACH         shift and go to state 24
    WHILE           shift and go to state 5
    ENTERO          shift and go to state 13
    LPAREN          shift and go to state 19

    header_declaration             shift and go to state 14
    E                              shift and go to state 15
    function_declaration           shift and go to state 23
    call_function                  shift and go to state 2
    F                              shift and go to state 17
    T                              shift and go to state 18
    declaration_list               shift and go to state 55
    var_declaration                shift and go to state 10
    ciclos                         shift and go to state 7
    declaration                    shift and go to state 20
    print                          shift and go to state 12
    sentencia_if                   shift and go to state 27

state 21

    (110) sentencia_if -> IF . LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
    (111) sentencia_if -> IF . LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK
    (112) sentencia_if -> IF . LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK

    LPAREN          shift and go to state 56


state 22

    (24) var_declaration -> PORCENTAJE . ID SEMICOLON
    (25) var_declaration -> PORCENTAJE . ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON
    (26) var_declaration -> PORCENTAJE . ID EQUAL LPAREN lista1 RPAREN SEMICOLON
    (27) var_declaration -> PORCENTAJE . ID EQUAL LPAREN lista2 RPAREN SEMICOLON
    (28) var_declaration -> PORCENTAJE . ID EQUAL PORCENTAJE ID SEMICOLON

    ID              shift and go to state 57


state 23

    (8) declaration -> function_declaration .

    USE             reduce using rule 8 (declaration -> function_declaration .)
    REQUIRE         reduce using rule 8 (declaration -> function_declaration .)
    PRINT           reduce using rule 8 (declaration -> function_declaration .)
    PESOS           reduce using rule 8 (declaration -> function_declaration .)
    MY              reduce using rule 8 (declaration -> function_declaration .)
    ARROBA          reduce using rule 8 (declaration -> function_declaration .)
    PORCENTAJE      reduce using rule 8 (declaration -> function_declaration .)
    IF              reduce using rule 8 (declaration -> function_declaration .)
    SUB             reduce using rule 8 (declaration -> function_declaration .)
    ANDBW           reduce using rule 8 (declaration -> function_declaration .)
    FOR             reduce using rule 8 (declaration -> function_declaration .)
    FOREACH         reduce using rule 8 (declaration -> function_declaration .)
    WHILE           reduce using rule 8 (declaration -> function_declaration .)
    ENTERO          reduce using rule 8 (declaration -> function_declaration .)
    LPAREN          reduce using rule 8 (declaration -> function_declaration .)
    RBLOCK          reduce using rule 8 (declaration -> function_declaration .)
    $end            reduce using rule 8 (declaration -> function_declaration .)


state 24

    (72) ciclos -> FOREACH . PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK

    PESOS           shift and go to state 58


state 25

    (1) program -> declaration_list .

    $end            reduce using rule 1 (program -> declaration_list .)


state 26

    (15) var_declaration -> MY . PESOS ID SEMICOLON
    (19) var_declaration -> MY . PESOS ID EQUAL typevar SEMICOLON

    PESOS           shift and go to state 59


state 27

    (7) declaration -> sentencia_if .

    USE             reduce using rule 7 (declaration -> sentencia_if .)
    REQUIRE         reduce using rule 7 (declaration -> sentencia_if .)
    PRINT           reduce using rule 7 (declaration -> sentencia_if .)
    PESOS           reduce using rule 7 (declaration -> sentencia_if .)
    MY              reduce using rule 7 (declaration -> sentencia_if .)
    ARROBA          reduce using rule 7 (declaration -> sentencia_if .)
    PORCENTAJE      reduce using rule 7 (declaration -> sentencia_if .)
    IF              reduce using rule 7 (declaration -> sentencia_if .)
    SUB             reduce using rule 7 (declaration -> sentencia_if .)
    ANDBW           reduce using rule 7 (declaration -> sentencia_if .)
    FOR             reduce using rule 7 (declaration -> sentencia_if .)
    FOREACH         reduce using rule 7 (declaration -> sentencia_if .)
    WHILE           reduce using rule 7 (declaration -> sentencia_if .)
    ENTERO          reduce using rule 7 (declaration -> sentencia_if .)
    LPAREN          reduce using rule 7 (declaration -> sentencia_if .)
    RBLOCK          reduce using rule 7 (declaration -> sentencia_if .)
    $end            reduce using rule 7 (declaration -> sentencia_if .)


state 28

    (21) var_declaration -> ARROBA . ID SEMICOLON
    (22) var_declaration -> ARROBA . ID EQUAL LPAREN lista RPAREN SEMICOLON
    (23) var_declaration -> ARROBA . ID EQUAL ARROBA ID SEMICOLON

    ID              shift and go to state 60


state 29

    (12) header_declaration -> USE ID . SEMICOLON

    SEMICOLON       shift and go to state 61


state 30

    (9) declaration -> call_function SEMICOLON .

    USE             reduce using rule 9 (declaration -> call_function SEMICOLON .)
    REQUIRE         reduce using rule 9 (declaration -> call_function SEMICOLON .)
    PRINT           reduce using rule 9 (declaration -> call_function SEMICOLON .)
    PESOS           reduce using rule 9 (declaration -> call_function SEMICOLON .)
    MY              reduce using rule 9 (declaration -> call_function SEMICOLON .)
    ARROBA          reduce using rule 9 (declaration -> call_function SEMICOLON .)
    PORCENTAJE      reduce using rule 9 (declaration -> call_function SEMICOLON .)
    IF              reduce using rule 9 (declaration -> call_function SEMICOLON .)
    SUB             reduce using rule 9 (declaration -> call_function SEMICOLON .)
    ANDBW           reduce using rule 9 (declaration -> call_function SEMICOLON .)
    FOR             reduce using rule 9 (declaration -> call_function SEMICOLON .)
    FOREACH         reduce using rule 9 (declaration -> call_function SEMICOLON .)
    WHILE           reduce using rule 9 (declaration -> call_function SEMICOLON .)
    ENTERO          reduce using rule 9 (declaration -> call_function SEMICOLON .)
    LPAREN          reduce using rule 9 (declaration -> call_function SEMICOLON .)
    RBLOCK          reduce using rule 9 (declaration -> call_function SEMICOLON .)
    $end            reduce using rule 9 (declaration -> call_function SEMICOLON .)


state 31

    (13) header_declaration -> REQUIRE ID . SEMICOLON

    SEMICOLON       shift and go to state 62


state 32

    (14) var_declaration -> PESOS ID . SEMICOLON
    (16) var_declaration -> PESOS ID . EQUAL E SEMICOLON
    (17) var_declaration -> PESOS ID . EQUAL call_function SEMICOLON
    (18) var_declaration -> PESOS ID . incdec SEMICOLON
    (20) var_declaration -> PESOS ID . EQUAL typevar SEMICOLON
    (66) F -> PESOS ID .
    (67) F -> PESOS ID . LBRACKET ENTERO RBRACKET
    (69) F -> PESOS ID . LBLOCK typevar RBLOCK
    (96) incdec -> . PLUSPLUS
    (97) incdec -> . MINUSMINUS

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 64
    EQUAL           shift and go to state 66
    TIMES           reduce using rule 66 (F -> PESOS ID .)
    DIVIDE          reduce using rule 66 (F -> PESOS ID .)
    PLUS            reduce using rule 66 (F -> PESOS ID .)
    MINUS           reduce using rule 66 (F -> PESOS ID .)
    LBRACKET        shift and go to state 67
    LBLOCK          shift and go to state 68
    PLUSPLUS        shift and go to state 65
    MINUSMINUS      shift and go to state 63

  ! SEMICOLON       [ reduce using rule 66 (F -> PESOS ID .) ]

    incdec                         shift and go to state 69

state 33

    (73) ciclos -> WHILE LPAREN . cond RPAREN LBLOCK declaration_list RBLOCK
    (91) cond -> . type
    (92) cond -> . cond log cond
    (93) cond -> . NOT cond
    (94) cond -> . LPAREN type RPAREN
    (95) cond -> . LPAREN cond RPAREN
    (89) type -> . typevar
    (90) type -> . var_declaration_gen
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL
    (100) var_declaration_gen -> . PESOS ID
    (101) var_declaration_gen -> . PESOS ID LBRACKET ENTERO RBRACKET
    (102) var_declaration_gen -> . PESOS ID LBLOCK typevar RBLOCK
    (103) var_declaration_gen -> . PESOS ID LBLOCK ID RBLOCK

    NOT             shift and go to state 74
    LPAREN          shift and go to state 73
    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41
    PESOS           shift and go to state 37

    typevar                        shift and go to state 35
    var_declaration_gen            shift and go to state 70
    cond                           shift and go to state 72
    type                           shift and go to state 75

state 34

    (114) call_function -> ANDBW ID .
    (115) call_function -> ANDBW ID . LPAREN arg RPAREN

    SEMICOLON       reduce using rule 114 (call_function -> ANDBW ID .)
    LPAREN          shift and go to state 76


state 35

    (89) type -> typevar .

    COMMA           reduce using rule 89 (type -> typevar .)
    SEMICOLON       reduce using rule 89 (type -> typevar .)
    RPAREN          reduce using rule 89 (type -> typevar .)
    LESS            reduce using rule 89 (type -> typevar .)
    GREATER         reduce using rule 89 (type -> typevar .)
    ISEQUAL         reduce using rule 89 (type -> typevar .)
    LESSEQUAL       reduce using rule 89 (type -> typevar .)
    GREATEREQUAL    reduce using rule 89 (type -> typevar .)
    DEQUAL          reduce using rule 89 (type -> typevar .)
    AND             reduce using rule 89 (type -> typevar .)
    ANDS            reduce using rule 89 (type -> typevar .)
    ORS             reduce using rule 89 (type -> typevar .)
    OR              reduce using rule 89 (type -> typevar .)


state 36

    (104) arg -> var_declaration_gen .
    (108) arg -> var_declaration_gen . COMMA arg
    (90) type -> var_declaration_gen .

  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for SEMICOLON resolved using rule 90 (type -> var_declaration_gen .)
  ! reduce/reduce conflict for RPAREN resolved using rule 90 (type -> var_declaration_gen .)
    COMMA           shift and go to state 77
    SEMICOLON       reduce using rule 90 (type -> var_declaration_gen .)
    RPAREN          reduce using rule 90 (type -> var_declaration_gen .)

  ! SEMICOLON       [ reduce using rule 104 (arg -> var_declaration_gen .) ]
  ! RPAREN          [ reduce using rule 104 (arg -> var_declaration_gen .) ]
  ! COMMA           [ reduce using rule 90 (type -> var_declaration_gen .) ]


state 37

    (100) var_declaration_gen -> PESOS . ID
    (101) var_declaration_gen -> PESOS . ID LBRACKET ENTERO RBRACKET
    (102) var_declaration_gen -> PESOS . ID LBLOCK typevar RBLOCK
    (103) var_declaration_gen -> PESOS . ID LBLOCK ID RBLOCK

    ID              shift and go to state 78


state 38

    (107) arg -> CADENA .
    (109) arg -> CADENA . COMMA arg
    (55) typevar -> CADENA .

  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for SEMICOLON resolved using rule 55 (typevar -> CADENA .)
  ! reduce/reduce conflict for RPAREN resolved using rule 55 (typevar -> CADENA .)
    COMMA           shift and go to state 79
    SEMICOLON       reduce using rule 55 (typevar -> CADENA .)
    RPAREN          reduce using rule 55 (typevar -> CADENA .)

  ! SEMICOLON       [ reduce using rule 107 (arg -> CADENA .) ]
  ! RPAREN          [ reduce using rule 107 (arg -> CADENA .) ]
  ! COMMA           [ reduce using rule 55 (typevar -> CADENA .) ]


state 39

    (58) typevar -> OCTAL .

    COMMA           reduce using rule 58 (typevar -> OCTAL .)
    SEMICOLON       reduce using rule 58 (typevar -> OCTAL .)
    RPAREN          reduce using rule 58 (typevar -> OCTAL .)
    RBRACKET        reduce using rule 58 (typevar -> OCTAL .)
    EQUALGREATER    reduce using rule 58 (typevar -> OCTAL .)
    RBLOCK          reduce using rule 58 (typevar -> OCTAL .)
    LESS            reduce using rule 58 (typevar -> OCTAL .)
    GREATER         reduce using rule 58 (typevar -> OCTAL .)
    ISEQUAL         reduce using rule 58 (typevar -> OCTAL .)
    LESSEQUAL       reduce using rule 58 (typevar -> OCTAL .)
    GREATEREQUAL    reduce using rule 58 (typevar -> OCTAL .)
    DEQUAL          reduce using rule 58 (typevar -> OCTAL .)
    AND             reduce using rule 58 (typevar -> OCTAL .)
    ANDS            reduce using rule 58 (typevar -> OCTAL .)
    ORS             reduce using rule 58 (typevar -> OCTAL .)
    OR              reduce using rule 58 (typevar -> OCTAL .)


state 40

    (56) typevar -> CADENAA .

    COMMA           reduce using rule 56 (typevar -> CADENAA .)
    SEMICOLON       reduce using rule 56 (typevar -> CADENAA .)
    RPAREN          reduce using rule 56 (typevar -> CADENAA .)
    RBRACKET        reduce using rule 56 (typevar -> CADENAA .)
    EQUALGREATER    reduce using rule 56 (typevar -> CADENAA .)
    RBLOCK          reduce using rule 56 (typevar -> CADENAA .)
    LESS            reduce using rule 56 (typevar -> CADENAA .)
    GREATER         reduce using rule 56 (typevar -> CADENAA .)
    ISEQUAL         reduce using rule 56 (typevar -> CADENAA .)
    LESSEQUAL       reduce using rule 56 (typevar -> CADENAA .)
    GREATEREQUAL    reduce using rule 56 (typevar -> CADENAA .)
    DEQUAL          reduce using rule 56 (typevar -> CADENAA .)
    AND             reduce using rule 56 (typevar -> CADENAA .)
    ANDS            reduce using rule 56 (typevar -> CADENAA .)
    ORS             reduce using rule 56 (typevar -> CADENAA .)
    OR              reduce using rule 56 (typevar -> CADENAA .)


state 41

    (59) typevar -> HEXADECIMAL .

    COMMA           reduce using rule 59 (typevar -> HEXADECIMAL .)
    SEMICOLON       reduce using rule 59 (typevar -> HEXADECIMAL .)
    RPAREN          reduce using rule 59 (typevar -> HEXADECIMAL .)
    RBRACKET        reduce using rule 59 (typevar -> HEXADECIMAL .)
    EQUALGREATER    reduce using rule 59 (typevar -> HEXADECIMAL .)
    RBLOCK          reduce using rule 59 (typevar -> HEXADECIMAL .)
    LESS            reduce using rule 59 (typevar -> HEXADECIMAL .)
    GREATER         reduce using rule 59 (typevar -> HEXADECIMAL .)
    ISEQUAL         reduce using rule 59 (typevar -> HEXADECIMAL .)
    LESSEQUAL       reduce using rule 59 (typevar -> HEXADECIMAL .)
    GREATEREQUAL    reduce using rule 59 (typevar -> HEXADECIMAL .)
    DEQUAL          reduce using rule 59 (typevar -> HEXADECIMAL .)
    AND             reduce using rule 59 (typevar -> HEXADECIMAL .)
    ANDS            reduce using rule 59 (typevar -> HEXADECIMAL .)
    ORS             reduce using rule 59 (typevar -> HEXADECIMAL .)
    OR              reduce using rule 59 (typevar -> HEXADECIMAL .)


state 42

    (99) print -> PRINT LPAREN . arg RPAREN SEMICOLON
    (104) arg -> . var_declaration_gen
    (105) arg -> . type
    (106) arg -> . type COMMA arg
    (107) arg -> . CADENA
    (108) arg -> . var_declaration_gen COMMA arg
    (109) arg -> . CADENA COMMA arg
    (100) var_declaration_gen -> . PESOS ID
    (101) var_declaration_gen -> . PESOS ID LBRACKET ENTERO RBRACKET
    (102) var_declaration_gen -> . PESOS ID LBLOCK typevar RBLOCK
    (103) var_declaration_gen -> . PESOS ID LBLOCK ID RBLOCK
    (89) type -> . typevar
    (90) type -> . var_declaration_gen
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 38
    PESOS           shift and go to state 37
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    typevar                        shift and go to state 35
    var_declaration_gen            shift and go to state 36
    type                           shift and go to state 44
    arg                            shift and go to state 80

state 43

    (98) print -> PRINT arg . SEMICOLON

    SEMICOLON       shift and go to state 81


state 44

    (105) arg -> type .
    (106) arg -> type . COMMA arg

    SEMICOLON       reduce using rule 105 (arg -> type .)
    RPAREN          reduce using rule 105 (arg -> type .)
    COMMA           shift and go to state 82


state 45

    (57) typevar -> ENTERO .

    COMMA           reduce using rule 57 (typevar -> ENTERO .)
    SEMICOLON       reduce using rule 57 (typevar -> ENTERO .)
    RPAREN          reduce using rule 57 (typevar -> ENTERO .)
    RBRACKET        reduce using rule 57 (typevar -> ENTERO .)
    EQUALGREATER    reduce using rule 57 (typevar -> ENTERO .)
    RBLOCK          reduce using rule 57 (typevar -> ENTERO .)
    LESS            reduce using rule 57 (typevar -> ENTERO .)
    GREATER         reduce using rule 57 (typevar -> ENTERO .)
    ISEQUAL         reduce using rule 57 (typevar -> ENTERO .)
    LESSEQUAL       reduce using rule 57 (typevar -> ENTERO .)
    GREATEREQUAL    reduce using rule 57 (typevar -> ENTERO .)
    DEQUAL          reduce using rule 57 (typevar -> ENTERO .)
    AND             reduce using rule 57 (typevar -> ENTERO .)
    ANDS            reduce using rule 57 (typevar -> ENTERO .)
    ORS             reduce using rule 57 (typevar -> ENTERO .)
    OR              reduce using rule 57 (typevar -> ENTERO .)


state 46

    (113) function_declaration -> SUB ID . LBLOCK declaration_list RBLOCK

    LBLOCK          shift and go to state 83


state 47

    (60) E -> E PLUS . T
    (63) T -> . T TIMES F
    (64) T -> . T DIVIDE F
    (65) T -> . F
    (66) F -> . PESOS ID
    (67) F -> . PESOS ID LBRACKET ENTERO RBRACKET
    (68) F -> . ENTERO
    (69) F -> . PESOS ID LBLOCK typevar RBLOCK
    (70) F -> . LPAREN E RPAREN

    PESOS           shift and go to state 53
    ENTERO          shift and go to state 13
    LPAREN          shift and go to state 19

    T                              shift and go to state 84
    F                              shift and go to state 17

state 48

    (10) declaration -> E SEMICOLON .

    USE             reduce using rule 10 (declaration -> E SEMICOLON .)
    REQUIRE         reduce using rule 10 (declaration -> E SEMICOLON .)
    PRINT           reduce using rule 10 (declaration -> E SEMICOLON .)
    PESOS           reduce using rule 10 (declaration -> E SEMICOLON .)
    MY              reduce using rule 10 (declaration -> E SEMICOLON .)
    ARROBA          reduce using rule 10 (declaration -> E SEMICOLON .)
    PORCENTAJE      reduce using rule 10 (declaration -> E SEMICOLON .)
    IF              reduce using rule 10 (declaration -> E SEMICOLON .)
    SUB             reduce using rule 10 (declaration -> E SEMICOLON .)
    ANDBW           reduce using rule 10 (declaration -> E SEMICOLON .)
    FOR             reduce using rule 10 (declaration -> E SEMICOLON .)
    FOREACH         reduce using rule 10 (declaration -> E SEMICOLON .)
    WHILE           reduce using rule 10 (declaration -> E SEMICOLON .)
    ENTERO          reduce using rule 10 (declaration -> E SEMICOLON .)
    LPAREN          reduce using rule 10 (declaration -> E SEMICOLON .)
    RBLOCK          reduce using rule 10 (declaration -> E SEMICOLON .)
    $end            reduce using rule 10 (declaration -> E SEMICOLON .)


state 49

    (61) E -> E MINUS . T
    (63) T -> . T TIMES F
    (64) T -> . T DIVIDE F
    (65) T -> . F
    (66) F -> . PESOS ID
    (67) F -> . PESOS ID LBRACKET ENTERO RBRACKET
    (68) F -> . ENTERO
    (69) F -> . PESOS ID LBLOCK typevar RBLOCK
    (70) F -> . LPAREN E RPAREN

    PESOS           shift and go to state 53
    ENTERO          shift and go to state 13
    LPAREN          shift and go to state 19

    T                              shift and go to state 85
    F                              shift and go to state 17

state 50

    (71) ciclos -> FOR LPAREN . sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK
    (74) sent_for -> . PESOS ID
    (75) sent_for -> . PESOS ID EQUAL ENTERO
    (76) sent_for -> . MY PESOS ID EQUAL ENTERO
    (77) sent_for -> . MY PESOS ID EQUAL ENTERO COMMA sent_for
    (78) sent_for -> . PESOS ID EQUAL ENTERO COMMA sent_for

    PESOS           shift and go to state 87
    MY              shift and go to state 88

    sent_for                       shift and go to state 86

state 51

    (64) T -> T DIVIDE . F
    (66) F -> . PESOS ID
    (67) F -> . PESOS ID LBRACKET ENTERO RBRACKET
    (68) F -> . ENTERO
    (69) F -> . PESOS ID LBLOCK typevar RBLOCK
    (70) F -> . LPAREN E RPAREN

    PESOS           shift and go to state 53
    ENTERO          shift and go to state 13
    LPAREN          shift and go to state 19

    F                              shift and go to state 89

state 52

    (63) T -> T TIMES . F
    (66) F -> . PESOS ID
    (67) F -> . PESOS ID LBRACKET ENTERO RBRACKET
    (68) F -> . ENTERO
    (69) F -> . PESOS ID LBLOCK typevar RBLOCK
    (70) F -> . LPAREN E RPAREN

    PESOS           shift and go to state 53
    ENTERO          shift and go to state 13
    LPAREN          shift and go to state 19

    F                              shift and go to state 90

state 53

    (66) F -> PESOS . ID
    (67) F -> PESOS . ID LBRACKET ENTERO RBRACKET
    (69) F -> PESOS . ID LBLOCK typevar RBLOCK

    ID              shift and go to state 91


state 54

    (70) F -> LPAREN E . RPAREN
    (60) E -> E . PLUS T
    (61) E -> E . MINUS T

    RPAREN          shift and go to state 92
    PLUS            shift and go to state 47
    MINUS           shift and go to state 49


state 55

    (2) declaration_list -> declaration declaration_list .

    RBLOCK          reduce using rule 2 (declaration_list -> declaration declaration_list .)
    $end            reduce using rule 2 (declaration_list -> declaration declaration_list .)


state 56

    (110) sentencia_if -> IF LPAREN . cond RPAREN LBLOCK declaration_list RBLOCK
    (111) sentencia_if -> IF LPAREN . cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK
    (112) sentencia_if -> IF LPAREN . cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
    (91) cond -> . type
    (92) cond -> . cond log cond
    (93) cond -> . NOT cond
    (94) cond -> . LPAREN type RPAREN
    (95) cond -> . LPAREN cond RPAREN
    (89) type -> . typevar
    (90) type -> . var_declaration_gen
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL
    (100) var_declaration_gen -> . PESOS ID
    (101) var_declaration_gen -> . PESOS ID LBRACKET ENTERO RBRACKET
    (102) var_declaration_gen -> . PESOS ID LBLOCK typevar RBLOCK
    (103) var_declaration_gen -> . PESOS ID LBLOCK ID RBLOCK

    NOT             shift and go to state 74
    LPAREN          shift and go to state 73
    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41
    PESOS           shift and go to state 37

    typevar                        shift and go to state 35
    var_declaration_gen            shift and go to state 70
    cond                           shift and go to state 93
    type                           shift and go to state 75

state 57

    (24) var_declaration -> PORCENTAJE ID . SEMICOLON
    (25) var_declaration -> PORCENTAJE ID . EQUAL LBLOCK lista1 RBLOCK SEMICOLON
    (26) var_declaration -> PORCENTAJE ID . EQUAL LPAREN lista1 RPAREN SEMICOLON
    (27) var_declaration -> PORCENTAJE ID . EQUAL LPAREN lista2 RPAREN SEMICOLON
    (28) var_declaration -> PORCENTAJE ID . EQUAL PORCENTAJE ID SEMICOLON

    SEMICOLON       shift and go to state 94
    EQUAL           shift and go to state 95


state 58

    (72) ciclos -> FOREACH PESOS . ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK

    ID              shift and go to state 96


state 59

    (15) var_declaration -> MY PESOS . ID SEMICOLON
    (19) var_declaration -> MY PESOS . ID EQUAL typevar SEMICOLON

    ID              shift and go to state 97


state 60

    (21) var_declaration -> ARROBA ID . SEMICOLON
    (22) var_declaration -> ARROBA ID . EQUAL LPAREN lista RPAREN SEMICOLON
    (23) var_declaration -> ARROBA ID . EQUAL ARROBA ID SEMICOLON

    SEMICOLON       shift and go to state 98
    EQUAL           shift and go to state 99


state 61

    (12) header_declaration -> USE ID SEMICOLON .

    USE             reduce using rule 12 (header_declaration -> USE ID SEMICOLON .)
    REQUIRE         reduce using rule 12 (header_declaration -> USE ID SEMICOLON .)
    PRINT           reduce using rule 12 (header_declaration -> USE ID SEMICOLON .)
    PESOS           reduce using rule 12 (header_declaration -> USE ID SEMICOLON .)
    MY              reduce using rule 12 (header_declaration -> USE ID SEMICOLON .)
    ARROBA          reduce using rule 12 (header_declaration -> USE ID SEMICOLON .)
    PORCENTAJE      reduce using rule 12 (header_declaration -> USE ID SEMICOLON .)
    IF              reduce using rule 12 (header_declaration -> USE ID SEMICOLON .)
    SUB             reduce using rule 12 (header_declaration -> USE ID SEMICOLON .)
    ANDBW           reduce using rule 12 (header_declaration -> USE ID SEMICOLON .)
    FOR             reduce using rule 12 (header_declaration -> USE ID SEMICOLON .)
    FOREACH         reduce using rule 12 (header_declaration -> USE ID SEMICOLON .)
    WHILE           reduce using rule 12 (header_declaration -> USE ID SEMICOLON .)
    ENTERO          reduce using rule 12 (header_declaration -> USE ID SEMICOLON .)
    LPAREN          reduce using rule 12 (header_declaration -> USE ID SEMICOLON .)
    $end            reduce using rule 12 (header_declaration -> USE ID SEMICOLON .)
    RBLOCK          reduce using rule 12 (header_declaration -> USE ID SEMICOLON .)


state 62

    (13) header_declaration -> REQUIRE ID SEMICOLON .

    USE             reduce using rule 13 (header_declaration -> REQUIRE ID SEMICOLON .)
    REQUIRE         reduce using rule 13 (header_declaration -> REQUIRE ID SEMICOLON .)
    PRINT           reduce using rule 13 (header_declaration -> REQUIRE ID SEMICOLON .)
    PESOS           reduce using rule 13 (header_declaration -> REQUIRE ID SEMICOLON .)
    MY              reduce using rule 13 (header_declaration -> REQUIRE ID SEMICOLON .)
    ARROBA          reduce using rule 13 (header_declaration -> REQUIRE ID SEMICOLON .)
    PORCENTAJE      reduce using rule 13 (header_declaration -> REQUIRE ID SEMICOLON .)
    IF              reduce using rule 13 (header_declaration -> REQUIRE ID SEMICOLON .)
    SUB             reduce using rule 13 (header_declaration -> REQUIRE ID SEMICOLON .)
    ANDBW           reduce using rule 13 (header_declaration -> REQUIRE ID SEMICOLON .)
    FOR             reduce using rule 13 (header_declaration -> REQUIRE ID SEMICOLON .)
    FOREACH         reduce using rule 13 (header_declaration -> REQUIRE ID SEMICOLON .)
    WHILE           reduce using rule 13 (header_declaration -> REQUIRE ID SEMICOLON .)
    ENTERO          reduce using rule 13 (header_declaration -> REQUIRE ID SEMICOLON .)
    LPAREN          reduce using rule 13 (header_declaration -> REQUIRE ID SEMICOLON .)
    $end            reduce using rule 13 (header_declaration -> REQUIRE ID SEMICOLON .)
    RBLOCK          reduce using rule 13 (header_declaration -> REQUIRE ID SEMICOLON .)


state 63

    (97) incdec -> MINUSMINUS .

    SEMICOLON       reduce using rule 97 (incdec -> MINUSMINUS .)
    RPAREN          reduce using rule 97 (incdec -> MINUSMINUS .)


state 64

    (14) var_declaration -> PESOS ID SEMICOLON .

    USE             reduce using rule 14 (var_declaration -> PESOS ID SEMICOLON .)
    REQUIRE         reduce using rule 14 (var_declaration -> PESOS ID SEMICOLON .)
    PRINT           reduce using rule 14 (var_declaration -> PESOS ID SEMICOLON .)
    PESOS           reduce using rule 14 (var_declaration -> PESOS ID SEMICOLON .)
    MY              reduce using rule 14 (var_declaration -> PESOS ID SEMICOLON .)
    ARROBA          reduce using rule 14 (var_declaration -> PESOS ID SEMICOLON .)
    PORCENTAJE      reduce using rule 14 (var_declaration -> PESOS ID SEMICOLON .)
    IF              reduce using rule 14 (var_declaration -> PESOS ID SEMICOLON .)
    SUB             reduce using rule 14 (var_declaration -> PESOS ID SEMICOLON .)
    ANDBW           reduce using rule 14 (var_declaration -> PESOS ID SEMICOLON .)
    FOR             reduce using rule 14 (var_declaration -> PESOS ID SEMICOLON .)
    FOREACH         reduce using rule 14 (var_declaration -> PESOS ID SEMICOLON .)
    WHILE           reduce using rule 14 (var_declaration -> PESOS ID SEMICOLON .)
    ENTERO          reduce using rule 14 (var_declaration -> PESOS ID SEMICOLON .)
    LPAREN          reduce using rule 14 (var_declaration -> PESOS ID SEMICOLON .)
    $end            reduce using rule 14 (var_declaration -> PESOS ID SEMICOLON .)
    RBLOCK          reduce using rule 14 (var_declaration -> PESOS ID SEMICOLON .)


state 65

    (96) incdec -> PLUSPLUS .

    SEMICOLON       reduce using rule 96 (incdec -> PLUSPLUS .)
    RPAREN          reduce using rule 96 (incdec -> PLUSPLUS .)


state 66

    (16) var_declaration -> PESOS ID EQUAL . E SEMICOLON
    (17) var_declaration -> PESOS ID EQUAL . call_function SEMICOLON
    (20) var_declaration -> PESOS ID EQUAL . typevar SEMICOLON
    (60) E -> . E PLUS T
    (61) E -> . E MINUS T
    (62) E -> . T
    (114) call_function -> . ANDBW ID
    (115) call_function -> . ANDBW ID LPAREN arg RPAREN
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL
    (63) T -> . T TIMES F
    (64) T -> . T DIVIDE F
    (65) T -> . F
    (66) F -> . PESOS ID
    (67) F -> . PESOS ID LBRACKET ENTERO RBRACKET
    (68) F -> . ENTERO
    (69) F -> . PESOS ID LBLOCK typevar RBLOCK
    (70) F -> . LPAREN E RPAREN

    ANDBW           shift and go to state 6
    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 102
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41
    PESOS           shift and go to state 53
    LPAREN          shift and go to state 19

    typevar                        shift and go to state 101
    call_function                  shift and go to state 100
    F                              shift and go to state 17
    T                              shift and go to state 18
    E                              shift and go to state 103

state 67

    (67) F -> PESOS ID LBRACKET . ENTERO RBRACKET

    ENTERO          shift and go to state 104


state 68

    (69) F -> PESOS ID LBLOCK . typevar RBLOCK
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    typevar                        shift and go to state 105

state 69

    (18) var_declaration -> PESOS ID incdec . SEMICOLON

    SEMICOLON       shift and go to state 106


state 70

    (90) type -> var_declaration_gen .

    RPAREN          reduce using rule 90 (type -> var_declaration_gen .)
    LESS            reduce using rule 90 (type -> var_declaration_gen .)
    GREATER         reduce using rule 90 (type -> var_declaration_gen .)
    ISEQUAL         reduce using rule 90 (type -> var_declaration_gen .)
    LESSEQUAL       reduce using rule 90 (type -> var_declaration_gen .)
    GREATEREQUAL    reduce using rule 90 (type -> var_declaration_gen .)
    DEQUAL          reduce using rule 90 (type -> var_declaration_gen .)
    AND             reduce using rule 90 (type -> var_declaration_gen .)
    ANDS            reduce using rule 90 (type -> var_declaration_gen .)
    ORS             reduce using rule 90 (type -> var_declaration_gen .)
    OR              reduce using rule 90 (type -> var_declaration_gen .)
    SEMICOLON       reduce using rule 90 (type -> var_declaration_gen .)


state 71

    (55) typevar -> CADENA .

    COMMA           reduce using rule 55 (typevar -> CADENA .)
    RBRACKET        reduce using rule 55 (typevar -> CADENA .)
    EQUALGREATER    reduce using rule 55 (typevar -> CADENA .)
    RBLOCK          reduce using rule 55 (typevar -> CADENA .)
    RPAREN          reduce using rule 55 (typevar -> CADENA .)
    LESS            reduce using rule 55 (typevar -> CADENA .)
    GREATER         reduce using rule 55 (typevar -> CADENA .)
    ISEQUAL         reduce using rule 55 (typevar -> CADENA .)
    LESSEQUAL       reduce using rule 55 (typevar -> CADENA .)
    GREATEREQUAL    reduce using rule 55 (typevar -> CADENA .)
    DEQUAL          reduce using rule 55 (typevar -> CADENA .)
    AND             reduce using rule 55 (typevar -> CADENA .)
    ANDS            reduce using rule 55 (typevar -> CADENA .)
    ORS             reduce using rule 55 (typevar -> CADENA .)
    OR              reduce using rule 55 (typevar -> CADENA .)
    SEMICOLON       reduce using rule 55 (typevar -> CADENA .)


state 72

    (73) ciclos -> WHILE LPAREN cond . RPAREN LBLOCK declaration_list RBLOCK
    (92) cond -> cond . log cond
    (79) log -> . LESS
    (80) log -> . GREATER
    (81) log -> . ISEQUAL
    (82) log -> . LESSEQUAL
    (83) log -> . GREATEREQUAL
    (84) log -> . DEQUAL
    (85) log -> . AND
    (86) log -> . ANDS
    (87) log -> . ORS
    (88) log -> . OR

    RPAREN          shift and go to state 109
    LESS            shift and go to state 111
    GREATER         shift and go to state 118
    ISEQUAL         shift and go to state 113
    LESSEQUAL       shift and go to state 115
    GREATEREQUAL    shift and go to state 108
    DEQUAL          shift and go to state 112
    AND             shift and go to state 107
    ANDS            shift and go to state 117
    ORS             shift and go to state 114
    OR              shift and go to state 116

    log                            shift and go to state 110

state 73

    (94) cond -> LPAREN . type RPAREN
    (95) cond -> LPAREN . cond RPAREN
    (89) type -> . typevar
    (90) type -> . var_declaration_gen
    (91) cond -> . type
    (92) cond -> . cond log cond
    (93) cond -> . NOT cond
    (94) cond -> . LPAREN type RPAREN
    (95) cond -> . LPAREN cond RPAREN
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL
    (100) var_declaration_gen -> . PESOS ID
    (101) var_declaration_gen -> . PESOS ID LBRACKET ENTERO RBRACKET
    (102) var_declaration_gen -> . PESOS ID LBLOCK typevar RBLOCK
    (103) var_declaration_gen -> . PESOS ID LBLOCK ID RBLOCK

    NOT             shift and go to state 74
    LPAREN          shift and go to state 73
    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41
    PESOS           shift and go to state 37

    typevar                        shift and go to state 35
    cond                           shift and go to state 119
    var_declaration_gen            shift and go to state 70
    type                           shift and go to state 120

state 74

    (93) cond -> NOT . cond
    (91) cond -> . type
    (92) cond -> . cond log cond
    (93) cond -> . NOT cond
    (94) cond -> . LPAREN type RPAREN
    (95) cond -> . LPAREN cond RPAREN
    (89) type -> . typevar
    (90) type -> . var_declaration_gen
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL
    (100) var_declaration_gen -> . PESOS ID
    (101) var_declaration_gen -> . PESOS ID LBRACKET ENTERO RBRACKET
    (102) var_declaration_gen -> . PESOS ID LBLOCK typevar RBLOCK
    (103) var_declaration_gen -> . PESOS ID LBLOCK ID RBLOCK

    NOT             shift and go to state 74
    LPAREN          shift and go to state 73
    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41
    PESOS           shift and go to state 37

    typevar                        shift and go to state 35
    type                           shift and go to state 75
    var_declaration_gen            shift and go to state 70
    cond                           shift and go to state 121

state 75

    (91) cond -> type .

    SEMICOLON       reduce using rule 91 (cond -> type .)
    LESS            reduce using rule 91 (cond -> type .)
    GREATER         reduce using rule 91 (cond -> type .)
    ISEQUAL         reduce using rule 91 (cond -> type .)
    LESSEQUAL       reduce using rule 91 (cond -> type .)
    GREATEREQUAL    reduce using rule 91 (cond -> type .)
    DEQUAL          reduce using rule 91 (cond -> type .)
    AND             reduce using rule 91 (cond -> type .)
    ANDS            reduce using rule 91 (cond -> type .)
    ORS             reduce using rule 91 (cond -> type .)
    OR              reduce using rule 91 (cond -> type .)
    RPAREN          reduce using rule 91 (cond -> type .)


state 76

    (115) call_function -> ANDBW ID LPAREN . arg RPAREN
    (104) arg -> . var_declaration_gen
    (105) arg -> . type
    (106) arg -> . type COMMA arg
    (107) arg -> . CADENA
    (108) arg -> . var_declaration_gen COMMA arg
    (109) arg -> . CADENA COMMA arg
    (100) var_declaration_gen -> . PESOS ID
    (101) var_declaration_gen -> . PESOS ID LBRACKET ENTERO RBRACKET
    (102) var_declaration_gen -> . PESOS ID LBLOCK typevar RBLOCK
    (103) var_declaration_gen -> . PESOS ID LBLOCK ID RBLOCK
    (89) type -> . typevar
    (90) type -> . var_declaration_gen
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 38
    PESOS           shift and go to state 37
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    typevar                        shift and go to state 35
    var_declaration_gen            shift and go to state 36
    type                           shift and go to state 44
    arg                            shift and go to state 122

state 77

    (108) arg -> var_declaration_gen COMMA . arg
    (104) arg -> . var_declaration_gen
    (105) arg -> . type
    (106) arg -> . type COMMA arg
    (107) arg -> . CADENA
    (108) arg -> . var_declaration_gen COMMA arg
    (109) arg -> . CADENA COMMA arg
    (100) var_declaration_gen -> . PESOS ID
    (101) var_declaration_gen -> . PESOS ID LBRACKET ENTERO RBRACKET
    (102) var_declaration_gen -> . PESOS ID LBLOCK typevar RBLOCK
    (103) var_declaration_gen -> . PESOS ID LBLOCK ID RBLOCK
    (89) type -> . typevar
    (90) type -> . var_declaration_gen
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 38
    PESOS           shift and go to state 37
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    typevar                        shift and go to state 35
    var_declaration_gen            shift and go to state 36
    type                           shift and go to state 44
    arg                            shift and go to state 123

state 78

    (100) var_declaration_gen -> PESOS ID .
    (101) var_declaration_gen -> PESOS ID . LBRACKET ENTERO RBRACKET
    (102) var_declaration_gen -> PESOS ID . LBLOCK typevar RBLOCK
    (103) var_declaration_gen -> PESOS ID . LBLOCK ID RBLOCK

    SEMICOLON       reduce using rule 100 (var_declaration_gen -> PESOS ID .)
    LESS            reduce using rule 100 (var_declaration_gen -> PESOS ID .)
    GREATER         reduce using rule 100 (var_declaration_gen -> PESOS ID .)
    ISEQUAL         reduce using rule 100 (var_declaration_gen -> PESOS ID .)
    LESSEQUAL       reduce using rule 100 (var_declaration_gen -> PESOS ID .)
    GREATEREQUAL    reduce using rule 100 (var_declaration_gen -> PESOS ID .)
    DEQUAL          reduce using rule 100 (var_declaration_gen -> PESOS ID .)
    AND             reduce using rule 100 (var_declaration_gen -> PESOS ID .)
    ANDS            reduce using rule 100 (var_declaration_gen -> PESOS ID .)
    ORS             reduce using rule 100 (var_declaration_gen -> PESOS ID .)
    OR              reduce using rule 100 (var_declaration_gen -> PESOS ID .)
    RPAREN          reduce using rule 100 (var_declaration_gen -> PESOS ID .)
    COMMA           reduce using rule 100 (var_declaration_gen -> PESOS ID .)
    LBRACKET        shift and go to state 124
    LBLOCK          shift and go to state 125


state 79

    (109) arg -> CADENA COMMA . arg
    (104) arg -> . var_declaration_gen
    (105) arg -> . type
    (106) arg -> . type COMMA arg
    (107) arg -> . CADENA
    (108) arg -> . var_declaration_gen COMMA arg
    (109) arg -> . CADENA COMMA arg
    (100) var_declaration_gen -> . PESOS ID
    (101) var_declaration_gen -> . PESOS ID LBRACKET ENTERO RBRACKET
    (102) var_declaration_gen -> . PESOS ID LBLOCK typevar RBLOCK
    (103) var_declaration_gen -> . PESOS ID LBLOCK ID RBLOCK
    (89) type -> . typevar
    (90) type -> . var_declaration_gen
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 38
    PESOS           shift and go to state 37
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    typevar                        shift and go to state 35
    var_declaration_gen            shift and go to state 36
    type                           shift and go to state 44
    arg                            shift and go to state 126

state 80

    (99) print -> PRINT LPAREN arg . RPAREN SEMICOLON

    RPAREN          shift and go to state 127


state 81

    (98) print -> PRINT arg SEMICOLON .

    USE             reduce using rule 98 (print -> PRINT arg SEMICOLON .)
    REQUIRE         reduce using rule 98 (print -> PRINT arg SEMICOLON .)
    PRINT           reduce using rule 98 (print -> PRINT arg SEMICOLON .)
    PESOS           reduce using rule 98 (print -> PRINT arg SEMICOLON .)
    MY              reduce using rule 98 (print -> PRINT arg SEMICOLON .)
    ARROBA          reduce using rule 98 (print -> PRINT arg SEMICOLON .)
    PORCENTAJE      reduce using rule 98 (print -> PRINT arg SEMICOLON .)
    IF              reduce using rule 98 (print -> PRINT arg SEMICOLON .)
    SUB             reduce using rule 98 (print -> PRINT arg SEMICOLON .)
    ANDBW           reduce using rule 98 (print -> PRINT arg SEMICOLON .)
    FOR             reduce using rule 98 (print -> PRINT arg SEMICOLON .)
    FOREACH         reduce using rule 98 (print -> PRINT arg SEMICOLON .)
    WHILE           reduce using rule 98 (print -> PRINT arg SEMICOLON .)
    ENTERO          reduce using rule 98 (print -> PRINT arg SEMICOLON .)
    LPAREN          reduce using rule 98 (print -> PRINT arg SEMICOLON .)
    RBLOCK          reduce using rule 98 (print -> PRINT arg SEMICOLON .)
    $end            reduce using rule 98 (print -> PRINT arg SEMICOLON .)


state 82

    (106) arg -> type COMMA . arg
    (104) arg -> . var_declaration_gen
    (105) arg -> . type
    (106) arg -> . type COMMA arg
    (107) arg -> . CADENA
    (108) arg -> . var_declaration_gen COMMA arg
    (109) arg -> . CADENA COMMA arg
    (100) var_declaration_gen -> . PESOS ID
    (101) var_declaration_gen -> . PESOS ID LBRACKET ENTERO RBRACKET
    (102) var_declaration_gen -> . PESOS ID LBLOCK typevar RBLOCK
    (103) var_declaration_gen -> . PESOS ID LBLOCK ID RBLOCK
    (89) type -> . typevar
    (90) type -> . var_declaration_gen
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 38
    PESOS           shift and go to state 37
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    typevar                        shift and go to state 35
    var_declaration_gen            shift and go to state 36
    type                           shift and go to state 44
    arg                            shift and go to state 128

state 83

    (113) function_declaration -> SUB ID LBLOCK . declaration_list RBLOCK
    (2) declaration_list -> . declaration declaration_list
    (3) declaration_list -> . declaration
    (4) declaration -> . header_declaration
    (5) declaration -> . print
    (6) declaration -> . var_declaration
    (7) declaration -> . sentencia_if
    (8) declaration -> . function_declaration
    (9) declaration -> . call_function SEMICOLON
    (10) declaration -> . E SEMICOLON
    (11) declaration -> . ciclos
    (12) header_declaration -> . USE ID SEMICOLON
    (13) header_declaration -> . REQUIRE ID SEMICOLON
    (98) print -> . PRINT arg SEMICOLON
    (99) print -> . PRINT LPAREN arg RPAREN SEMICOLON
    (14) var_declaration -> . PESOS ID SEMICOLON
    (15) var_declaration -> . MY PESOS ID SEMICOLON
    (16) var_declaration -> . PESOS ID EQUAL E SEMICOLON
    (17) var_declaration -> . PESOS ID EQUAL call_function SEMICOLON
    (18) var_declaration -> . PESOS ID incdec SEMICOLON
    (19) var_declaration -> . MY PESOS ID EQUAL typevar SEMICOLON
    (20) var_declaration -> . PESOS ID EQUAL typevar SEMICOLON
    (21) var_declaration -> . ARROBA ID SEMICOLON
    (22) var_declaration -> . ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON
    (23) var_declaration -> . ARROBA ID EQUAL ARROBA ID SEMICOLON
    (24) var_declaration -> . PORCENTAJE ID SEMICOLON
    (25) var_declaration -> . PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON
    (26) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON
    (27) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON
    (28) var_declaration -> . PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON
    (110) sentencia_if -> . IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
    (111) sentencia_if -> . IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK
    (112) sentencia_if -> . IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
    (113) function_declaration -> . SUB ID LBLOCK declaration_list RBLOCK
    (114) call_function -> . ANDBW ID
    (115) call_function -> . ANDBW ID LPAREN arg RPAREN
    (60) E -> . E PLUS T
    (61) E -> . E MINUS T
    (62) E -> . T
    (71) ciclos -> . FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK
    (72) ciclos -> . FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK
    (73) ciclos -> . WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
    (63) T -> . T TIMES F
    (64) T -> . T DIVIDE F
    (65) T -> . F
    (66) F -> . PESOS ID
    (67) F -> . PESOS ID LBRACKET ENTERO RBRACKET
    (68) F -> . ENTERO
    (69) F -> . PESOS ID LBLOCK typevar RBLOCK
    (70) F -> . LPAREN E RPAREN

    USE             shift and go to state 1
    REQUIRE         shift and go to state 3
    PRINT           shift and go to state 8
    PESOS           shift and go to state 4
    MY              shift and go to state 26
    ARROBA          shift and go to state 28
    PORCENTAJE      shift and go to state 22
    IF              shift and go to state 21
    SUB             shift and go to state 9
    ANDBW           shift and go to state 6
    FOR             shift and go to state 16
    FOREACH         shift and go to state 24
    WHILE           shift and go to state 5
    ENTERO          shift and go to state 13
    LPAREN          shift and go to state 19

    header_declaration             shift and go to state 14
    E                              shift and go to state 15
    function_declaration           shift and go to state 23
    call_function                  shift and go to state 2
    F                              shift and go to state 17
    T                              shift and go to state 18
    declaration_list               shift and go to state 129
    var_declaration                shift and go to state 10
    ciclos                         shift and go to state 7
    declaration                    shift and go to state 20
    print                          shift and go to state 12
    sentencia_if                   shift and go to state 27

state 84

    (60) E -> E PLUS T .
    (63) T -> T . TIMES F
    (64) T -> T . DIVIDE F

    SEMICOLON       reduce using rule 60 (E -> E PLUS T .)
    PLUS            reduce using rule 60 (E -> E PLUS T .)
    MINUS           reduce using rule 60 (E -> E PLUS T .)
    RPAREN          reduce using rule 60 (E -> E PLUS T .)
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 51


state 85

    (61) E -> E MINUS T .
    (63) T -> T . TIMES F
    (64) T -> T . DIVIDE F

    SEMICOLON       reduce using rule 61 (E -> E MINUS T .)
    PLUS            reduce using rule 61 (E -> E MINUS T .)
    MINUS           reduce using rule 61 (E -> E MINUS T .)
    RPAREN          reduce using rule 61 (E -> E MINUS T .)
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 51


state 86

    (71) ciclos -> FOR LPAREN sent_for . SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK

    SEMICOLON       shift and go to state 130


state 87

    (74) sent_for -> PESOS . ID
    (75) sent_for -> PESOS . ID EQUAL ENTERO
    (78) sent_for -> PESOS . ID EQUAL ENTERO COMMA sent_for

    ID              shift and go to state 131


state 88

    (76) sent_for -> MY . PESOS ID EQUAL ENTERO
    (77) sent_for -> MY . PESOS ID EQUAL ENTERO COMMA sent_for

    PESOS           shift and go to state 132


state 89

    (64) T -> T DIVIDE F .

    TIMES           reduce using rule 64 (T -> T DIVIDE F .)
    DIVIDE          reduce using rule 64 (T -> T DIVIDE F .)
    SEMICOLON       reduce using rule 64 (T -> T DIVIDE F .)
    PLUS            reduce using rule 64 (T -> T DIVIDE F .)
    MINUS           reduce using rule 64 (T -> T DIVIDE F .)
    RPAREN          reduce using rule 64 (T -> T DIVIDE F .)


state 90

    (63) T -> T TIMES F .

    TIMES           reduce using rule 63 (T -> T TIMES F .)
    DIVIDE          reduce using rule 63 (T -> T TIMES F .)
    SEMICOLON       reduce using rule 63 (T -> T TIMES F .)
    PLUS            reduce using rule 63 (T -> T TIMES F .)
    MINUS           reduce using rule 63 (T -> T TIMES F .)
    RPAREN          reduce using rule 63 (T -> T TIMES F .)


state 91

    (66) F -> PESOS ID .
    (67) F -> PESOS ID . LBRACKET ENTERO RBRACKET
    (69) F -> PESOS ID . LBLOCK typevar RBLOCK

    TIMES           reduce using rule 66 (F -> PESOS ID .)
    DIVIDE          reduce using rule 66 (F -> PESOS ID .)
    SEMICOLON       reduce using rule 66 (F -> PESOS ID .)
    PLUS            reduce using rule 66 (F -> PESOS ID .)
    MINUS           reduce using rule 66 (F -> PESOS ID .)
    RPAREN          reduce using rule 66 (F -> PESOS ID .)
    LBRACKET        shift and go to state 67
    LBLOCK          shift and go to state 68


state 92

    (70) F -> LPAREN E RPAREN .

    TIMES           reduce using rule 70 (F -> LPAREN E RPAREN .)
    DIVIDE          reduce using rule 70 (F -> LPAREN E RPAREN .)
    SEMICOLON       reduce using rule 70 (F -> LPAREN E RPAREN .)
    PLUS            reduce using rule 70 (F -> LPAREN E RPAREN .)
    MINUS           reduce using rule 70 (F -> LPAREN E RPAREN .)
    RPAREN          reduce using rule 70 (F -> LPAREN E RPAREN .)


state 93

    (110) sentencia_if -> IF LPAREN cond . RPAREN LBLOCK declaration_list RBLOCK
    (111) sentencia_if -> IF LPAREN cond . RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK
    (112) sentencia_if -> IF LPAREN cond . RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
    (92) cond -> cond . log cond
    (79) log -> . LESS
    (80) log -> . GREATER
    (81) log -> . ISEQUAL
    (82) log -> . LESSEQUAL
    (83) log -> . GREATEREQUAL
    (84) log -> . DEQUAL
    (85) log -> . AND
    (86) log -> . ANDS
    (87) log -> . ORS
    (88) log -> . OR

    RPAREN          shift and go to state 133
    LESS            shift and go to state 111
    GREATER         shift and go to state 118
    ISEQUAL         shift and go to state 113
    LESSEQUAL       shift and go to state 115
    GREATEREQUAL    shift and go to state 108
    DEQUAL          shift and go to state 112
    AND             shift and go to state 107
    ANDS            shift and go to state 117
    ORS             shift and go to state 114
    OR              shift and go to state 116

    log                            shift and go to state 110

state 94

    (24) var_declaration -> PORCENTAJE ID SEMICOLON .

    USE             reduce using rule 24 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    REQUIRE         reduce using rule 24 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    PRINT           reduce using rule 24 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    PESOS           reduce using rule 24 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    MY              reduce using rule 24 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    ARROBA          reduce using rule 24 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    PORCENTAJE      reduce using rule 24 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    IF              reduce using rule 24 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    SUB             reduce using rule 24 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    ANDBW           reduce using rule 24 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    FOR             reduce using rule 24 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    FOREACH         reduce using rule 24 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    WHILE           reduce using rule 24 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    ENTERO          reduce using rule 24 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    LPAREN          reduce using rule 24 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    $end            reduce using rule 24 (var_declaration -> PORCENTAJE ID SEMICOLON .)
    RBLOCK          reduce using rule 24 (var_declaration -> PORCENTAJE ID SEMICOLON .)


state 95

    (25) var_declaration -> PORCENTAJE ID EQUAL . LBLOCK lista1 RBLOCK SEMICOLON
    (26) var_declaration -> PORCENTAJE ID EQUAL . LPAREN lista1 RPAREN SEMICOLON
    (27) var_declaration -> PORCENTAJE ID EQUAL . LPAREN lista2 RPAREN SEMICOLON
    (28) var_declaration -> PORCENTAJE ID EQUAL . PORCENTAJE ID SEMICOLON

    LBLOCK          shift and go to state 136
    LPAREN          shift and go to state 135
    PORCENTAJE      shift and go to state 134


state 96

    (72) ciclos -> FOREACH PESOS ID . LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK

    LPAREN          shift and go to state 137


state 97

    (15) var_declaration -> MY PESOS ID . SEMICOLON
    (19) var_declaration -> MY PESOS ID . EQUAL typevar SEMICOLON

    SEMICOLON       shift and go to state 138
    EQUAL           shift and go to state 139


state 98

    (21) var_declaration -> ARROBA ID SEMICOLON .

    USE             reduce using rule 21 (var_declaration -> ARROBA ID SEMICOLON .)
    REQUIRE         reduce using rule 21 (var_declaration -> ARROBA ID SEMICOLON .)
    PRINT           reduce using rule 21 (var_declaration -> ARROBA ID SEMICOLON .)
    PESOS           reduce using rule 21 (var_declaration -> ARROBA ID SEMICOLON .)
    MY              reduce using rule 21 (var_declaration -> ARROBA ID SEMICOLON .)
    ARROBA          reduce using rule 21 (var_declaration -> ARROBA ID SEMICOLON .)
    PORCENTAJE      reduce using rule 21 (var_declaration -> ARROBA ID SEMICOLON .)
    IF              reduce using rule 21 (var_declaration -> ARROBA ID SEMICOLON .)
    SUB             reduce using rule 21 (var_declaration -> ARROBA ID SEMICOLON .)
    ANDBW           reduce using rule 21 (var_declaration -> ARROBA ID SEMICOLON .)
    FOR             reduce using rule 21 (var_declaration -> ARROBA ID SEMICOLON .)
    FOREACH         reduce using rule 21 (var_declaration -> ARROBA ID SEMICOLON .)
    WHILE           reduce using rule 21 (var_declaration -> ARROBA ID SEMICOLON .)
    ENTERO          reduce using rule 21 (var_declaration -> ARROBA ID SEMICOLON .)
    LPAREN          reduce using rule 21 (var_declaration -> ARROBA ID SEMICOLON .)
    $end            reduce using rule 21 (var_declaration -> ARROBA ID SEMICOLON .)
    RBLOCK          reduce using rule 21 (var_declaration -> ARROBA ID SEMICOLON .)


state 99

    (22) var_declaration -> ARROBA ID EQUAL . LPAREN lista RPAREN SEMICOLON
    (23) var_declaration -> ARROBA ID EQUAL . ARROBA ID SEMICOLON

    LPAREN          shift and go to state 141
    ARROBA          shift and go to state 140


state 100

    (17) var_declaration -> PESOS ID EQUAL call_function . SEMICOLON

    SEMICOLON       shift and go to state 142


state 101

    (20) var_declaration -> PESOS ID EQUAL typevar . SEMICOLON

    SEMICOLON       shift and go to state 143


state 102

    (57) typevar -> ENTERO .
    (68) F -> ENTERO .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 57 (typevar -> ENTERO .)
    SEMICOLON       reduce using rule 57 (typevar -> ENTERO .)
    TIMES           reduce using rule 68 (F -> ENTERO .)
    DIVIDE          reduce using rule 68 (F -> ENTERO .)
    PLUS            reduce using rule 68 (F -> ENTERO .)
    MINUS           reduce using rule 68 (F -> ENTERO .)

  ! SEMICOLON       [ reduce using rule 68 (F -> ENTERO .) ]


state 103

    (16) var_declaration -> PESOS ID EQUAL E . SEMICOLON
    (60) E -> E . PLUS T
    (61) E -> E . MINUS T

    SEMICOLON       shift and go to state 144
    PLUS            shift and go to state 47
    MINUS           shift and go to state 49


state 104

    (67) F -> PESOS ID LBRACKET ENTERO . RBRACKET

    RBRACKET        shift and go to state 145


state 105

    (69) F -> PESOS ID LBLOCK typevar . RBLOCK

    RBLOCK          shift and go to state 146


state 106

    (18) var_declaration -> PESOS ID incdec SEMICOLON .

    USE             reduce using rule 18 (var_declaration -> PESOS ID incdec SEMICOLON .)
    REQUIRE         reduce using rule 18 (var_declaration -> PESOS ID incdec SEMICOLON .)
    PRINT           reduce using rule 18 (var_declaration -> PESOS ID incdec SEMICOLON .)
    PESOS           reduce using rule 18 (var_declaration -> PESOS ID incdec SEMICOLON .)
    MY              reduce using rule 18 (var_declaration -> PESOS ID incdec SEMICOLON .)
    ARROBA          reduce using rule 18 (var_declaration -> PESOS ID incdec SEMICOLON .)
    PORCENTAJE      reduce using rule 18 (var_declaration -> PESOS ID incdec SEMICOLON .)
    IF              reduce using rule 18 (var_declaration -> PESOS ID incdec SEMICOLON .)
    SUB             reduce using rule 18 (var_declaration -> PESOS ID incdec SEMICOLON .)
    ANDBW           reduce using rule 18 (var_declaration -> PESOS ID incdec SEMICOLON .)
    FOR             reduce using rule 18 (var_declaration -> PESOS ID incdec SEMICOLON .)
    FOREACH         reduce using rule 18 (var_declaration -> PESOS ID incdec SEMICOLON .)
    WHILE           reduce using rule 18 (var_declaration -> PESOS ID incdec SEMICOLON .)
    ENTERO          reduce using rule 18 (var_declaration -> PESOS ID incdec SEMICOLON .)
    LPAREN          reduce using rule 18 (var_declaration -> PESOS ID incdec SEMICOLON .)
    $end            reduce using rule 18 (var_declaration -> PESOS ID incdec SEMICOLON .)
    RBLOCK          reduce using rule 18 (var_declaration -> PESOS ID incdec SEMICOLON .)


state 107

    (85) log -> AND .

    NOT             reduce using rule 85 (log -> AND .)
    LPAREN          reduce using rule 85 (log -> AND .)
    CADENA          reduce using rule 85 (log -> AND .)
    CADENAA         reduce using rule 85 (log -> AND .)
    ENTERO          reduce using rule 85 (log -> AND .)
    OCTAL           reduce using rule 85 (log -> AND .)
    HEXADECIMAL     reduce using rule 85 (log -> AND .)
    PESOS           reduce using rule 85 (log -> AND .)


state 108

    (83) log -> GREATEREQUAL .

    NOT             reduce using rule 83 (log -> GREATEREQUAL .)
    LPAREN          reduce using rule 83 (log -> GREATEREQUAL .)
    CADENA          reduce using rule 83 (log -> GREATEREQUAL .)
    CADENAA         reduce using rule 83 (log -> GREATEREQUAL .)
    ENTERO          reduce using rule 83 (log -> GREATEREQUAL .)
    OCTAL           reduce using rule 83 (log -> GREATEREQUAL .)
    HEXADECIMAL     reduce using rule 83 (log -> GREATEREQUAL .)
    PESOS           reduce using rule 83 (log -> GREATEREQUAL .)


state 109

    (73) ciclos -> WHILE LPAREN cond RPAREN . LBLOCK declaration_list RBLOCK

    LBLOCK          shift and go to state 147


state 110

    (92) cond -> cond log . cond
    (91) cond -> . type
    (92) cond -> . cond log cond
    (93) cond -> . NOT cond
    (94) cond -> . LPAREN type RPAREN
    (95) cond -> . LPAREN cond RPAREN
    (89) type -> . typevar
    (90) type -> . var_declaration_gen
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL
    (100) var_declaration_gen -> . PESOS ID
    (101) var_declaration_gen -> . PESOS ID LBRACKET ENTERO RBRACKET
    (102) var_declaration_gen -> . PESOS ID LBLOCK typevar RBLOCK
    (103) var_declaration_gen -> . PESOS ID LBLOCK ID RBLOCK

    NOT             shift and go to state 74
    LPAREN          shift and go to state 73
    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41
    PESOS           shift and go to state 37

    typevar                        shift and go to state 35
    type                           shift and go to state 75
    var_declaration_gen            shift and go to state 70
    cond                           shift and go to state 148

state 111

    (79) log -> LESS .

    NOT             reduce using rule 79 (log -> LESS .)
    LPAREN          reduce using rule 79 (log -> LESS .)
    CADENA          reduce using rule 79 (log -> LESS .)
    CADENAA         reduce using rule 79 (log -> LESS .)
    ENTERO          reduce using rule 79 (log -> LESS .)
    OCTAL           reduce using rule 79 (log -> LESS .)
    HEXADECIMAL     reduce using rule 79 (log -> LESS .)
    PESOS           reduce using rule 79 (log -> LESS .)


state 112

    (84) log -> DEQUAL .

    NOT             reduce using rule 84 (log -> DEQUAL .)
    LPAREN          reduce using rule 84 (log -> DEQUAL .)
    CADENA          reduce using rule 84 (log -> DEQUAL .)
    CADENAA         reduce using rule 84 (log -> DEQUAL .)
    ENTERO          reduce using rule 84 (log -> DEQUAL .)
    OCTAL           reduce using rule 84 (log -> DEQUAL .)
    HEXADECIMAL     reduce using rule 84 (log -> DEQUAL .)
    PESOS           reduce using rule 84 (log -> DEQUAL .)


state 113

    (81) log -> ISEQUAL .

    NOT             reduce using rule 81 (log -> ISEQUAL .)
    LPAREN          reduce using rule 81 (log -> ISEQUAL .)
    CADENA          reduce using rule 81 (log -> ISEQUAL .)
    CADENAA         reduce using rule 81 (log -> ISEQUAL .)
    ENTERO          reduce using rule 81 (log -> ISEQUAL .)
    OCTAL           reduce using rule 81 (log -> ISEQUAL .)
    HEXADECIMAL     reduce using rule 81 (log -> ISEQUAL .)
    PESOS           reduce using rule 81 (log -> ISEQUAL .)


state 114

    (87) log -> ORS .

    NOT             reduce using rule 87 (log -> ORS .)
    LPAREN          reduce using rule 87 (log -> ORS .)
    CADENA          reduce using rule 87 (log -> ORS .)
    CADENAA         reduce using rule 87 (log -> ORS .)
    ENTERO          reduce using rule 87 (log -> ORS .)
    OCTAL           reduce using rule 87 (log -> ORS .)
    HEXADECIMAL     reduce using rule 87 (log -> ORS .)
    PESOS           reduce using rule 87 (log -> ORS .)


state 115

    (82) log -> LESSEQUAL .

    NOT             reduce using rule 82 (log -> LESSEQUAL .)
    LPAREN          reduce using rule 82 (log -> LESSEQUAL .)
    CADENA          reduce using rule 82 (log -> LESSEQUAL .)
    CADENAA         reduce using rule 82 (log -> LESSEQUAL .)
    ENTERO          reduce using rule 82 (log -> LESSEQUAL .)
    OCTAL           reduce using rule 82 (log -> LESSEQUAL .)
    HEXADECIMAL     reduce using rule 82 (log -> LESSEQUAL .)
    PESOS           reduce using rule 82 (log -> LESSEQUAL .)


state 116

    (88) log -> OR .

    NOT             reduce using rule 88 (log -> OR .)
    LPAREN          reduce using rule 88 (log -> OR .)
    CADENA          reduce using rule 88 (log -> OR .)
    CADENAA         reduce using rule 88 (log -> OR .)
    ENTERO          reduce using rule 88 (log -> OR .)
    OCTAL           reduce using rule 88 (log -> OR .)
    HEXADECIMAL     reduce using rule 88 (log -> OR .)
    PESOS           reduce using rule 88 (log -> OR .)


state 117

    (86) log -> ANDS .

    NOT             reduce using rule 86 (log -> ANDS .)
    LPAREN          reduce using rule 86 (log -> ANDS .)
    CADENA          reduce using rule 86 (log -> ANDS .)
    CADENAA         reduce using rule 86 (log -> ANDS .)
    ENTERO          reduce using rule 86 (log -> ANDS .)
    OCTAL           reduce using rule 86 (log -> ANDS .)
    HEXADECIMAL     reduce using rule 86 (log -> ANDS .)
    PESOS           reduce using rule 86 (log -> ANDS .)


state 118

    (80) log -> GREATER .

    NOT             reduce using rule 80 (log -> GREATER .)
    LPAREN          reduce using rule 80 (log -> GREATER .)
    CADENA          reduce using rule 80 (log -> GREATER .)
    CADENAA         reduce using rule 80 (log -> GREATER .)
    ENTERO          reduce using rule 80 (log -> GREATER .)
    OCTAL           reduce using rule 80 (log -> GREATER .)
    HEXADECIMAL     reduce using rule 80 (log -> GREATER .)
    PESOS           reduce using rule 80 (log -> GREATER .)


state 119

    (95) cond -> LPAREN cond . RPAREN
    (92) cond -> cond . log cond
    (79) log -> . LESS
    (80) log -> . GREATER
    (81) log -> . ISEQUAL
    (82) log -> . LESSEQUAL
    (83) log -> . GREATEREQUAL
    (84) log -> . DEQUAL
    (85) log -> . AND
    (86) log -> . ANDS
    (87) log -> . ORS
    (88) log -> . OR

    RPAREN          shift and go to state 149
    LESS            shift and go to state 111
    GREATER         shift and go to state 118
    ISEQUAL         shift and go to state 113
    LESSEQUAL       shift and go to state 115
    GREATEREQUAL    shift and go to state 108
    DEQUAL          shift and go to state 112
    AND             shift and go to state 107
    ANDS            shift and go to state 117
    ORS             shift and go to state 114
    OR              shift and go to state 116

    log                            shift and go to state 110

state 120

    (94) cond -> LPAREN type . RPAREN
    (91) cond -> type .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 150
    LESS            reduce using rule 91 (cond -> type .)
    GREATER         reduce using rule 91 (cond -> type .)
    ISEQUAL         reduce using rule 91 (cond -> type .)
    LESSEQUAL       reduce using rule 91 (cond -> type .)
    GREATEREQUAL    reduce using rule 91 (cond -> type .)
    DEQUAL          reduce using rule 91 (cond -> type .)
    AND             reduce using rule 91 (cond -> type .)
    ANDS            reduce using rule 91 (cond -> type .)
    ORS             reduce using rule 91 (cond -> type .)
    OR              reduce using rule 91 (cond -> type .)

  ! RPAREN          [ reduce using rule 91 (cond -> type .) ]


state 121

    (93) cond -> NOT cond .
    (92) cond -> cond . log cond
    (79) log -> . LESS
    (80) log -> . GREATER
    (81) log -> . ISEQUAL
    (82) log -> . LESSEQUAL
    (83) log -> . GREATEREQUAL
    (84) log -> . DEQUAL
    (85) log -> . AND
    (86) log -> . ANDS
    (87) log -> . ORS
    (88) log -> . OR

  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for DEQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for ANDS resolved as shift
  ! shift/reduce conflict for ORS resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 93 (cond -> NOT cond .)
    RPAREN          reduce using rule 93 (cond -> NOT cond .)
    LESS            shift and go to state 111
    GREATER         shift and go to state 118
    ISEQUAL         shift and go to state 113
    LESSEQUAL       shift and go to state 115
    GREATEREQUAL    shift and go to state 108
    DEQUAL          shift and go to state 112
    AND             shift and go to state 107
    ANDS            shift and go to state 117
    ORS             shift and go to state 114
    OR              shift and go to state 116

  ! LESS            [ reduce using rule 93 (cond -> NOT cond .) ]
  ! GREATER         [ reduce using rule 93 (cond -> NOT cond .) ]
  ! ISEQUAL         [ reduce using rule 93 (cond -> NOT cond .) ]
  ! LESSEQUAL       [ reduce using rule 93 (cond -> NOT cond .) ]
  ! GREATEREQUAL    [ reduce using rule 93 (cond -> NOT cond .) ]
  ! DEQUAL          [ reduce using rule 93 (cond -> NOT cond .) ]
  ! AND             [ reduce using rule 93 (cond -> NOT cond .) ]
  ! ANDS            [ reduce using rule 93 (cond -> NOT cond .) ]
  ! ORS             [ reduce using rule 93 (cond -> NOT cond .) ]
  ! OR              [ reduce using rule 93 (cond -> NOT cond .) ]

    log                            shift and go to state 110

state 122

    (115) call_function -> ANDBW ID LPAREN arg . RPAREN

    RPAREN          shift and go to state 151


state 123

    (108) arg -> var_declaration_gen COMMA arg .

    SEMICOLON       reduce using rule 108 (arg -> var_declaration_gen COMMA arg .)
    RPAREN          reduce using rule 108 (arg -> var_declaration_gen COMMA arg .)


state 124

    (101) var_declaration_gen -> PESOS ID LBRACKET . ENTERO RBRACKET

    ENTERO          shift and go to state 152


state 125

    (102) var_declaration_gen -> PESOS ID LBLOCK . typevar RBLOCK
    (103) var_declaration_gen -> PESOS ID LBLOCK . ID RBLOCK
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    ID              shift and go to state 154
    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    typevar                        shift and go to state 153

state 126

    (109) arg -> CADENA COMMA arg .

    SEMICOLON       reduce using rule 109 (arg -> CADENA COMMA arg .)
    RPAREN          reduce using rule 109 (arg -> CADENA COMMA arg .)


state 127

    (99) print -> PRINT LPAREN arg RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 155


state 128

    (106) arg -> type COMMA arg .

    SEMICOLON       reduce using rule 106 (arg -> type COMMA arg .)
    RPAREN          reduce using rule 106 (arg -> type COMMA arg .)


state 129

    (113) function_declaration -> SUB ID LBLOCK declaration_list . RBLOCK

    RBLOCK          shift and go to state 156


state 130

    (71) ciclos -> FOR LPAREN sent_for SEMICOLON . cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK
    (91) cond -> . type
    (92) cond -> . cond log cond
    (93) cond -> . NOT cond
    (94) cond -> . LPAREN type RPAREN
    (95) cond -> . LPAREN cond RPAREN
    (89) type -> . typevar
    (90) type -> . var_declaration_gen
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL
    (100) var_declaration_gen -> . PESOS ID
    (101) var_declaration_gen -> . PESOS ID LBRACKET ENTERO RBRACKET
    (102) var_declaration_gen -> . PESOS ID LBLOCK typevar RBLOCK
    (103) var_declaration_gen -> . PESOS ID LBLOCK ID RBLOCK

    NOT             shift and go to state 74
    LPAREN          shift and go to state 73
    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41
    PESOS           shift and go to state 37

    typevar                        shift and go to state 35
    cond                           shift and go to state 157
    type                           shift and go to state 75
    var_declaration_gen            shift and go to state 70

state 131

    (74) sent_for -> PESOS ID .
    (75) sent_for -> PESOS ID . EQUAL ENTERO
    (78) sent_for -> PESOS ID . EQUAL ENTERO COMMA sent_for

    SEMICOLON       reduce using rule 74 (sent_for -> PESOS ID .)
    EQUAL           shift and go to state 158


state 132

    (76) sent_for -> MY PESOS . ID EQUAL ENTERO
    (77) sent_for -> MY PESOS . ID EQUAL ENTERO COMMA sent_for

    ID              shift and go to state 159


state 133

    (110) sentencia_if -> IF LPAREN cond RPAREN . LBLOCK declaration_list RBLOCK
    (111) sentencia_if -> IF LPAREN cond RPAREN . LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK
    (112) sentencia_if -> IF LPAREN cond RPAREN . LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK

    LBLOCK          shift and go to state 160


state 134

    (28) var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE . ID SEMICOLON

    ID              shift and go to state 161


state 135

    (26) var_declaration -> PORCENTAJE ID EQUAL LPAREN . lista1 RPAREN SEMICOLON
    (27) var_declaration -> PORCENTAJE ID EQUAL LPAREN . lista2 RPAREN SEMICOLON
    (41) lista1 -> . typevar EQUALGREATER typevar COMMA lista1
    (42) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (43) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (44) lista1 -> . typevar EQUALGREATER typevar
    (45) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN
    (46) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET
    (47) lista1 -> . ID EQUALGREATER typevar COMMA lista1
    (48) lista1 -> . ID EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (49) lista1 -> . ID EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (50) lista1 -> . ID EQUALGREATER typevar
    (51) lista1 -> . ID EQUALGREATER LPAREN lista RPAREN
    (52) lista1 -> . ID EQUALGREATER LBRACKET lista RBRACKET
    (29) lista2 -> . typevar COMMA typevar COMMA lista2
    (30) lista2 -> . typevar COMMA LPAREN lista RPAREN COMMA lista2
    (31) lista2 -> . typevar COMMA LBRACKET lista RBRACKET COMMA lista2
    (32) lista2 -> . typevar COMMA typevar
    (33) lista2 -> . typevar COMMA LPAREN lista RPAREN
    (34) lista2 -> . typevar COMMA LBRACKET lista RBRACKET
    (35) lista2 -> . ID COMMA typevar COMMA lista2
    (36) lista2 -> . ID COMMA LPAREN lista RPAREN COMMA lista2
    (37) lista2 -> . ID COMMA LBRACKET lista RBRACKET COMMA lista2
    (38) lista2 -> . ID COMMA typevar
    (39) lista2 -> . ID COMMA LPAREN lista RPAREN
    (40) lista2 -> . ID COMMA LBRACKET lista RBRACKET
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    ID              shift and go to state 164
    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    typevar                        shift and go to state 162
    lista1                         shift and go to state 163
    lista2                         shift and go to state 165

state 136

    (25) var_declaration -> PORCENTAJE ID EQUAL LBLOCK . lista1 RBLOCK SEMICOLON
    (41) lista1 -> . typevar EQUALGREATER typevar COMMA lista1
    (42) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (43) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (44) lista1 -> . typevar EQUALGREATER typevar
    (45) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN
    (46) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET
    (47) lista1 -> . ID EQUALGREATER typevar COMMA lista1
    (48) lista1 -> . ID EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (49) lista1 -> . ID EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (50) lista1 -> . ID EQUALGREATER typevar
    (51) lista1 -> . ID EQUALGREATER LPAREN lista RPAREN
    (52) lista1 -> . ID EQUALGREATER LBRACKET lista RBRACKET
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    ID              shift and go to state 168
    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    typevar                        shift and go to state 166
    lista1                         shift and go to state 167

state 137

    (72) ciclos -> FOREACH PESOS ID LPAREN . ARROBA ID RPAREN LBLOCK declaration_list RBLOCK

    ARROBA          shift and go to state 169


state 138

    (15) var_declaration -> MY PESOS ID SEMICOLON .

    USE             reduce using rule 15 (var_declaration -> MY PESOS ID SEMICOLON .)
    REQUIRE         reduce using rule 15 (var_declaration -> MY PESOS ID SEMICOLON .)
    PRINT           reduce using rule 15 (var_declaration -> MY PESOS ID SEMICOLON .)
    PESOS           reduce using rule 15 (var_declaration -> MY PESOS ID SEMICOLON .)
    MY              reduce using rule 15 (var_declaration -> MY PESOS ID SEMICOLON .)
    ARROBA          reduce using rule 15 (var_declaration -> MY PESOS ID SEMICOLON .)
    PORCENTAJE      reduce using rule 15 (var_declaration -> MY PESOS ID SEMICOLON .)
    IF              reduce using rule 15 (var_declaration -> MY PESOS ID SEMICOLON .)
    SUB             reduce using rule 15 (var_declaration -> MY PESOS ID SEMICOLON .)
    ANDBW           reduce using rule 15 (var_declaration -> MY PESOS ID SEMICOLON .)
    FOR             reduce using rule 15 (var_declaration -> MY PESOS ID SEMICOLON .)
    FOREACH         reduce using rule 15 (var_declaration -> MY PESOS ID SEMICOLON .)
    WHILE           reduce using rule 15 (var_declaration -> MY PESOS ID SEMICOLON .)
    ENTERO          reduce using rule 15 (var_declaration -> MY PESOS ID SEMICOLON .)
    LPAREN          reduce using rule 15 (var_declaration -> MY PESOS ID SEMICOLON .)
    $end            reduce using rule 15 (var_declaration -> MY PESOS ID SEMICOLON .)
    RBLOCK          reduce using rule 15 (var_declaration -> MY PESOS ID SEMICOLON .)


state 139

    (19) var_declaration -> MY PESOS ID EQUAL . typevar SEMICOLON
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    typevar                        shift and go to state 170

state 140

    (23) var_declaration -> ARROBA ID EQUAL ARROBA . ID SEMICOLON

    ID              shift and go to state 171


state 141

    (22) var_declaration -> ARROBA ID EQUAL LPAREN . lista RPAREN SEMICOLON
    (53) lista -> . typevar COMMA lista
    (54) lista -> . typevar
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    typevar                        shift and go to state 172
    lista                          shift and go to state 173

state 142

    (17) var_declaration -> PESOS ID EQUAL call_function SEMICOLON .

    USE             reduce using rule 17 (var_declaration -> PESOS ID EQUAL call_function SEMICOLON .)
    REQUIRE         reduce using rule 17 (var_declaration -> PESOS ID EQUAL call_function SEMICOLON .)
    PRINT           reduce using rule 17 (var_declaration -> PESOS ID EQUAL call_function SEMICOLON .)
    PESOS           reduce using rule 17 (var_declaration -> PESOS ID EQUAL call_function SEMICOLON .)
    MY              reduce using rule 17 (var_declaration -> PESOS ID EQUAL call_function SEMICOLON .)
    ARROBA          reduce using rule 17 (var_declaration -> PESOS ID EQUAL call_function SEMICOLON .)
    PORCENTAJE      reduce using rule 17 (var_declaration -> PESOS ID EQUAL call_function SEMICOLON .)
    IF              reduce using rule 17 (var_declaration -> PESOS ID EQUAL call_function SEMICOLON .)
    SUB             reduce using rule 17 (var_declaration -> PESOS ID EQUAL call_function SEMICOLON .)
    ANDBW           reduce using rule 17 (var_declaration -> PESOS ID EQUAL call_function SEMICOLON .)
    FOR             reduce using rule 17 (var_declaration -> PESOS ID EQUAL call_function SEMICOLON .)
    FOREACH         reduce using rule 17 (var_declaration -> PESOS ID EQUAL call_function SEMICOLON .)
    WHILE           reduce using rule 17 (var_declaration -> PESOS ID EQUAL call_function SEMICOLON .)
    ENTERO          reduce using rule 17 (var_declaration -> PESOS ID EQUAL call_function SEMICOLON .)
    LPAREN          reduce using rule 17 (var_declaration -> PESOS ID EQUAL call_function SEMICOLON .)
    $end            reduce using rule 17 (var_declaration -> PESOS ID EQUAL call_function SEMICOLON .)
    RBLOCK          reduce using rule 17 (var_declaration -> PESOS ID EQUAL call_function SEMICOLON .)


state 143

    (20) var_declaration -> PESOS ID EQUAL typevar SEMICOLON .

    USE             reduce using rule 20 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    REQUIRE         reduce using rule 20 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    PRINT           reduce using rule 20 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    PESOS           reduce using rule 20 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    MY              reduce using rule 20 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    ARROBA          reduce using rule 20 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    PORCENTAJE      reduce using rule 20 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    IF              reduce using rule 20 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    SUB             reduce using rule 20 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    ANDBW           reduce using rule 20 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    FOR             reduce using rule 20 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    FOREACH         reduce using rule 20 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    WHILE           reduce using rule 20 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    ENTERO          reduce using rule 20 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    LPAREN          reduce using rule 20 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    $end            reduce using rule 20 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)
    RBLOCK          reduce using rule 20 (var_declaration -> PESOS ID EQUAL typevar SEMICOLON .)


state 144

    (16) var_declaration -> PESOS ID EQUAL E SEMICOLON .

    USE             reduce using rule 16 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    REQUIRE         reduce using rule 16 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    PRINT           reduce using rule 16 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    PESOS           reduce using rule 16 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    MY              reduce using rule 16 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    ARROBA          reduce using rule 16 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    PORCENTAJE      reduce using rule 16 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    IF              reduce using rule 16 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    SUB             reduce using rule 16 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    ANDBW           reduce using rule 16 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    FOR             reduce using rule 16 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    FOREACH         reduce using rule 16 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    WHILE           reduce using rule 16 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    ENTERO          reduce using rule 16 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    LPAREN          reduce using rule 16 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    $end            reduce using rule 16 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)
    RBLOCK          reduce using rule 16 (var_declaration -> PESOS ID EQUAL E SEMICOLON .)


state 145

    (67) F -> PESOS ID LBRACKET ENTERO RBRACKET .

    TIMES           reduce using rule 67 (F -> PESOS ID LBRACKET ENTERO RBRACKET .)
    DIVIDE          reduce using rule 67 (F -> PESOS ID LBRACKET ENTERO RBRACKET .)
    SEMICOLON       reduce using rule 67 (F -> PESOS ID LBRACKET ENTERO RBRACKET .)
    PLUS            reduce using rule 67 (F -> PESOS ID LBRACKET ENTERO RBRACKET .)
    MINUS           reduce using rule 67 (F -> PESOS ID LBRACKET ENTERO RBRACKET .)
    RPAREN          reduce using rule 67 (F -> PESOS ID LBRACKET ENTERO RBRACKET .)


state 146

    (69) F -> PESOS ID LBLOCK typevar RBLOCK .

    TIMES           reduce using rule 69 (F -> PESOS ID LBLOCK typevar RBLOCK .)
    DIVIDE          reduce using rule 69 (F -> PESOS ID LBLOCK typevar RBLOCK .)
    SEMICOLON       reduce using rule 69 (F -> PESOS ID LBLOCK typevar RBLOCK .)
    PLUS            reduce using rule 69 (F -> PESOS ID LBLOCK typevar RBLOCK .)
    MINUS           reduce using rule 69 (F -> PESOS ID LBLOCK typevar RBLOCK .)
    RPAREN          reduce using rule 69 (F -> PESOS ID LBLOCK typevar RBLOCK .)


state 147

    (73) ciclos -> WHILE LPAREN cond RPAREN LBLOCK . declaration_list RBLOCK
    (2) declaration_list -> . declaration declaration_list
    (3) declaration_list -> . declaration
    (4) declaration -> . header_declaration
    (5) declaration -> . print
    (6) declaration -> . var_declaration
    (7) declaration -> . sentencia_if
    (8) declaration -> . function_declaration
    (9) declaration -> . call_function SEMICOLON
    (10) declaration -> . E SEMICOLON
    (11) declaration -> . ciclos
    (12) header_declaration -> . USE ID SEMICOLON
    (13) header_declaration -> . REQUIRE ID SEMICOLON
    (98) print -> . PRINT arg SEMICOLON
    (99) print -> . PRINT LPAREN arg RPAREN SEMICOLON
    (14) var_declaration -> . PESOS ID SEMICOLON
    (15) var_declaration -> . MY PESOS ID SEMICOLON
    (16) var_declaration -> . PESOS ID EQUAL E SEMICOLON
    (17) var_declaration -> . PESOS ID EQUAL call_function SEMICOLON
    (18) var_declaration -> . PESOS ID incdec SEMICOLON
    (19) var_declaration -> . MY PESOS ID EQUAL typevar SEMICOLON
    (20) var_declaration -> . PESOS ID EQUAL typevar SEMICOLON
    (21) var_declaration -> . ARROBA ID SEMICOLON
    (22) var_declaration -> . ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON
    (23) var_declaration -> . ARROBA ID EQUAL ARROBA ID SEMICOLON
    (24) var_declaration -> . PORCENTAJE ID SEMICOLON
    (25) var_declaration -> . PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON
    (26) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON
    (27) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON
    (28) var_declaration -> . PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON
    (110) sentencia_if -> . IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
    (111) sentencia_if -> . IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK
    (112) sentencia_if -> . IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
    (113) function_declaration -> . SUB ID LBLOCK declaration_list RBLOCK
    (114) call_function -> . ANDBW ID
    (115) call_function -> . ANDBW ID LPAREN arg RPAREN
    (60) E -> . E PLUS T
    (61) E -> . E MINUS T
    (62) E -> . T
    (71) ciclos -> . FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK
    (72) ciclos -> . FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK
    (73) ciclos -> . WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
    (63) T -> . T TIMES F
    (64) T -> . T DIVIDE F
    (65) T -> . F
    (66) F -> . PESOS ID
    (67) F -> . PESOS ID LBRACKET ENTERO RBRACKET
    (68) F -> . ENTERO
    (69) F -> . PESOS ID LBLOCK typevar RBLOCK
    (70) F -> . LPAREN E RPAREN

    USE             shift and go to state 1
    REQUIRE         shift and go to state 3
    PRINT           shift and go to state 8
    PESOS           shift and go to state 4
    MY              shift and go to state 26
    ARROBA          shift and go to state 28
    PORCENTAJE      shift and go to state 22
    IF              shift and go to state 21
    SUB             shift and go to state 9
    ANDBW           shift and go to state 6
    FOR             shift and go to state 16
    FOREACH         shift and go to state 24
    WHILE           shift and go to state 5
    ENTERO          shift and go to state 13
    LPAREN          shift and go to state 19

    header_declaration             shift and go to state 14
    E                              shift and go to state 15
    function_declaration           shift and go to state 23
    call_function                  shift and go to state 2
    F                              shift and go to state 17
    T                              shift and go to state 18
    declaration_list               shift and go to state 174
    var_declaration                shift and go to state 10
    ciclos                         shift and go to state 7
    declaration                    shift and go to state 20
    print                          shift and go to state 12
    sentencia_if                   shift and go to state 27

state 148

    (92) cond -> cond log cond .
    (92) cond -> cond . log cond
    (79) log -> . LESS
    (80) log -> . GREATER
    (81) log -> . ISEQUAL
    (82) log -> . LESSEQUAL
    (83) log -> . GREATEREQUAL
    (84) log -> . DEQUAL
    (85) log -> . AND
    (86) log -> . ANDS
    (87) log -> . ORS
    (88) log -> . OR

  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for DEQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for ANDS resolved as shift
  ! shift/reduce conflict for ORS resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 92 (cond -> cond log cond .)
    RPAREN          reduce using rule 92 (cond -> cond log cond .)
    LESS            shift and go to state 111
    GREATER         shift and go to state 118
    ISEQUAL         shift and go to state 113
    LESSEQUAL       shift and go to state 115
    GREATEREQUAL    shift and go to state 108
    DEQUAL          shift and go to state 112
    AND             shift and go to state 107
    ANDS            shift and go to state 117
    ORS             shift and go to state 114
    OR              shift and go to state 116

  ! LESS            [ reduce using rule 92 (cond -> cond log cond .) ]
  ! GREATER         [ reduce using rule 92 (cond -> cond log cond .) ]
  ! ISEQUAL         [ reduce using rule 92 (cond -> cond log cond .) ]
  ! LESSEQUAL       [ reduce using rule 92 (cond -> cond log cond .) ]
  ! GREATEREQUAL    [ reduce using rule 92 (cond -> cond log cond .) ]
  ! DEQUAL          [ reduce using rule 92 (cond -> cond log cond .) ]
  ! AND             [ reduce using rule 92 (cond -> cond log cond .) ]
  ! ANDS            [ reduce using rule 92 (cond -> cond log cond .) ]
  ! ORS             [ reduce using rule 92 (cond -> cond log cond .) ]
  ! OR              [ reduce using rule 92 (cond -> cond log cond .) ]

    log                            shift and go to state 110

state 149

    (95) cond -> LPAREN cond RPAREN .

    SEMICOLON       reduce using rule 95 (cond -> LPAREN cond RPAREN .)
    LESS            reduce using rule 95 (cond -> LPAREN cond RPAREN .)
    GREATER         reduce using rule 95 (cond -> LPAREN cond RPAREN .)
    ISEQUAL         reduce using rule 95 (cond -> LPAREN cond RPAREN .)
    LESSEQUAL       reduce using rule 95 (cond -> LPAREN cond RPAREN .)
    GREATEREQUAL    reduce using rule 95 (cond -> LPAREN cond RPAREN .)
    DEQUAL          reduce using rule 95 (cond -> LPAREN cond RPAREN .)
    AND             reduce using rule 95 (cond -> LPAREN cond RPAREN .)
    ANDS            reduce using rule 95 (cond -> LPAREN cond RPAREN .)
    ORS             reduce using rule 95 (cond -> LPAREN cond RPAREN .)
    OR              reduce using rule 95 (cond -> LPAREN cond RPAREN .)
    RPAREN          reduce using rule 95 (cond -> LPAREN cond RPAREN .)


state 150

    (94) cond -> LPAREN type RPAREN .

    SEMICOLON       reduce using rule 94 (cond -> LPAREN type RPAREN .)
    LESS            reduce using rule 94 (cond -> LPAREN type RPAREN .)
    GREATER         reduce using rule 94 (cond -> LPAREN type RPAREN .)
    ISEQUAL         reduce using rule 94 (cond -> LPAREN type RPAREN .)
    LESSEQUAL       reduce using rule 94 (cond -> LPAREN type RPAREN .)
    GREATEREQUAL    reduce using rule 94 (cond -> LPAREN type RPAREN .)
    DEQUAL          reduce using rule 94 (cond -> LPAREN type RPAREN .)
    AND             reduce using rule 94 (cond -> LPAREN type RPAREN .)
    ANDS            reduce using rule 94 (cond -> LPAREN type RPAREN .)
    ORS             reduce using rule 94 (cond -> LPAREN type RPAREN .)
    OR              reduce using rule 94 (cond -> LPAREN type RPAREN .)
    RPAREN          reduce using rule 94 (cond -> LPAREN type RPAREN .)


state 151

    (115) call_function -> ANDBW ID LPAREN arg RPAREN .

    SEMICOLON       reduce using rule 115 (call_function -> ANDBW ID LPAREN arg RPAREN .)


state 152

    (101) var_declaration_gen -> PESOS ID LBRACKET ENTERO . RBRACKET

    RBRACKET        shift and go to state 175


state 153

    (102) var_declaration_gen -> PESOS ID LBLOCK typevar . RBLOCK

    RBLOCK          shift and go to state 176


state 154

    (103) var_declaration_gen -> PESOS ID LBLOCK ID . RBLOCK

    RBLOCK          shift and go to state 177


state 155

    (99) print -> PRINT LPAREN arg RPAREN SEMICOLON .

    USE             reduce using rule 99 (print -> PRINT LPAREN arg RPAREN SEMICOLON .)
    REQUIRE         reduce using rule 99 (print -> PRINT LPAREN arg RPAREN SEMICOLON .)
    PRINT           reduce using rule 99 (print -> PRINT LPAREN arg RPAREN SEMICOLON .)
    PESOS           reduce using rule 99 (print -> PRINT LPAREN arg RPAREN SEMICOLON .)
    MY              reduce using rule 99 (print -> PRINT LPAREN arg RPAREN SEMICOLON .)
    ARROBA          reduce using rule 99 (print -> PRINT LPAREN arg RPAREN SEMICOLON .)
    PORCENTAJE      reduce using rule 99 (print -> PRINT LPAREN arg RPAREN SEMICOLON .)
    IF              reduce using rule 99 (print -> PRINT LPAREN arg RPAREN SEMICOLON .)
    SUB             reduce using rule 99 (print -> PRINT LPAREN arg RPAREN SEMICOLON .)
    ANDBW           reduce using rule 99 (print -> PRINT LPAREN arg RPAREN SEMICOLON .)
    FOR             reduce using rule 99 (print -> PRINT LPAREN arg RPAREN SEMICOLON .)
    FOREACH         reduce using rule 99 (print -> PRINT LPAREN arg RPAREN SEMICOLON .)
    WHILE           reduce using rule 99 (print -> PRINT LPAREN arg RPAREN SEMICOLON .)
    ENTERO          reduce using rule 99 (print -> PRINT LPAREN arg RPAREN SEMICOLON .)
    LPAREN          reduce using rule 99 (print -> PRINT LPAREN arg RPAREN SEMICOLON .)
    RBLOCK          reduce using rule 99 (print -> PRINT LPAREN arg RPAREN SEMICOLON .)
    $end            reduce using rule 99 (print -> PRINT LPAREN arg RPAREN SEMICOLON .)


state 156

    (113) function_declaration -> SUB ID LBLOCK declaration_list RBLOCK .

    USE             reduce using rule 113 (function_declaration -> SUB ID LBLOCK declaration_list RBLOCK .)
    REQUIRE         reduce using rule 113 (function_declaration -> SUB ID LBLOCK declaration_list RBLOCK .)
    PRINT           reduce using rule 113 (function_declaration -> SUB ID LBLOCK declaration_list RBLOCK .)
    PESOS           reduce using rule 113 (function_declaration -> SUB ID LBLOCK declaration_list RBLOCK .)
    MY              reduce using rule 113 (function_declaration -> SUB ID LBLOCK declaration_list RBLOCK .)
    ARROBA          reduce using rule 113 (function_declaration -> SUB ID LBLOCK declaration_list RBLOCK .)
    PORCENTAJE      reduce using rule 113 (function_declaration -> SUB ID LBLOCK declaration_list RBLOCK .)
    IF              reduce using rule 113 (function_declaration -> SUB ID LBLOCK declaration_list RBLOCK .)
    SUB             reduce using rule 113 (function_declaration -> SUB ID LBLOCK declaration_list RBLOCK .)
    ANDBW           reduce using rule 113 (function_declaration -> SUB ID LBLOCK declaration_list RBLOCK .)
    FOR             reduce using rule 113 (function_declaration -> SUB ID LBLOCK declaration_list RBLOCK .)
    FOREACH         reduce using rule 113 (function_declaration -> SUB ID LBLOCK declaration_list RBLOCK .)
    WHILE           reduce using rule 113 (function_declaration -> SUB ID LBLOCK declaration_list RBLOCK .)
    ENTERO          reduce using rule 113 (function_declaration -> SUB ID LBLOCK declaration_list RBLOCK .)
    LPAREN          reduce using rule 113 (function_declaration -> SUB ID LBLOCK declaration_list RBLOCK .)
    $end            reduce using rule 113 (function_declaration -> SUB ID LBLOCK declaration_list RBLOCK .)
    RBLOCK          reduce using rule 113 (function_declaration -> SUB ID LBLOCK declaration_list RBLOCK .)


state 157

    (71) ciclos -> FOR LPAREN sent_for SEMICOLON cond . SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK
    (92) cond -> cond . log cond
    (79) log -> . LESS
    (80) log -> . GREATER
    (81) log -> . ISEQUAL
    (82) log -> . LESSEQUAL
    (83) log -> . GREATEREQUAL
    (84) log -> . DEQUAL
    (85) log -> . AND
    (86) log -> . ANDS
    (87) log -> . ORS
    (88) log -> . OR

    SEMICOLON       shift and go to state 178
    LESS            shift and go to state 111
    GREATER         shift and go to state 118
    ISEQUAL         shift and go to state 113
    LESSEQUAL       shift and go to state 115
    GREATEREQUAL    shift and go to state 108
    DEQUAL          shift and go to state 112
    AND             shift and go to state 107
    ANDS            shift and go to state 117
    ORS             shift and go to state 114
    OR              shift and go to state 116

    log                            shift and go to state 110

state 158

    (75) sent_for -> PESOS ID EQUAL . ENTERO
    (78) sent_for -> PESOS ID EQUAL . ENTERO COMMA sent_for

    ENTERO          shift and go to state 179


state 159

    (76) sent_for -> MY PESOS ID . EQUAL ENTERO
    (77) sent_for -> MY PESOS ID . EQUAL ENTERO COMMA sent_for

    EQUAL           shift and go to state 180


state 160

    (110) sentencia_if -> IF LPAREN cond RPAREN LBLOCK . declaration_list RBLOCK
    (111) sentencia_if -> IF LPAREN cond RPAREN LBLOCK . declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK
    (112) sentencia_if -> IF LPAREN cond RPAREN LBLOCK . declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
    (2) declaration_list -> . declaration declaration_list
    (3) declaration_list -> . declaration
    (4) declaration -> . header_declaration
    (5) declaration -> . print
    (6) declaration -> . var_declaration
    (7) declaration -> . sentencia_if
    (8) declaration -> . function_declaration
    (9) declaration -> . call_function SEMICOLON
    (10) declaration -> . E SEMICOLON
    (11) declaration -> . ciclos
    (12) header_declaration -> . USE ID SEMICOLON
    (13) header_declaration -> . REQUIRE ID SEMICOLON
    (98) print -> . PRINT arg SEMICOLON
    (99) print -> . PRINT LPAREN arg RPAREN SEMICOLON
    (14) var_declaration -> . PESOS ID SEMICOLON
    (15) var_declaration -> . MY PESOS ID SEMICOLON
    (16) var_declaration -> . PESOS ID EQUAL E SEMICOLON
    (17) var_declaration -> . PESOS ID EQUAL call_function SEMICOLON
    (18) var_declaration -> . PESOS ID incdec SEMICOLON
    (19) var_declaration -> . MY PESOS ID EQUAL typevar SEMICOLON
    (20) var_declaration -> . PESOS ID EQUAL typevar SEMICOLON
    (21) var_declaration -> . ARROBA ID SEMICOLON
    (22) var_declaration -> . ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON
    (23) var_declaration -> . ARROBA ID EQUAL ARROBA ID SEMICOLON
    (24) var_declaration -> . PORCENTAJE ID SEMICOLON
    (25) var_declaration -> . PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON
    (26) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON
    (27) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON
    (28) var_declaration -> . PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON
    (110) sentencia_if -> . IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
    (111) sentencia_if -> . IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK
    (112) sentencia_if -> . IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
    (113) function_declaration -> . SUB ID LBLOCK declaration_list RBLOCK
    (114) call_function -> . ANDBW ID
    (115) call_function -> . ANDBW ID LPAREN arg RPAREN
    (60) E -> . E PLUS T
    (61) E -> . E MINUS T
    (62) E -> . T
    (71) ciclos -> . FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK
    (72) ciclos -> . FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK
    (73) ciclos -> . WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
    (63) T -> . T TIMES F
    (64) T -> . T DIVIDE F
    (65) T -> . F
    (66) F -> . PESOS ID
    (67) F -> . PESOS ID LBRACKET ENTERO RBRACKET
    (68) F -> . ENTERO
    (69) F -> . PESOS ID LBLOCK typevar RBLOCK
    (70) F -> . LPAREN E RPAREN

    USE             shift and go to state 1
    REQUIRE         shift and go to state 3
    PRINT           shift and go to state 8
    PESOS           shift and go to state 4
    MY              shift and go to state 26
    ARROBA          shift and go to state 28
    PORCENTAJE      shift and go to state 22
    IF              shift and go to state 21
    SUB             shift and go to state 9
    ANDBW           shift and go to state 6
    FOR             shift and go to state 16
    FOREACH         shift and go to state 24
    WHILE           shift and go to state 5
    ENTERO          shift and go to state 13
    LPAREN          shift and go to state 19

    header_declaration             shift and go to state 14
    E                              shift and go to state 15
    function_declaration           shift and go to state 23
    call_function                  shift and go to state 2
    F                              shift and go to state 17
    T                              shift and go to state 18
    declaration_list               shift and go to state 181
    var_declaration                shift and go to state 10
    ciclos                         shift and go to state 7
    declaration                    shift and go to state 20
    print                          shift and go to state 12
    sentencia_if                   shift and go to state 27

state 161

    (28) var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID . SEMICOLON

    SEMICOLON       shift and go to state 182


state 162

    (41) lista1 -> typevar . EQUALGREATER typevar COMMA lista1
    (42) lista1 -> typevar . EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (43) lista1 -> typevar . EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (44) lista1 -> typevar . EQUALGREATER typevar
    (45) lista1 -> typevar . EQUALGREATER LPAREN lista RPAREN
    (46) lista1 -> typevar . EQUALGREATER LBRACKET lista RBRACKET
    (29) lista2 -> typevar . COMMA typevar COMMA lista2
    (30) lista2 -> typevar . COMMA LPAREN lista RPAREN COMMA lista2
    (31) lista2 -> typevar . COMMA LBRACKET lista RBRACKET COMMA lista2
    (32) lista2 -> typevar . COMMA typevar
    (33) lista2 -> typevar . COMMA LPAREN lista RPAREN
    (34) lista2 -> typevar . COMMA LBRACKET lista RBRACKET

    EQUALGREATER    shift and go to state 183
    COMMA           shift and go to state 184


state 163

    (26) var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 . RPAREN SEMICOLON

    RPAREN          shift and go to state 185


state 164

    (47) lista1 -> ID . EQUALGREATER typevar COMMA lista1
    (48) lista1 -> ID . EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (49) lista1 -> ID . EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (50) lista1 -> ID . EQUALGREATER typevar
    (51) lista1 -> ID . EQUALGREATER LPAREN lista RPAREN
    (52) lista1 -> ID . EQUALGREATER LBRACKET lista RBRACKET
    (35) lista2 -> ID . COMMA typevar COMMA lista2
    (36) lista2 -> ID . COMMA LPAREN lista RPAREN COMMA lista2
    (37) lista2 -> ID . COMMA LBRACKET lista RBRACKET COMMA lista2
    (38) lista2 -> ID . COMMA typevar
    (39) lista2 -> ID . COMMA LPAREN lista RPAREN
    (40) lista2 -> ID . COMMA LBRACKET lista RBRACKET

    EQUALGREATER    shift and go to state 186
    COMMA           shift and go to state 187


state 165

    (27) var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 . RPAREN SEMICOLON

    RPAREN          shift and go to state 188


state 166

    (41) lista1 -> typevar . EQUALGREATER typevar COMMA lista1
    (42) lista1 -> typevar . EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (43) lista1 -> typevar . EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (44) lista1 -> typevar . EQUALGREATER typevar
    (45) lista1 -> typevar . EQUALGREATER LPAREN lista RPAREN
    (46) lista1 -> typevar . EQUALGREATER LBRACKET lista RBRACKET

    EQUALGREATER    shift and go to state 183


state 167

    (25) var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 . RBLOCK SEMICOLON

    RBLOCK          shift and go to state 189


state 168

    (47) lista1 -> ID . EQUALGREATER typevar COMMA lista1
    (48) lista1 -> ID . EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (49) lista1 -> ID . EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (50) lista1 -> ID . EQUALGREATER typevar
    (51) lista1 -> ID . EQUALGREATER LPAREN lista RPAREN
    (52) lista1 -> ID . EQUALGREATER LBRACKET lista RBRACKET

    EQUALGREATER    shift and go to state 186


state 169

    (72) ciclos -> FOREACH PESOS ID LPAREN ARROBA . ID RPAREN LBLOCK declaration_list RBLOCK

    ID              shift and go to state 190


state 170

    (19) var_declaration -> MY PESOS ID EQUAL typevar . SEMICOLON

    SEMICOLON       shift and go to state 191


state 171

    (23) var_declaration -> ARROBA ID EQUAL ARROBA ID . SEMICOLON

    SEMICOLON       shift and go to state 192


state 172

    (53) lista -> typevar . COMMA lista
    (54) lista -> typevar .

    COMMA           shift and go to state 193
    RPAREN          reduce using rule 54 (lista -> typevar .)
    RBRACKET        reduce using rule 54 (lista -> typevar .)


state 173

    (22) var_declaration -> ARROBA ID EQUAL LPAREN lista . RPAREN SEMICOLON

    RPAREN          shift and go to state 194


state 174

    (73) ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list . RBLOCK

    RBLOCK          shift and go to state 195


state 175

    (101) var_declaration_gen -> PESOS ID LBRACKET ENTERO RBRACKET .

    SEMICOLON       reduce using rule 101 (var_declaration_gen -> PESOS ID LBRACKET ENTERO RBRACKET .)
    LESS            reduce using rule 101 (var_declaration_gen -> PESOS ID LBRACKET ENTERO RBRACKET .)
    GREATER         reduce using rule 101 (var_declaration_gen -> PESOS ID LBRACKET ENTERO RBRACKET .)
    ISEQUAL         reduce using rule 101 (var_declaration_gen -> PESOS ID LBRACKET ENTERO RBRACKET .)
    LESSEQUAL       reduce using rule 101 (var_declaration_gen -> PESOS ID LBRACKET ENTERO RBRACKET .)
    GREATEREQUAL    reduce using rule 101 (var_declaration_gen -> PESOS ID LBRACKET ENTERO RBRACKET .)
    DEQUAL          reduce using rule 101 (var_declaration_gen -> PESOS ID LBRACKET ENTERO RBRACKET .)
    AND             reduce using rule 101 (var_declaration_gen -> PESOS ID LBRACKET ENTERO RBRACKET .)
    ANDS            reduce using rule 101 (var_declaration_gen -> PESOS ID LBRACKET ENTERO RBRACKET .)
    ORS             reduce using rule 101 (var_declaration_gen -> PESOS ID LBRACKET ENTERO RBRACKET .)
    OR              reduce using rule 101 (var_declaration_gen -> PESOS ID LBRACKET ENTERO RBRACKET .)
    RPAREN          reduce using rule 101 (var_declaration_gen -> PESOS ID LBRACKET ENTERO RBRACKET .)
    COMMA           reduce using rule 101 (var_declaration_gen -> PESOS ID LBRACKET ENTERO RBRACKET .)


state 176

    (102) var_declaration_gen -> PESOS ID LBLOCK typevar RBLOCK .

    SEMICOLON       reduce using rule 102 (var_declaration_gen -> PESOS ID LBLOCK typevar RBLOCK .)
    LESS            reduce using rule 102 (var_declaration_gen -> PESOS ID LBLOCK typevar RBLOCK .)
    GREATER         reduce using rule 102 (var_declaration_gen -> PESOS ID LBLOCK typevar RBLOCK .)
    ISEQUAL         reduce using rule 102 (var_declaration_gen -> PESOS ID LBLOCK typevar RBLOCK .)
    LESSEQUAL       reduce using rule 102 (var_declaration_gen -> PESOS ID LBLOCK typevar RBLOCK .)
    GREATEREQUAL    reduce using rule 102 (var_declaration_gen -> PESOS ID LBLOCK typevar RBLOCK .)
    DEQUAL          reduce using rule 102 (var_declaration_gen -> PESOS ID LBLOCK typevar RBLOCK .)
    AND             reduce using rule 102 (var_declaration_gen -> PESOS ID LBLOCK typevar RBLOCK .)
    ANDS            reduce using rule 102 (var_declaration_gen -> PESOS ID LBLOCK typevar RBLOCK .)
    ORS             reduce using rule 102 (var_declaration_gen -> PESOS ID LBLOCK typevar RBLOCK .)
    OR              reduce using rule 102 (var_declaration_gen -> PESOS ID LBLOCK typevar RBLOCK .)
    RPAREN          reduce using rule 102 (var_declaration_gen -> PESOS ID LBLOCK typevar RBLOCK .)
    COMMA           reduce using rule 102 (var_declaration_gen -> PESOS ID LBLOCK typevar RBLOCK .)


state 177

    (103) var_declaration_gen -> PESOS ID LBLOCK ID RBLOCK .

    SEMICOLON       reduce using rule 103 (var_declaration_gen -> PESOS ID LBLOCK ID RBLOCK .)
    LESS            reduce using rule 103 (var_declaration_gen -> PESOS ID LBLOCK ID RBLOCK .)
    GREATER         reduce using rule 103 (var_declaration_gen -> PESOS ID LBLOCK ID RBLOCK .)
    ISEQUAL         reduce using rule 103 (var_declaration_gen -> PESOS ID LBLOCK ID RBLOCK .)
    LESSEQUAL       reduce using rule 103 (var_declaration_gen -> PESOS ID LBLOCK ID RBLOCK .)
    GREATEREQUAL    reduce using rule 103 (var_declaration_gen -> PESOS ID LBLOCK ID RBLOCK .)
    DEQUAL          reduce using rule 103 (var_declaration_gen -> PESOS ID LBLOCK ID RBLOCK .)
    AND             reduce using rule 103 (var_declaration_gen -> PESOS ID LBLOCK ID RBLOCK .)
    ANDS            reduce using rule 103 (var_declaration_gen -> PESOS ID LBLOCK ID RBLOCK .)
    ORS             reduce using rule 103 (var_declaration_gen -> PESOS ID LBLOCK ID RBLOCK .)
    OR              reduce using rule 103 (var_declaration_gen -> PESOS ID LBLOCK ID RBLOCK .)
    RPAREN          reduce using rule 103 (var_declaration_gen -> PESOS ID LBLOCK ID RBLOCK .)
    COMMA           reduce using rule 103 (var_declaration_gen -> PESOS ID LBLOCK ID RBLOCK .)


state 178

    (71) ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON . PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK

    PESOS           shift and go to state 196


state 179

    (75) sent_for -> PESOS ID EQUAL ENTERO .
    (78) sent_for -> PESOS ID EQUAL ENTERO . COMMA sent_for

    SEMICOLON       reduce using rule 75 (sent_for -> PESOS ID EQUAL ENTERO .)
    COMMA           shift and go to state 197


state 180

    (76) sent_for -> MY PESOS ID EQUAL . ENTERO
    (77) sent_for -> MY PESOS ID EQUAL . ENTERO COMMA sent_for

    ENTERO          shift and go to state 198


state 181

    (110) sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list . RBLOCK
    (111) sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list . RBLOCK ELSE LBLOCK declaration_list RBLOCK
    (112) sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list . RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK

    RBLOCK          shift and go to state 199


state 182

    (28) var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .

    USE             reduce using rule 28 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    REQUIRE         reduce using rule 28 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    PRINT           reduce using rule 28 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    PESOS           reduce using rule 28 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    MY              reduce using rule 28 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    ARROBA          reduce using rule 28 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    PORCENTAJE      reduce using rule 28 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    IF              reduce using rule 28 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    SUB             reduce using rule 28 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    ANDBW           reduce using rule 28 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    FOR             reduce using rule 28 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    FOREACH         reduce using rule 28 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    WHILE           reduce using rule 28 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    ENTERO          reduce using rule 28 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    LPAREN          reduce using rule 28 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    $end            reduce using rule 28 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)
    RBLOCK          reduce using rule 28 (var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON .)


state 183

    (41) lista1 -> typevar EQUALGREATER . typevar COMMA lista1
    (42) lista1 -> typevar EQUALGREATER . LPAREN lista RPAREN COMMA lista1
    (43) lista1 -> typevar EQUALGREATER . LBRACKET lista RBRACKET COMMA lista1
    (44) lista1 -> typevar EQUALGREATER . typevar
    (45) lista1 -> typevar EQUALGREATER . LPAREN lista RPAREN
    (46) lista1 -> typevar EQUALGREATER . LBRACKET lista RBRACKET
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    LPAREN          shift and go to state 202
    LBRACKET        shift and go to state 201
    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    typevar                        shift and go to state 200

state 184

    (29) lista2 -> typevar COMMA . typevar COMMA lista2
    (30) lista2 -> typevar COMMA . LPAREN lista RPAREN COMMA lista2
    (31) lista2 -> typevar COMMA . LBRACKET lista RBRACKET COMMA lista2
    (32) lista2 -> typevar COMMA . typevar
    (33) lista2 -> typevar COMMA . LPAREN lista RPAREN
    (34) lista2 -> typevar COMMA . LBRACKET lista RBRACKET
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    LPAREN          shift and go to state 204
    LBRACKET        shift and go to state 203
    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    typevar                        shift and go to state 205

state 185

    (26) var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 206


state 186

    (47) lista1 -> ID EQUALGREATER . typevar COMMA lista1
    (48) lista1 -> ID EQUALGREATER . LPAREN lista RPAREN COMMA lista1
    (49) lista1 -> ID EQUALGREATER . LBRACKET lista RBRACKET COMMA lista1
    (50) lista1 -> ID EQUALGREATER . typevar
    (51) lista1 -> ID EQUALGREATER . LPAREN lista RPAREN
    (52) lista1 -> ID EQUALGREATER . LBRACKET lista RBRACKET
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    LPAREN          shift and go to state 209
    LBRACKET        shift and go to state 208
    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    typevar                        shift and go to state 207

state 187

    (35) lista2 -> ID COMMA . typevar COMMA lista2
    (36) lista2 -> ID COMMA . LPAREN lista RPAREN COMMA lista2
    (37) lista2 -> ID COMMA . LBRACKET lista RBRACKET COMMA lista2
    (38) lista2 -> ID COMMA . typevar
    (39) lista2 -> ID COMMA . LPAREN lista RPAREN
    (40) lista2 -> ID COMMA . LBRACKET lista RBRACKET
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    LPAREN          shift and go to state 212
    LBRACKET        shift and go to state 211
    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    typevar                        shift and go to state 210

state 188

    (27) var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 213


state 189

    (25) var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK . SEMICOLON

    SEMICOLON       shift and go to state 214


state 190

    (72) ciclos -> FOREACH PESOS ID LPAREN ARROBA ID . RPAREN LBLOCK declaration_list RBLOCK

    RPAREN          shift and go to state 215


state 191

    (19) var_declaration -> MY PESOS ID EQUAL typevar SEMICOLON .

    USE             reduce using rule 19 (var_declaration -> MY PESOS ID EQUAL typevar SEMICOLON .)
    REQUIRE         reduce using rule 19 (var_declaration -> MY PESOS ID EQUAL typevar SEMICOLON .)
    PRINT           reduce using rule 19 (var_declaration -> MY PESOS ID EQUAL typevar SEMICOLON .)
    PESOS           reduce using rule 19 (var_declaration -> MY PESOS ID EQUAL typevar SEMICOLON .)
    MY              reduce using rule 19 (var_declaration -> MY PESOS ID EQUAL typevar SEMICOLON .)
    ARROBA          reduce using rule 19 (var_declaration -> MY PESOS ID EQUAL typevar SEMICOLON .)
    PORCENTAJE      reduce using rule 19 (var_declaration -> MY PESOS ID EQUAL typevar SEMICOLON .)
    IF              reduce using rule 19 (var_declaration -> MY PESOS ID EQUAL typevar SEMICOLON .)
    SUB             reduce using rule 19 (var_declaration -> MY PESOS ID EQUAL typevar SEMICOLON .)
    ANDBW           reduce using rule 19 (var_declaration -> MY PESOS ID EQUAL typevar SEMICOLON .)
    FOR             reduce using rule 19 (var_declaration -> MY PESOS ID EQUAL typevar SEMICOLON .)
    FOREACH         reduce using rule 19 (var_declaration -> MY PESOS ID EQUAL typevar SEMICOLON .)
    WHILE           reduce using rule 19 (var_declaration -> MY PESOS ID EQUAL typevar SEMICOLON .)
    ENTERO          reduce using rule 19 (var_declaration -> MY PESOS ID EQUAL typevar SEMICOLON .)
    LPAREN          reduce using rule 19 (var_declaration -> MY PESOS ID EQUAL typevar SEMICOLON .)
    $end            reduce using rule 19 (var_declaration -> MY PESOS ID EQUAL typevar SEMICOLON .)
    RBLOCK          reduce using rule 19 (var_declaration -> MY PESOS ID EQUAL typevar SEMICOLON .)


state 192

    (23) var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .

    USE             reduce using rule 23 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    REQUIRE         reduce using rule 23 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    PRINT           reduce using rule 23 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    PESOS           reduce using rule 23 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    MY              reduce using rule 23 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    ARROBA          reduce using rule 23 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    PORCENTAJE      reduce using rule 23 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    IF              reduce using rule 23 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    SUB             reduce using rule 23 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    ANDBW           reduce using rule 23 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    FOR             reduce using rule 23 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    FOREACH         reduce using rule 23 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    WHILE           reduce using rule 23 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    ENTERO          reduce using rule 23 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    LPAREN          reduce using rule 23 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    $end            reduce using rule 23 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)
    RBLOCK          reduce using rule 23 (var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON .)


state 193

    (53) lista -> typevar COMMA . lista
    (53) lista -> . typevar COMMA lista
    (54) lista -> . typevar
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    lista                          shift and go to state 216
    typevar                        shift and go to state 172

state 194

    (22) var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 217


state 195

    (73) ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .

    USE             reduce using rule 73 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    REQUIRE         reduce using rule 73 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    PRINT           reduce using rule 73 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    PESOS           reduce using rule 73 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    MY              reduce using rule 73 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    ARROBA          reduce using rule 73 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    PORCENTAJE      reduce using rule 73 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    IF              reduce using rule 73 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    SUB             reduce using rule 73 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    ANDBW           reduce using rule 73 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    FOR             reduce using rule 73 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    FOREACH         reduce using rule 73 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    WHILE           reduce using rule 73 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    ENTERO          reduce using rule 73 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    LPAREN          reduce using rule 73 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    $end            reduce using rule 73 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    RBLOCK          reduce using rule 73 (ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)


state 196

    (71) ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS . ID incdec RPAREN LBLOCK declaration_list RBLOCK

    ID              shift and go to state 218


state 197

    (78) sent_for -> PESOS ID EQUAL ENTERO COMMA . sent_for
    (74) sent_for -> . PESOS ID
    (75) sent_for -> . PESOS ID EQUAL ENTERO
    (76) sent_for -> . MY PESOS ID EQUAL ENTERO
    (77) sent_for -> . MY PESOS ID EQUAL ENTERO COMMA sent_for
    (78) sent_for -> . PESOS ID EQUAL ENTERO COMMA sent_for

    PESOS           shift and go to state 87
    MY              shift and go to state 88

    sent_for                       shift and go to state 219

state 198

    (76) sent_for -> MY PESOS ID EQUAL ENTERO .
    (77) sent_for -> MY PESOS ID EQUAL ENTERO . COMMA sent_for

    SEMICOLON       reduce using rule 76 (sent_for -> MY PESOS ID EQUAL ENTERO .)
    COMMA           shift and go to state 220


state 199

    (110) sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .
    (111) sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK . ELSE LBLOCK declaration_list RBLOCK
    (112) sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK . ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK

    USE             reduce using rule 110 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    REQUIRE         reduce using rule 110 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    PRINT           reduce using rule 110 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    PESOS           reduce using rule 110 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    MY              reduce using rule 110 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    ARROBA          reduce using rule 110 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    PORCENTAJE      reduce using rule 110 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    IF              reduce using rule 110 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    SUB             reduce using rule 110 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    ANDBW           reduce using rule 110 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    FOR             reduce using rule 110 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    FOREACH         reduce using rule 110 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    WHILE           reduce using rule 110 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    ENTERO          reduce using rule 110 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    LPAREN          reduce using rule 110 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    $end            reduce using rule 110 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    RBLOCK          reduce using rule 110 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    ELSE            shift and go to state 222
    ELSIF           shift and go to state 221


state 200

    (41) lista1 -> typevar EQUALGREATER typevar . COMMA lista1
    (44) lista1 -> typevar EQUALGREATER typevar .

    COMMA           shift and go to state 223
    RPAREN          reduce using rule 44 (lista1 -> typevar EQUALGREATER typevar .)
    RBLOCK          reduce using rule 44 (lista1 -> typevar EQUALGREATER typevar .)


state 201

    (43) lista1 -> typevar EQUALGREATER LBRACKET . lista RBRACKET COMMA lista1
    (46) lista1 -> typevar EQUALGREATER LBRACKET . lista RBRACKET
    (53) lista -> . typevar COMMA lista
    (54) lista -> . typevar
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    lista                          shift and go to state 224
    typevar                        shift and go to state 172

state 202

    (42) lista1 -> typevar EQUALGREATER LPAREN . lista RPAREN COMMA lista1
    (45) lista1 -> typevar EQUALGREATER LPAREN . lista RPAREN
    (53) lista -> . typevar COMMA lista
    (54) lista -> . typevar
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    lista                          shift and go to state 225
    typevar                        shift and go to state 172

state 203

    (31) lista2 -> typevar COMMA LBRACKET . lista RBRACKET COMMA lista2
    (34) lista2 -> typevar COMMA LBRACKET . lista RBRACKET
    (53) lista -> . typevar COMMA lista
    (54) lista -> . typevar
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    lista                          shift and go to state 226
    typevar                        shift and go to state 172

state 204

    (30) lista2 -> typevar COMMA LPAREN . lista RPAREN COMMA lista2
    (33) lista2 -> typevar COMMA LPAREN . lista RPAREN
    (53) lista -> . typevar COMMA lista
    (54) lista -> . typevar
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    lista                          shift and go to state 227
    typevar                        shift and go to state 172

state 205

    (29) lista2 -> typevar COMMA typevar . COMMA lista2
    (32) lista2 -> typevar COMMA typevar .

    COMMA           shift and go to state 228
    RPAREN          reduce using rule 32 (lista2 -> typevar COMMA typevar .)


state 206

    (26) var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON .

    USE             reduce using rule 26 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON .)
    REQUIRE         reduce using rule 26 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON .)
    PRINT           reduce using rule 26 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON .)
    PESOS           reduce using rule 26 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON .)
    MY              reduce using rule 26 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON .)
    ARROBA          reduce using rule 26 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON .)
    PORCENTAJE      reduce using rule 26 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON .)
    IF              reduce using rule 26 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON .)
    SUB             reduce using rule 26 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON .)
    ANDBW           reduce using rule 26 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON .)
    FOR             reduce using rule 26 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON .)
    FOREACH         reduce using rule 26 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON .)
    WHILE           reduce using rule 26 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON .)
    ENTERO          reduce using rule 26 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON .)
    LPAREN          reduce using rule 26 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON .)
    $end            reduce using rule 26 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON .)
    RBLOCK          reduce using rule 26 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON .)


state 207

    (47) lista1 -> ID EQUALGREATER typevar . COMMA lista1
    (50) lista1 -> ID EQUALGREATER typevar .

    COMMA           shift and go to state 229
    RPAREN          reduce using rule 50 (lista1 -> ID EQUALGREATER typevar .)
    RBLOCK          reduce using rule 50 (lista1 -> ID EQUALGREATER typevar .)


state 208

    (49) lista1 -> ID EQUALGREATER LBRACKET . lista RBRACKET COMMA lista1
    (52) lista1 -> ID EQUALGREATER LBRACKET . lista RBRACKET
    (53) lista -> . typevar COMMA lista
    (54) lista -> . typevar
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    typevar                        shift and go to state 172
    lista                          shift and go to state 230

state 209

    (48) lista1 -> ID EQUALGREATER LPAREN . lista RPAREN COMMA lista1
    (51) lista1 -> ID EQUALGREATER LPAREN . lista RPAREN
    (53) lista -> . typevar COMMA lista
    (54) lista -> . typevar
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    typevar                        shift and go to state 172
    lista                          shift and go to state 231

state 210

    (35) lista2 -> ID COMMA typevar . COMMA lista2
    (38) lista2 -> ID COMMA typevar .

    COMMA           shift and go to state 232
    RPAREN          reduce using rule 38 (lista2 -> ID COMMA typevar .)


state 211

    (37) lista2 -> ID COMMA LBRACKET . lista RBRACKET COMMA lista2
    (40) lista2 -> ID COMMA LBRACKET . lista RBRACKET
    (53) lista -> . typevar COMMA lista
    (54) lista -> . typevar
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    typevar                        shift and go to state 172
    lista                          shift and go to state 233

state 212

    (36) lista2 -> ID COMMA LPAREN . lista RPAREN COMMA lista2
    (39) lista2 -> ID COMMA LPAREN . lista RPAREN
    (53) lista -> . typevar COMMA lista
    (54) lista -> . typevar
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    typevar                        shift and go to state 172
    lista                          shift and go to state 234

state 213

    (27) var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .

    USE             reduce using rule 27 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    REQUIRE         reduce using rule 27 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    PRINT           reduce using rule 27 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    PESOS           reduce using rule 27 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    MY              reduce using rule 27 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    ARROBA          reduce using rule 27 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    PORCENTAJE      reduce using rule 27 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    IF              reduce using rule 27 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    SUB             reduce using rule 27 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    ANDBW           reduce using rule 27 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    FOR             reduce using rule 27 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    FOREACH         reduce using rule 27 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    WHILE           reduce using rule 27 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    ENTERO          reduce using rule 27 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    LPAREN          reduce using rule 27 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    $end            reduce using rule 27 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)
    RBLOCK          reduce using rule 27 (var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON .)


state 214

    (25) var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .

    USE             reduce using rule 25 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    REQUIRE         reduce using rule 25 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    PRINT           reduce using rule 25 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    PESOS           reduce using rule 25 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    MY              reduce using rule 25 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    ARROBA          reduce using rule 25 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    PORCENTAJE      reduce using rule 25 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    IF              reduce using rule 25 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    SUB             reduce using rule 25 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    ANDBW           reduce using rule 25 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    FOR             reduce using rule 25 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    FOREACH         reduce using rule 25 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    WHILE           reduce using rule 25 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    ENTERO          reduce using rule 25 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    LPAREN          reduce using rule 25 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    $end            reduce using rule 25 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)
    RBLOCK          reduce using rule 25 (var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON .)


state 215

    (72) ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN . LBLOCK declaration_list RBLOCK

    LBLOCK          shift and go to state 235


state 216

    (53) lista -> typevar COMMA lista .

    RPAREN          reduce using rule 53 (lista -> typevar COMMA lista .)
    RBRACKET        reduce using rule 53 (lista -> typevar COMMA lista .)


state 217

    (22) var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .

    USE             reduce using rule 22 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    REQUIRE         reduce using rule 22 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    PRINT           reduce using rule 22 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    PESOS           reduce using rule 22 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    MY              reduce using rule 22 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    ARROBA          reduce using rule 22 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    PORCENTAJE      reduce using rule 22 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    IF              reduce using rule 22 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    SUB             reduce using rule 22 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    ANDBW           reduce using rule 22 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    FOR             reduce using rule 22 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    FOREACH         reduce using rule 22 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    WHILE           reduce using rule 22 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    ENTERO          reduce using rule 22 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    LPAREN          reduce using rule 22 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    $end            reduce using rule 22 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)
    RBLOCK          reduce using rule 22 (var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON .)


state 218

    (71) ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID . incdec RPAREN LBLOCK declaration_list RBLOCK
    (96) incdec -> . PLUSPLUS
    (97) incdec -> . MINUSMINUS

    PLUSPLUS        shift and go to state 65
    MINUSMINUS      shift and go to state 63

    incdec                         shift and go to state 236

state 219

    (78) sent_for -> PESOS ID EQUAL ENTERO COMMA sent_for .

    SEMICOLON       reduce using rule 78 (sent_for -> PESOS ID EQUAL ENTERO COMMA sent_for .)


state 220

    (77) sent_for -> MY PESOS ID EQUAL ENTERO COMMA . sent_for
    (74) sent_for -> . PESOS ID
    (75) sent_for -> . PESOS ID EQUAL ENTERO
    (76) sent_for -> . MY PESOS ID EQUAL ENTERO
    (77) sent_for -> . MY PESOS ID EQUAL ENTERO COMMA sent_for
    (78) sent_for -> . PESOS ID EQUAL ENTERO COMMA sent_for

    PESOS           shift and go to state 87
    MY              shift and go to state 88

    sent_for                       shift and go to state 237

state 221

    (112) sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF . LPAREN cond RPAREN LBLOCK declaration_list RBLOCK

    LPAREN          shift and go to state 238


state 222

    (111) sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE . LBLOCK declaration_list RBLOCK

    LBLOCK          shift and go to state 239


state 223

    (41) lista1 -> typevar EQUALGREATER typevar COMMA . lista1
    (41) lista1 -> . typevar EQUALGREATER typevar COMMA lista1
    (42) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (43) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (44) lista1 -> . typevar EQUALGREATER typevar
    (45) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN
    (46) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET
    (47) lista1 -> . ID EQUALGREATER typevar COMMA lista1
    (48) lista1 -> . ID EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (49) lista1 -> . ID EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (50) lista1 -> . ID EQUALGREATER typevar
    (51) lista1 -> . ID EQUALGREATER LPAREN lista RPAREN
    (52) lista1 -> . ID EQUALGREATER LBRACKET lista RBRACKET
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    ID              shift and go to state 168
    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    lista1                         shift and go to state 240
    typevar                        shift and go to state 166

state 224

    (43) lista1 -> typevar EQUALGREATER LBRACKET lista . RBRACKET COMMA lista1
    (46) lista1 -> typevar EQUALGREATER LBRACKET lista . RBRACKET

    RBRACKET        shift and go to state 241


state 225

    (42) lista1 -> typevar EQUALGREATER LPAREN lista . RPAREN COMMA lista1
    (45) lista1 -> typevar EQUALGREATER LPAREN lista . RPAREN

    RPAREN          shift and go to state 242


state 226

    (31) lista2 -> typevar COMMA LBRACKET lista . RBRACKET COMMA lista2
    (34) lista2 -> typevar COMMA LBRACKET lista . RBRACKET

    RBRACKET        shift and go to state 243


state 227

    (30) lista2 -> typevar COMMA LPAREN lista . RPAREN COMMA lista2
    (33) lista2 -> typevar COMMA LPAREN lista . RPAREN

    RPAREN          shift and go to state 244


state 228

    (29) lista2 -> typevar COMMA typevar COMMA . lista2
    (29) lista2 -> . typevar COMMA typevar COMMA lista2
    (30) lista2 -> . typevar COMMA LPAREN lista RPAREN COMMA lista2
    (31) lista2 -> . typevar COMMA LBRACKET lista RBRACKET COMMA lista2
    (32) lista2 -> . typevar COMMA typevar
    (33) lista2 -> . typevar COMMA LPAREN lista RPAREN
    (34) lista2 -> . typevar COMMA LBRACKET lista RBRACKET
    (35) lista2 -> . ID COMMA typevar COMMA lista2
    (36) lista2 -> . ID COMMA LPAREN lista RPAREN COMMA lista2
    (37) lista2 -> . ID COMMA LBRACKET lista RBRACKET COMMA lista2
    (38) lista2 -> . ID COMMA typevar
    (39) lista2 -> . ID COMMA LPAREN lista RPAREN
    (40) lista2 -> . ID COMMA LBRACKET lista RBRACKET
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    ID              shift and go to state 246
    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    typevar                        shift and go to state 245
    lista2                         shift and go to state 247

state 229

    (47) lista1 -> ID EQUALGREATER typevar COMMA . lista1
    (41) lista1 -> . typevar EQUALGREATER typevar COMMA lista1
    (42) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (43) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (44) lista1 -> . typevar EQUALGREATER typevar
    (45) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN
    (46) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET
    (47) lista1 -> . ID EQUALGREATER typevar COMMA lista1
    (48) lista1 -> . ID EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (49) lista1 -> . ID EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (50) lista1 -> . ID EQUALGREATER typevar
    (51) lista1 -> . ID EQUALGREATER LPAREN lista RPAREN
    (52) lista1 -> . ID EQUALGREATER LBRACKET lista RBRACKET
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    ID              shift and go to state 168
    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    lista1                         shift and go to state 248
    typevar                        shift and go to state 166

state 230

    (49) lista1 -> ID EQUALGREATER LBRACKET lista . RBRACKET COMMA lista1
    (52) lista1 -> ID EQUALGREATER LBRACKET lista . RBRACKET

    RBRACKET        shift and go to state 249


state 231

    (48) lista1 -> ID EQUALGREATER LPAREN lista . RPAREN COMMA lista1
    (51) lista1 -> ID EQUALGREATER LPAREN lista . RPAREN

    RPAREN          shift and go to state 250


state 232

    (35) lista2 -> ID COMMA typevar COMMA . lista2
    (29) lista2 -> . typevar COMMA typevar COMMA lista2
    (30) lista2 -> . typevar COMMA LPAREN lista RPAREN COMMA lista2
    (31) lista2 -> . typevar COMMA LBRACKET lista RBRACKET COMMA lista2
    (32) lista2 -> . typevar COMMA typevar
    (33) lista2 -> . typevar COMMA LPAREN lista RPAREN
    (34) lista2 -> . typevar COMMA LBRACKET lista RBRACKET
    (35) lista2 -> . ID COMMA typevar COMMA lista2
    (36) lista2 -> . ID COMMA LPAREN lista RPAREN COMMA lista2
    (37) lista2 -> . ID COMMA LBRACKET lista RBRACKET COMMA lista2
    (38) lista2 -> . ID COMMA typevar
    (39) lista2 -> . ID COMMA LPAREN lista RPAREN
    (40) lista2 -> . ID COMMA LBRACKET lista RBRACKET
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    ID              shift and go to state 246
    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    typevar                        shift and go to state 245
    lista2                         shift and go to state 251

state 233

    (37) lista2 -> ID COMMA LBRACKET lista . RBRACKET COMMA lista2
    (40) lista2 -> ID COMMA LBRACKET lista . RBRACKET

    RBRACKET        shift and go to state 252


state 234

    (36) lista2 -> ID COMMA LPAREN lista . RPAREN COMMA lista2
    (39) lista2 -> ID COMMA LPAREN lista . RPAREN

    RPAREN          shift and go to state 253


state 235

    (72) ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK . declaration_list RBLOCK
    (2) declaration_list -> . declaration declaration_list
    (3) declaration_list -> . declaration
    (4) declaration -> . header_declaration
    (5) declaration -> . print
    (6) declaration -> . var_declaration
    (7) declaration -> . sentencia_if
    (8) declaration -> . function_declaration
    (9) declaration -> . call_function SEMICOLON
    (10) declaration -> . E SEMICOLON
    (11) declaration -> . ciclos
    (12) header_declaration -> . USE ID SEMICOLON
    (13) header_declaration -> . REQUIRE ID SEMICOLON
    (98) print -> . PRINT arg SEMICOLON
    (99) print -> . PRINT LPAREN arg RPAREN SEMICOLON
    (14) var_declaration -> . PESOS ID SEMICOLON
    (15) var_declaration -> . MY PESOS ID SEMICOLON
    (16) var_declaration -> . PESOS ID EQUAL E SEMICOLON
    (17) var_declaration -> . PESOS ID EQUAL call_function SEMICOLON
    (18) var_declaration -> . PESOS ID incdec SEMICOLON
    (19) var_declaration -> . MY PESOS ID EQUAL typevar SEMICOLON
    (20) var_declaration -> . PESOS ID EQUAL typevar SEMICOLON
    (21) var_declaration -> . ARROBA ID SEMICOLON
    (22) var_declaration -> . ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON
    (23) var_declaration -> . ARROBA ID EQUAL ARROBA ID SEMICOLON
    (24) var_declaration -> . PORCENTAJE ID SEMICOLON
    (25) var_declaration -> . PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON
    (26) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON
    (27) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON
    (28) var_declaration -> . PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON
    (110) sentencia_if -> . IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
    (111) sentencia_if -> . IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK
    (112) sentencia_if -> . IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
    (113) function_declaration -> . SUB ID LBLOCK declaration_list RBLOCK
    (114) call_function -> . ANDBW ID
    (115) call_function -> . ANDBW ID LPAREN arg RPAREN
    (60) E -> . E PLUS T
    (61) E -> . E MINUS T
    (62) E -> . T
    (71) ciclos -> . FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK
    (72) ciclos -> . FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK
    (73) ciclos -> . WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
    (63) T -> . T TIMES F
    (64) T -> . T DIVIDE F
    (65) T -> . F
    (66) F -> . PESOS ID
    (67) F -> . PESOS ID LBRACKET ENTERO RBRACKET
    (68) F -> . ENTERO
    (69) F -> . PESOS ID LBLOCK typevar RBLOCK
    (70) F -> . LPAREN E RPAREN

    USE             shift and go to state 1
    REQUIRE         shift and go to state 3
    PRINT           shift and go to state 8
    PESOS           shift and go to state 4
    MY              shift and go to state 26
    ARROBA          shift and go to state 28
    PORCENTAJE      shift and go to state 22
    IF              shift and go to state 21
    SUB             shift and go to state 9
    ANDBW           shift and go to state 6
    FOR             shift and go to state 16
    FOREACH         shift and go to state 24
    WHILE           shift and go to state 5
    ENTERO          shift and go to state 13
    LPAREN          shift and go to state 19

    header_declaration             shift and go to state 14
    E                              shift and go to state 15
    function_declaration           shift and go to state 23
    call_function                  shift and go to state 2
    F                              shift and go to state 17
    T                              shift and go to state 18
    declaration_list               shift and go to state 254
    var_declaration                shift and go to state 10
    ciclos                         shift and go to state 7
    declaration                    shift and go to state 20
    print                          shift and go to state 12
    sentencia_if                   shift and go to state 27

state 236

    (71) ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec . RPAREN LBLOCK declaration_list RBLOCK

    RPAREN          shift and go to state 255


state 237

    (77) sent_for -> MY PESOS ID EQUAL ENTERO COMMA sent_for .

    SEMICOLON       reduce using rule 77 (sent_for -> MY PESOS ID EQUAL ENTERO COMMA sent_for .)


state 238

    (112) sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN . cond RPAREN LBLOCK declaration_list RBLOCK
    (91) cond -> . type
    (92) cond -> . cond log cond
    (93) cond -> . NOT cond
    (94) cond -> . LPAREN type RPAREN
    (95) cond -> . LPAREN cond RPAREN
    (89) type -> . typevar
    (90) type -> . var_declaration_gen
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL
    (100) var_declaration_gen -> . PESOS ID
    (101) var_declaration_gen -> . PESOS ID LBRACKET ENTERO RBRACKET
    (102) var_declaration_gen -> . PESOS ID LBLOCK typevar RBLOCK
    (103) var_declaration_gen -> . PESOS ID LBLOCK ID RBLOCK

    NOT             shift and go to state 74
    LPAREN          shift and go to state 73
    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41
    PESOS           shift and go to state 37

    typevar                        shift and go to state 35
    var_declaration_gen            shift and go to state 70
    cond                           shift and go to state 256
    type                           shift and go to state 75

state 239

    (111) sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK . declaration_list RBLOCK
    (2) declaration_list -> . declaration declaration_list
    (3) declaration_list -> . declaration
    (4) declaration -> . header_declaration
    (5) declaration -> . print
    (6) declaration -> . var_declaration
    (7) declaration -> . sentencia_if
    (8) declaration -> . function_declaration
    (9) declaration -> . call_function SEMICOLON
    (10) declaration -> . E SEMICOLON
    (11) declaration -> . ciclos
    (12) header_declaration -> . USE ID SEMICOLON
    (13) header_declaration -> . REQUIRE ID SEMICOLON
    (98) print -> . PRINT arg SEMICOLON
    (99) print -> . PRINT LPAREN arg RPAREN SEMICOLON
    (14) var_declaration -> . PESOS ID SEMICOLON
    (15) var_declaration -> . MY PESOS ID SEMICOLON
    (16) var_declaration -> . PESOS ID EQUAL E SEMICOLON
    (17) var_declaration -> . PESOS ID EQUAL call_function SEMICOLON
    (18) var_declaration -> . PESOS ID incdec SEMICOLON
    (19) var_declaration -> . MY PESOS ID EQUAL typevar SEMICOLON
    (20) var_declaration -> . PESOS ID EQUAL typevar SEMICOLON
    (21) var_declaration -> . ARROBA ID SEMICOLON
    (22) var_declaration -> . ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON
    (23) var_declaration -> . ARROBA ID EQUAL ARROBA ID SEMICOLON
    (24) var_declaration -> . PORCENTAJE ID SEMICOLON
    (25) var_declaration -> . PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON
    (26) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON
    (27) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON
    (28) var_declaration -> . PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON
    (110) sentencia_if -> . IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
    (111) sentencia_if -> . IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK
    (112) sentencia_if -> . IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
    (113) function_declaration -> . SUB ID LBLOCK declaration_list RBLOCK
    (114) call_function -> . ANDBW ID
    (115) call_function -> . ANDBW ID LPAREN arg RPAREN
    (60) E -> . E PLUS T
    (61) E -> . E MINUS T
    (62) E -> . T
    (71) ciclos -> . FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK
    (72) ciclos -> . FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK
    (73) ciclos -> . WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
    (63) T -> . T TIMES F
    (64) T -> . T DIVIDE F
    (65) T -> . F
    (66) F -> . PESOS ID
    (67) F -> . PESOS ID LBRACKET ENTERO RBRACKET
    (68) F -> . ENTERO
    (69) F -> . PESOS ID LBLOCK typevar RBLOCK
    (70) F -> . LPAREN E RPAREN

    USE             shift and go to state 1
    REQUIRE         shift and go to state 3
    PRINT           shift and go to state 8
    PESOS           shift and go to state 4
    MY              shift and go to state 26
    ARROBA          shift and go to state 28
    PORCENTAJE      shift and go to state 22
    IF              shift and go to state 21
    SUB             shift and go to state 9
    ANDBW           shift and go to state 6
    FOR             shift and go to state 16
    FOREACH         shift and go to state 24
    WHILE           shift and go to state 5
    ENTERO          shift and go to state 13
    LPAREN          shift and go to state 19

    header_declaration             shift and go to state 14
    E                              shift and go to state 15
    function_declaration           shift and go to state 23
    call_function                  shift and go to state 2
    F                              shift and go to state 17
    T                              shift and go to state 18
    declaration_list               shift and go to state 257
    var_declaration                shift and go to state 10
    ciclos                         shift and go to state 7
    declaration                    shift and go to state 20
    print                          shift and go to state 12
    sentencia_if                   shift and go to state 27

state 240

    (41) lista1 -> typevar EQUALGREATER typevar COMMA lista1 .

    RPAREN          reduce using rule 41 (lista1 -> typevar EQUALGREATER typevar COMMA lista1 .)
    RBLOCK          reduce using rule 41 (lista1 -> typevar EQUALGREATER typevar COMMA lista1 .)


state 241

    (43) lista1 -> typevar EQUALGREATER LBRACKET lista RBRACKET . COMMA lista1
    (46) lista1 -> typevar EQUALGREATER LBRACKET lista RBRACKET .

    COMMA           shift and go to state 258
    RPAREN          reduce using rule 46 (lista1 -> typevar EQUALGREATER LBRACKET lista RBRACKET .)
    RBLOCK          reduce using rule 46 (lista1 -> typevar EQUALGREATER LBRACKET lista RBRACKET .)


state 242

    (42) lista1 -> typevar EQUALGREATER LPAREN lista RPAREN . COMMA lista1
    (45) lista1 -> typevar EQUALGREATER LPAREN lista RPAREN .

    COMMA           shift and go to state 259
    RPAREN          reduce using rule 45 (lista1 -> typevar EQUALGREATER LPAREN lista RPAREN .)
    RBLOCK          reduce using rule 45 (lista1 -> typevar EQUALGREATER LPAREN lista RPAREN .)


state 243

    (31) lista2 -> typevar COMMA LBRACKET lista RBRACKET . COMMA lista2
    (34) lista2 -> typevar COMMA LBRACKET lista RBRACKET .

    COMMA           shift and go to state 260
    RPAREN          reduce using rule 34 (lista2 -> typevar COMMA LBRACKET lista RBRACKET .)


state 244

    (30) lista2 -> typevar COMMA LPAREN lista RPAREN . COMMA lista2
    (33) lista2 -> typevar COMMA LPAREN lista RPAREN .

    COMMA           shift and go to state 261
    RPAREN          reduce using rule 33 (lista2 -> typevar COMMA LPAREN lista RPAREN .)


state 245

    (29) lista2 -> typevar . COMMA typevar COMMA lista2
    (30) lista2 -> typevar . COMMA LPAREN lista RPAREN COMMA lista2
    (31) lista2 -> typevar . COMMA LBRACKET lista RBRACKET COMMA lista2
    (32) lista2 -> typevar . COMMA typevar
    (33) lista2 -> typevar . COMMA LPAREN lista RPAREN
    (34) lista2 -> typevar . COMMA LBRACKET lista RBRACKET

    COMMA           shift and go to state 184


state 246

    (35) lista2 -> ID . COMMA typevar COMMA lista2
    (36) lista2 -> ID . COMMA LPAREN lista RPAREN COMMA lista2
    (37) lista2 -> ID . COMMA LBRACKET lista RBRACKET COMMA lista2
    (38) lista2 -> ID . COMMA typevar
    (39) lista2 -> ID . COMMA LPAREN lista RPAREN
    (40) lista2 -> ID . COMMA LBRACKET lista RBRACKET

    COMMA           shift and go to state 187


state 247

    (29) lista2 -> typevar COMMA typevar COMMA lista2 .

    RPAREN          reduce using rule 29 (lista2 -> typevar COMMA typevar COMMA lista2 .)


state 248

    (47) lista1 -> ID EQUALGREATER typevar COMMA lista1 .

    RPAREN          reduce using rule 47 (lista1 -> ID EQUALGREATER typevar COMMA lista1 .)
    RBLOCK          reduce using rule 47 (lista1 -> ID EQUALGREATER typevar COMMA lista1 .)


state 249

    (49) lista1 -> ID EQUALGREATER LBRACKET lista RBRACKET . COMMA lista1
    (52) lista1 -> ID EQUALGREATER LBRACKET lista RBRACKET .

    COMMA           shift and go to state 262
    RPAREN          reduce using rule 52 (lista1 -> ID EQUALGREATER LBRACKET lista RBRACKET .)
    RBLOCK          reduce using rule 52 (lista1 -> ID EQUALGREATER LBRACKET lista RBRACKET .)


state 250

    (48) lista1 -> ID EQUALGREATER LPAREN lista RPAREN . COMMA lista1
    (51) lista1 -> ID EQUALGREATER LPAREN lista RPAREN .

    COMMA           shift and go to state 263
    RPAREN          reduce using rule 51 (lista1 -> ID EQUALGREATER LPAREN lista RPAREN .)
    RBLOCK          reduce using rule 51 (lista1 -> ID EQUALGREATER LPAREN lista RPAREN .)


state 251

    (35) lista2 -> ID COMMA typevar COMMA lista2 .

    RPAREN          reduce using rule 35 (lista2 -> ID COMMA typevar COMMA lista2 .)


state 252

    (37) lista2 -> ID COMMA LBRACKET lista RBRACKET . COMMA lista2
    (40) lista2 -> ID COMMA LBRACKET lista RBRACKET .

    COMMA           shift and go to state 264
    RPAREN          reduce using rule 40 (lista2 -> ID COMMA LBRACKET lista RBRACKET .)


state 253

    (36) lista2 -> ID COMMA LPAREN lista RPAREN . COMMA lista2
    (39) lista2 -> ID COMMA LPAREN lista RPAREN .

    COMMA           shift and go to state 265
    RPAREN          reduce using rule 39 (lista2 -> ID COMMA LPAREN lista RPAREN .)


state 254

    (72) ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list . RBLOCK

    RBLOCK          shift and go to state 266


state 255

    (71) ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN . LBLOCK declaration_list RBLOCK

    LBLOCK          shift and go to state 267


state 256

    (112) sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond . RPAREN LBLOCK declaration_list RBLOCK
    (92) cond -> cond . log cond
    (79) log -> . LESS
    (80) log -> . GREATER
    (81) log -> . ISEQUAL
    (82) log -> . LESSEQUAL
    (83) log -> . GREATEREQUAL
    (84) log -> . DEQUAL
    (85) log -> . AND
    (86) log -> . ANDS
    (87) log -> . ORS
    (88) log -> . OR

    RPAREN          shift and go to state 268
    LESS            shift and go to state 111
    GREATER         shift and go to state 118
    ISEQUAL         shift and go to state 113
    LESSEQUAL       shift and go to state 115
    GREATEREQUAL    shift and go to state 108
    DEQUAL          shift and go to state 112
    AND             shift and go to state 107
    ANDS            shift and go to state 117
    ORS             shift and go to state 114
    OR              shift and go to state 116

    log                            shift and go to state 110

state 257

    (111) sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list . RBLOCK

    RBLOCK          shift and go to state 269


state 258

    (43) lista1 -> typevar EQUALGREATER LBRACKET lista RBRACKET COMMA . lista1
    (41) lista1 -> . typevar EQUALGREATER typevar COMMA lista1
    (42) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (43) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (44) lista1 -> . typevar EQUALGREATER typevar
    (45) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN
    (46) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET
    (47) lista1 -> . ID EQUALGREATER typevar COMMA lista1
    (48) lista1 -> . ID EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (49) lista1 -> . ID EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (50) lista1 -> . ID EQUALGREATER typevar
    (51) lista1 -> . ID EQUALGREATER LPAREN lista RPAREN
    (52) lista1 -> . ID EQUALGREATER LBRACKET lista RBRACKET
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    ID              shift and go to state 168
    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    typevar                        shift and go to state 166
    lista1                         shift and go to state 270

state 259

    (42) lista1 -> typevar EQUALGREATER LPAREN lista RPAREN COMMA . lista1
    (41) lista1 -> . typevar EQUALGREATER typevar COMMA lista1
    (42) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (43) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (44) lista1 -> . typevar EQUALGREATER typevar
    (45) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN
    (46) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET
    (47) lista1 -> . ID EQUALGREATER typevar COMMA lista1
    (48) lista1 -> . ID EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (49) lista1 -> . ID EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (50) lista1 -> . ID EQUALGREATER typevar
    (51) lista1 -> . ID EQUALGREATER LPAREN lista RPAREN
    (52) lista1 -> . ID EQUALGREATER LBRACKET lista RBRACKET
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    ID              shift and go to state 168
    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    typevar                        shift and go to state 166
    lista1                         shift and go to state 271

state 260

    (31) lista2 -> typevar COMMA LBRACKET lista RBRACKET COMMA . lista2
    (29) lista2 -> . typevar COMMA typevar COMMA lista2
    (30) lista2 -> . typevar COMMA LPAREN lista RPAREN COMMA lista2
    (31) lista2 -> . typevar COMMA LBRACKET lista RBRACKET COMMA lista2
    (32) lista2 -> . typevar COMMA typevar
    (33) lista2 -> . typevar COMMA LPAREN lista RPAREN
    (34) lista2 -> . typevar COMMA LBRACKET lista RBRACKET
    (35) lista2 -> . ID COMMA typevar COMMA lista2
    (36) lista2 -> . ID COMMA LPAREN lista RPAREN COMMA lista2
    (37) lista2 -> . ID COMMA LBRACKET lista RBRACKET COMMA lista2
    (38) lista2 -> . ID COMMA typevar
    (39) lista2 -> . ID COMMA LPAREN lista RPAREN
    (40) lista2 -> . ID COMMA LBRACKET lista RBRACKET
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    ID              shift and go to state 246
    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    typevar                        shift and go to state 245
    lista2                         shift and go to state 272

state 261

    (30) lista2 -> typevar COMMA LPAREN lista RPAREN COMMA . lista2
    (29) lista2 -> . typevar COMMA typevar COMMA lista2
    (30) lista2 -> . typevar COMMA LPAREN lista RPAREN COMMA lista2
    (31) lista2 -> . typevar COMMA LBRACKET lista RBRACKET COMMA lista2
    (32) lista2 -> . typevar COMMA typevar
    (33) lista2 -> . typevar COMMA LPAREN lista RPAREN
    (34) lista2 -> . typevar COMMA LBRACKET lista RBRACKET
    (35) lista2 -> . ID COMMA typevar COMMA lista2
    (36) lista2 -> . ID COMMA LPAREN lista RPAREN COMMA lista2
    (37) lista2 -> . ID COMMA LBRACKET lista RBRACKET COMMA lista2
    (38) lista2 -> . ID COMMA typevar
    (39) lista2 -> . ID COMMA LPAREN lista RPAREN
    (40) lista2 -> . ID COMMA LBRACKET lista RBRACKET
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    ID              shift and go to state 246
    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    typevar                        shift and go to state 245
    lista2                         shift and go to state 273

state 262

    (49) lista1 -> ID EQUALGREATER LBRACKET lista RBRACKET COMMA . lista1
    (41) lista1 -> . typevar EQUALGREATER typevar COMMA lista1
    (42) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (43) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (44) lista1 -> . typevar EQUALGREATER typevar
    (45) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN
    (46) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET
    (47) lista1 -> . ID EQUALGREATER typevar COMMA lista1
    (48) lista1 -> . ID EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (49) lista1 -> . ID EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (50) lista1 -> . ID EQUALGREATER typevar
    (51) lista1 -> . ID EQUALGREATER LPAREN lista RPAREN
    (52) lista1 -> . ID EQUALGREATER LBRACKET lista RBRACKET
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    ID              shift and go to state 168
    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    typevar                        shift and go to state 166
    lista1                         shift and go to state 274

state 263

    (48) lista1 -> ID EQUALGREATER LPAREN lista RPAREN COMMA . lista1
    (41) lista1 -> . typevar EQUALGREATER typevar COMMA lista1
    (42) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (43) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (44) lista1 -> . typevar EQUALGREATER typevar
    (45) lista1 -> . typevar EQUALGREATER LPAREN lista RPAREN
    (46) lista1 -> . typevar EQUALGREATER LBRACKET lista RBRACKET
    (47) lista1 -> . ID EQUALGREATER typevar COMMA lista1
    (48) lista1 -> . ID EQUALGREATER LPAREN lista RPAREN COMMA lista1
    (49) lista1 -> . ID EQUALGREATER LBRACKET lista RBRACKET COMMA lista1
    (50) lista1 -> . ID EQUALGREATER typevar
    (51) lista1 -> . ID EQUALGREATER LPAREN lista RPAREN
    (52) lista1 -> . ID EQUALGREATER LBRACKET lista RBRACKET
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    ID              shift and go to state 168
    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    typevar                        shift and go to state 166
    lista1                         shift and go to state 275

state 264

    (37) lista2 -> ID COMMA LBRACKET lista RBRACKET COMMA . lista2
    (29) lista2 -> . typevar COMMA typevar COMMA lista2
    (30) lista2 -> . typevar COMMA LPAREN lista RPAREN COMMA lista2
    (31) lista2 -> . typevar COMMA LBRACKET lista RBRACKET COMMA lista2
    (32) lista2 -> . typevar COMMA typevar
    (33) lista2 -> . typevar COMMA LPAREN lista RPAREN
    (34) lista2 -> . typevar COMMA LBRACKET lista RBRACKET
    (35) lista2 -> . ID COMMA typevar COMMA lista2
    (36) lista2 -> . ID COMMA LPAREN lista RPAREN COMMA lista2
    (37) lista2 -> . ID COMMA LBRACKET lista RBRACKET COMMA lista2
    (38) lista2 -> . ID COMMA typevar
    (39) lista2 -> . ID COMMA LPAREN lista RPAREN
    (40) lista2 -> . ID COMMA LBRACKET lista RBRACKET
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    ID              shift and go to state 246
    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    typevar                        shift and go to state 245
    lista2                         shift and go to state 276

state 265

    (36) lista2 -> ID COMMA LPAREN lista RPAREN COMMA . lista2
    (29) lista2 -> . typevar COMMA typevar COMMA lista2
    (30) lista2 -> . typevar COMMA LPAREN lista RPAREN COMMA lista2
    (31) lista2 -> . typevar COMMA LBRACKET lista RBRACKET COMMA lista2
    (32) lista2 -> . typevar COMMA typevar
    (33) lista2 -> . typevar COMMA LPAREN lista RPAREN
    (34) lista2 -> . typevar COMMA LBRACKET lista RBRACKET
    (35) lista2 -> . ID COMMA typevar COMMA lista2
    (36) lista2 -> . ID COMMA LPAREN lista RPAREN COMMA lista2
    (37) lista2 -> . ID COMMA LBRACKET lista RBRACKET COMMA lista2
    (38) lista2 -> . ID COMMA typevar
    (39) lista2 -> . ID COMMA LPAREN lista RPAREN
    (40) lista2 -> . ID COMMA LBRACKET lista RBRACKET
    (55) typevar -> . CADENA
    (56) typevar -> . CADENAA
    (57) typevar -> . ENTERO
    (58) typevar -> . OCTAL
    (59) typevar -> . HEXADECIMAL

    ID              shift and go to state 246
    CADENA          shift and go to state 71
    CADENAA         shift and go to state 40
    ENTERO          shift and go to state 45
    OCTAL           shift and go to state 39
    HEXADECIMAL     shift and go to state 41

    typevar                        shift and go to state 245
    lista2                         shift and go to state 277

state 266

    (72) ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK .

    USE             reduce using rule 72 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK .)
    REQUIRE         reduce using rule 72 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK .)
    PRINT           reduce using rule 72 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK .)
    PESOS           reduce using rule 72 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK .)
    MY              reduce using rule 72 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK .)
    ARROBA          reduce using rule 72 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK .)
    PORCENTAJE      reduce using rule 72 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK .)
    IF              reduce using rule 72 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK .)
    SUB             reduce using rule 72 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK .)
    ANDBW           reduce using rule 72 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK .)
    FOR             reduce using rule 72 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK .)
    FOREACH         reduce using rule 72 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK .)
    WHILE           reduce using rule 72 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK .)
    ENTERO          reduce using rule 72 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK .)
    LPAREN          reduce using rule 72 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK .)
    $end            reduce using rule 72 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK .)
    RBLOCK          reduce using rule 72 (ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK .)


state 267

    (71) ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK . declaration_list RBLOCK
    (2) declaration_list -> . declaration declaration_list
    (3) declaration_list -> . declaration
    (4) declaration -> . header_declaration
    (5) declaration -> . print
    (6) declaration -> . var_declaration
    (7) declaration -> . sentencia_if
    (8) declaration -> . function_declaration
    (9) declaration -> . call_function SEMICOLON
    (10) declaration -> . E SEMICOLON
    (11) declaration -> . ciclos
    (12) header_declaration -> . USE ID SEMICOLON
    (13) header_declaration -> . REQUIRE ID SEMICOLON
    (98) print -> . PRINT arg SEMICOLON
    (99) print -> . PRINT LPAREN arg RPAREN SEMICOLON
    (14) var_declaration -> . PESOS ID SEMICOLON
    (15) var_declaration -> . MY PESOS ID SEMICOLON
    (16) var_declaration -> . PESOS ID EQUAL E SEMICOLON
    (17) var_declaration -> . PESOS ID EQUAL call_function SEMICOLON
    (18) var_declaration -> . PESOS ID incdec SEMICOLON
    (19) var_declaration -> . MY PESOS ID EQUAL typevar SEMICOLON
    (20) var_declaration -> . PESOS ID EQUAL typevar SEMICOLON
    (21) var_declaration -> . ARROBA ID SEMICOLON
    (22) var_declaration -> . ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON
    (23) var_declaration -> . ARROBA ID EQUAL ARROBA ID SEMICOLON
    (24) var_declaration -> . PORCENTAJE ID SEMICOLON
    (25) var_declaration -> . PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON
    (26) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON
    (27) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON
    (28) var_declaration -> . PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON
    (110) sentencia_if -> . IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
    (111) sentencia_if -> . IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK
    (112) sentencia_if -> . IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
    (113) function_declaration -> . SUB ID LBLOCK declaration_list RBLOCK
    (114) call_function -> . ANDBW ID
    (115) call_function -> . ANDBW ID LPAREN arg RPAREN
    (60) E -> . E PLUS T
    (61) E -> . E MINUS T
    (62) E -> . T
    (71) ciclos -> . FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK
    (72) ciclos -> . FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK
    (73) ciclos -> . WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
    (63) T -> . T TIMES F
    (64) T -> . T DIVIDE F
    (65) T -> . F
    (66) F -> . PESOS ID
    (67) F -> . PESOS ID LBRACKET ENTERO RBRACKET
    (68) F -> . ENTERO
    (69) F -> . PESOS ID LBLOCK typevar RBLOCK
    (70) F -> . LPAREN E RPAREN

    USE             shift and go to state 1
    REQUIRE         shift and go to state 3
    PRINT           shift and go to state 8
    PESOS           shift and go to state 4
    MY              shift and go to state 26
    ARROBA          shift and go to state 28
    PORCENTAJE      shift and go to state 22
    IF              shift and go to state 21
    SUB             shift and go to state 9
    ANDBW           shift and go to state 6
    FOR             shift and go to state 16
    FOREACH         shift and go to state 24
    WHILE           shift and go to state 5
    ENTERO          shift and go to state 13
    LPAREN          shift and go to state 19

    header_declaration             shift and go to state 14
    E                              shift and go to state 15
    function_declaration           shift and go to state 23
    call_function                  shift and go to state 2
    F                              shift and go to state 17
    T                              shift and go to state 18
    declaration_list               shift and go to state 278
    var_declaration                shift and go to state 10
    ciclos                         shift and go to state 7
    declaration                    shift and go to state 20
    print                          shift and go to state 12
    sentencia_if                   shift and go to state 27

state 268

    (112) sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN . LBLOCK declaration_list RBLOCK

    LBLOCK          shift and go to state 279


state 269

    (111) sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK .

    USE             reduce using rule 111 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK .)
    REQUIRE         reduce using rule 111 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK .)
    PRINT           reduce using rule 111 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK .)
    PESOS           reduce using rule 111 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK .)
    MY              reduce using rule 111 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK .)
    ARROBA          reduce using rule 111 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK .)
    PORCENTAJE      reduce using rule 111 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK .)
    IF              reduce using rule 111 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK .)
    SUB             reduce using rule 111 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK .)
    ANDBW           reduce using rule 111 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK .)
    FOR             reduce using rule 111 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK .)
    FOREACH         reduce using rule 111 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK .)
    WHILE           reduce using rule 111 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK .)
    ENTERO          reduce using rule 111 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK .)
    LPAREN          reduce using rule 111 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK .)
    $end            reduce using rule 111 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK .)
    RBLOCK          reduce using rule 111 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK .)


state 270

    (43) lista1 -> typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1 .

    RPAREN          reduce using rule 43 (lista1 -> typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1 .)
    RBLOCK          reduce using rule 43 (lista1 -> typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1 .)


state 271

    (42) lista1 -> typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1 .

    RPAREN          reduce using rule 42 (lista1 -> typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1 .)
    RBLOCK          reduce using rule 42 (lista1 -> typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1 .)


state 272

    (31) lista2 -> typevar COMMA LBRACKET lista RBRACKET COMMA lista2 .

    RPAREN          reduce using rule 31 (lista2 -> typevar COMMA LBRACKET lista RBRACKET COMMA lista2 .)


state 273

    (30) lista2 -> typevar COMMA LPAREN lista RPAREN COMMA lista2 .

    RPAREN          reduce using rule 30 (lista2 -> typevar COMMA LPAREN lista RPAREN COMMA lista2 .)


state 274

    (49) lista1 -> ID EQUALGREATER LBRACKET lista RBRACKET COMMA lista1 .

    RPAREN          reduce using rule 49 (lista1 -> ID EQUALGREATER LBRACKET lista RBRACKET COMMA lista1 .)
    RBLOCK          reduce using rule 49 (lista1 -> ID EQUALGREATER LBRACKET lista RBRACKET COMMA lista1 .)


state 275

    (48) lista1 -> ID EQUALGREATER LPAREN lista RPAREN COMMA lista1 .

    RPAREN          reduce using rule 48 (lista1 -> ID EQUALGREATER LPAREN lista RPAREN COMMA lista1 .)
    RBLOCK          reduce using rule 48 (lista1 -> ID EQUALGREATER LPAREN lista RPAREN COMMA lista1 .)


state 276

    (37) lista2 -> ID COMMA LBRACKET lista RBRACKET COMMA lista2 .

    RPAREN          reduce using rule 37 (lista2 -> ID COMMA LBRACKET lista RBRACKET COMMA lista2 .)


state 277

    (36) lista2 -> ID COMMA LPAREN lista RPAREN COMMA lista2 .

    RPAREN          reduce using rule 36 (lista2 -> ID COMMA LPAREN lista RPAREN COMMA lista2 .)


state 278

    (71) ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list . RBLOCK

    RBLOCK          shift and go to state 280


state 279

    (112) sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK . declaration_list RBLOCK
    (2) declaration_list -> . declaration declaration_list
    (3) declaration_list -> . declaration
    (4) declaration -> . header_declaration
    (5) declaration -> . print
    (6) declaration -> . var_declaration
    (7) declaration -> . sentencia_if
    (8) declaration -> . function_declaration
    (9) declaration -> . call_function SEMICOLON
    (10) declaration -> . E SEMICOLON
    (11) declaration -> . ciclos
    (12) header_declaration -> . USE ID SEMICOLON
    (13) header_declaration -> . REQUIRE ID SEMICOLON
    (98) print -> . PRINT arg SEMICOLON
    (99) print -> . PRINT LPAREN arg RPAREN SEMICOLON
    (14) var_declaration -> . PESOS ID SEMICOLON
    (15) var_declaration -> . MY PESOS ID SEMICOLON
    (16) var_declaration -> . PESOS ID EQUAL E SEMICOLON
    (17) var_declaration -> . PESOS ID EQUAL call_function SEMICOLON
    (18) var_declaration -> . PESOS ID incdec SEMICOLON
    (19) var_declaration -> . MY PESOS ID EQUAL typevar SEMICOLON
    (20) var_declaration -> . PESOS ID EQUAL typevar SEMICOLON
    (21) var_declaration -> . ARROBA ID SEMICOLON
    (22) var_declaration -> . ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON
    (23) var_declaration -> . ARROBA ID EQUAL ARROBA ID SEMICOLON
    (24) var_declaration -> . PORCENTAJE ID SEMICOLON
    (25) var_declaration -> . PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON
    (26) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON
    (27) var_declaration -> . PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON
    (28) var_declaration -> . PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON
    (110) sentencia_if -> . IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
    (111) sentencia_if -> . IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK
    (112) sentencia_if -> . IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
    (113) function_declaration -> . SUB ID LBLOCK declaration_list RBLOCK
    (114) call_function -> . ANDBW ID
    (115) call_function -> . ANDBW ID LPAREN arg RPAREN
    (60) E -> . E PLUS T
    (61) E -> . E MINUS T
    (62) E -> . T
    (71) ciclos -> . FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK
    (72) ciclos -> . FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK
    (73) ciclos -> . WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK
    (63) T -> . T TIMES F
    (64) T -> . T DIVIDE F
    (65) T -> . F
    (66) F -> . PESOS ID
    (67) F -> . PESOS ID LBRACKET ENTERO RBRACKET
    (68) F -> . ENTERO
    (69) F -> . PESOS ID LBLOCK typevar RBLOCK
    (70) F -> . LPAREN E RPAREN

    USE             shift and go to state 1
    REQUIRE         shift and go to state 3
    PRINT           shift and go to state 8
    PESOS           shift and go to state 4
    MY              shift and go to state 26
    ARROBA          shift and go to state 28
    PORCENTAJE      shift and go to state 22
    IF              shift and go to state 21
    SUB             shift and go to state 9
    ANDBW           shift and go to state 6
    FOR             shift and go to state 16
    FOREACH         shift and go to state 24
    WHILE           shift and go to state 5
    ENTERO          shift and go to state 13
    LPAREN          shift and go to state 19

    header_declaration             shift and go to state 14
    E                              shift and go to state 15
    function_declaration           shift and go to state 23
    call_function                  shift and go to state 2
    F                              shift and go to state 17
    T                              shift and go to state 18
    declaration_list               shift and go to state 281
    var_declaration                shift and go to state 10
    ciclos                         shift and go to state 7
    declaration                    shift and go to state 20
    print                          shift and go to state 12
    sentencia_if                   shift and go to state 27

state 280

    (71) ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK .

    USE             reduce using rule 71 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK .)
    REQUIRE         reduce using rule 71 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK .)
    PRINT           reduce using rule 71 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK .)
    PESOS           reduce using rule 71 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK .)
    MY              reduce using rule 71 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK .)
    ARROBA          reduce using rule 71 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK .)
    PORCENTAJE      reduce using rule 71 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK .)
    IF              reduce using rule 71 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK .)
    SUB             reduce using rule 71 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK .)
    ANDBW           reduce using rule 71 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK .)
    FOR             reduce using rule 71 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK .)
    FOREACH         reduce using rule 71 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK .)
    WHILE           reduce using rule 71 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK .)
    ENTERO          reduce using rule 71 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK .)
    LPAREN          reduce using rule 71 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK .)
    $end            reduce using rule 71 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK .)
    RBLOCK          reduce using rule 71 (ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK .)


state 281

    (112) sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list . RBLOCK

    RBLOCK          shift and go to state 282


state 282

    (112) sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .

    USE             reduce using rule 112 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    REQUIRE         reduce using rule 112 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    PRINT           reduce using rule 112 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    PESOS           reduce using rule 112 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    MY              reduce using rule 112 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    ARROBA          reduce using rule 112 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    PORCENTAJE      reduce using rule 112 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    IF              reduce using rule 112 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    SUB             reduce using rule 112 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    ANDBW           reduce using rule 112 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    FOR             reduce using rule 112 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    FOREACH         reduce using rule 112 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    WHILE           reduce using rule 112 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    ENTERO          reduce using rule 112 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    LPAREN          reduce using rule 112 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    $end            reduce using rule 112 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)
    RBLOCK          reduce using rule 112 (sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMICOLON in state 32 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 36 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 38 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 120 resolved as shift
WARNING: shift/reduce conflict for LESS in state 121 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 121 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 121 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 121 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 121 resolved as shift
WARNING: shift/reduce conflict for DEQUAL in state 121 resolved as shift
WARNING: shift/reduce conflict for AND in state 121 resolved as shift
WARNING: shift/reduce conflict for ANDS in state 121 resolved as shift
WARNING: shift/reduce conflict for ORS in state 121 resolved as shift
WARNING: shift/reduce conflict for OR in state 121 resolved as shift
WARNING: shift/reduce conflict for LESS in state 148 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 148 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 148 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 148 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 148 resolved as shift
WARNING: shift/reduce conflict for DEQUAL in state 148 resolved as shift
WARNING: shift/reduce conflict for AND in state 148 resolved as shift
WARNING: shift/reduce conflict for ANDS in state 148 resolved as shift
WARNING: shift/reduce conflict for ORS in state 148 resolved as shift
WARNING: shift/reduce conflict for OR in state 148 resolved as shift
WARNING: reduce/reduce conflict in state 36 resolved using rule (type -> var_declaration_gen)
WARNING: rejected rule (arg -> var_declaration_gen) in state 36
WARNING: reduce/reduce conflict in state 38 resolved using rule (typevar -> CADENA)
WARNING: rejected rule (arg -> CADENA) in state 38
WARNING: reduce/reduce conflict in state 102 resolved using rule (typevar -> ENTERO)
WARNING: rejected rule (F -> ENTERO) in state 102
WARNING: Rule (arg -> var_declaration_gen) is never reduced
WARNING: Rule (arg -> CADENA) is never reduced
