
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '99FE2E8CAA384BD7032EE98BA47E70B7'
    
_lr_action_items = {'USE':([0,5,7,9,10,13,31,32,34,53,58,60,69,99,102,108,115,146,154,159,170,177,178,180,186,217,226,236,],[1,-7,-6,-5,-4,1,-8,-9,-10,-91,-17,-14,-12,-11,-13,1,-92,-21,-16,-66,-19,-20,-18,-15,1,-65,1,-64,]),'LESS':([38,39,40,41,42,45,46,47,48,50,82,83,84,109,110,111,116,139,140,141,],[-82,-83,-48,-51,74,-52,-50,-84,-49,-93,74,-84,74,74,-88,-87,74,-94,-95,-96,]),'REQUIRE':([0,5,7,9,10,13,31,32,34,53,58,60,69,99,102,108,115,146,154,159,170,177,178,180,186,217,226,236,],[2,-7,-6,-5,-4,2,-8,-9,-10,-91,-17,-14,-12,-11,-13,2,-92,-21,-16,-66,-19,-20,-18,-15,2,-65,2,-64,]),'PESOS':([0,5,6,7,9,10,12,13,20,24,26,31,32,34,36,43,44,49,51,53,56,58,60,67,69,70,71,73,74,75,76,77,78,79,80,81,90,99,100,101,102,103,104,108,115,142,146,154,159,161,170,177,178,180,185,186,217,226,236,],[3,-7,22,-6,-5,-4,27,3,22,22,55,-8,-9,-10,68,22,22,22,22,-91,92,-17,-14,68,-12,-78,-76,22,-72,-77,-74,-80,-75,-81,-79,-73,22,-11,68,68,-13,68,68,3,-92,160,-21,-16,-66,55,-19,-20,-18,-15,55,3,-65,3,-64,]),'EQUAL':([19,29,30,91,118,],[36,59,61,117,144,]),'LBRACKET':([50,107,147,148,150,151,],[86,136,165,167,172,175,]),'LESSEQUAL':([38,39,40,41,42,45,46,47,48,50,82,83,84,109,110,111,116,139,140,141,],[-82,-83,-48,-51,78,-52,-50,-84,-49,-93,78,-84,78,78,-88,-87,78,-94,-95,-96,]),'WHILE':([0,5,7,9,10,13,31,32,34,53,58,60,69,99,102,108,115,146,154,159,170,177,178,180,186,217,226,236,],[4,-7,-6,-5,-4,4,-8,-9,-10,-91,-17,-14,-12,-11,-13,4,-92,-21,-16,-66,-19,-20,-18,-15,4,-65,4,-64,]),'ARROBA':([0,5,7,9,10,13,31,32,34,53,58,60,61,69,93,99,102,108,115,146,154,159,170,177,178,180,186,217,226,236,],[16,-7,-6,-5,-4,16,-8,-9,-10,-91,-17,-14,97,-12,119,-11,-13,16,-92,-21,-16,-66,-19,-20,-18,-15,16,-65,16,-64,]),'PRINT':([0,5,7,9,10,13,31,32,34,53,58,60,69,99,102,108,115,146,154,159,170,177,178,180,186,217,226,236,],[6,-7,-6,-5,-4,6,-8,-9,-10,-91,-17,-14,-12,-11,-13,6,-92,-21,-16,-66,-19,-20,-18,-15,6,-65,6,-64,]),'HEXADECIMAL':([20,36,43,44,70,71,73,74,75,76,77,78,79,80,81,87,90,95,96,98,137,147,148,150,151,155,165,166,167,168,172,173,175,176,187,192,193,196,218,219,220,221,222,223,224,225,],[45,45,45,45,-78,-76,45,-72,-77,-74,-80,-75,-81,-79,-73,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'MINUS':([62,63,65,66,105,106,107,131,132,133,134,135,181,182,],[100,-61,-58,-55,100,-61,-59,-54,-53,-57,-56,-63,-60,-62,]),'GREATEREQUAL':([38,39,40,41,42,45,46,47,48,50,82,83,84,109,110,111,116,139,140,141,],[-82,-83,-48,-51,71,-52,-50,-84,-49,-93,71,-84,71,71,-88,-87,71,-94,-95,-96,]),'RPAREN':([21,23,33,35,38,39,40,41,42,45,46,47,48,50,52,65,66,82,83,84,85,88,105,106,107,109,110,111,122,124,129,130,131,132,133,134,135,139,140,141,145,164,169,171,174,179,181,182,189,191,195,198,199,202,203,204,205,206,209,210,211,212,213,214,215,227,228,229,230,231,232,233,234,],[-97,-98,-90,-89,-82,-83,-48,-51,72,-52,-50,-84,-49,-93,89,-58,-55,110,111,-86,-99,-100,135,-61,-59,-85,-88,-87,149,152,-47,156,-54,-53,-57,-56,-63,-94,-95,-96,163,-37,-25,-43,-31,-46,-60,-62,204,206,212,215,216,-34,-39,-38,-27,-26,-22,-40,-45,-44,-28,-33,-32,-36,-35,-24,-23,-42,-41,-30,-29,]),'SEMICOLON':([17,18,19,21,23,25,29,30,33,35,37,38,39,40,41,45,46,47,48,50,54,62,63,64,65,66,84,85,88,89,91,106,107,109,110,111,116,120,128,131,132,133,134,135,139,140,141,143,149,152,153,156,162,181,182,184,200,],[31,32,34,-97,-98,53,58,60,-90,-89,69,-82,-83,-48,-51,-52,-50,-84,-49,-93,90,99,-50,102,-58,-55,-86,-99,-100,115,-67,-61,-59,-85,-88,-87,142,146,154,-54,-53,-57,-56,-63,-94,-95,-96,-68,170,177,178,180,-69,-60,-62,-70,-71,]),'CADENA':([6,20,24,36,43,44,49,51,70,71,73,74,75,76,77,78,79,80,81,87,90,95,96,98,137,147,148,150,151,155,165,166,167,168,172,173,175,176,187,192,193,196,218,219,220,221,222,223,224,225,],[23,40,23,40,40,40,23,23,-78,-76,40,-72,-77,-74,-80,-75,-81,-79,-73,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'COMMA':([21,23,40,41,45,46,48,50,121,123,129,139,140,141,143,162,164,169,171,174,203,204,205,206,207,208,211,212,214,215,],[49,51,-48,-51,-52,-50,-49,-93,148,151,155,-94,-95,-96,161,185,187,192,193,196,218,219,220,221,148,151,222,223,224,225,]),'PLUS':([62,63,65,66,105,106,107,131,132,133,134,135,181,182,],[101,-61,-58,-55,101,-61,-59,-54,-53,-57,-56,-63,-60,-62,]),'ANDS':([38,39,40,41,42,45,46,47,48,50,82,83,84,109,110,111,116,139,140,141,],[-82,-83,-48,-51,80,-52,-50,-84,-49,-93,80,-84,80,80,-88,-87,80,-94,-95,-96,]),'$end':([5,7,8,9,10,13,15,28,31,32,34,53,58,60,69,99,102,115,146,154,159,170,177,178,180,217,236,],[-7,-6,0,-5,-4,-3,-1,-2,-8,-9,-10,-91,-17,-14,-12,-11,-13,-92,-21,-16,-66,-19,-20,-18,-15,-65,-64,]),'DIVIDE':([63,65,66,106,107,131,132,133,134,135,181,182,],[-61,-58,103,-61,-59,103,103,-57,-56,-63,-60,-62,]),'FOR':([0,5,7,9,10,13,31,32,34,53,58,60,69,99,102,108,115,146,154,159,170,177,178,180,186,217,226,236,],[11,-7,-6,-5,-4,11,-8,-9,-10,-91,-17,-14,-12,-11,-13,11,-92,-21,-16,-66,-19,-20,-18,-15,11,-65,11,-64,]),'PLUSPLUS':([19,183,],[35,35,]),'ISEQUAL':([38,39,40,41,42,45,46,47,48,50,82,83,84,109,110,111,116,139,140,141,],[-82,-83,-48,-51,76,-52,-50,-84,-49,-93,76,-84,76,76,-88,-87,76,-94,-95,-96,]),'TIMES':([63,65,66,106,107,131,132,133,134,135,181,182,],[-61,-58,104,-61,-59,104,104,-57,-56,-63,-60,-62,]),'FOREACH':([0,5,7,9,10,13,31,32,34,53,58,60,69,99,102,108,115,146,154,159,170,177,178,180,186,217,226,236,],[12,-7,-6,-5,-4,12,-8,-9,-10,-91,-17,-14,-12,-11,-13,12,-92,-21,-16,-66,-19,-20,-18,-15,12,-65,12,-64,]),'LPAREN':([4,6,11,20,36,43,44,57,59,61,67,70,71,73,74,75,76,77,78,79,80,81,90,100,101,103,104,147,148,150,151,],[20,24,26,43,67,43,43,93,95,98,67,-78,-76,43,-72,-77,-74,-80,-75,-81,-79,-73,43,67,67,67,67,166,168,173,176,]),'PORCENTAJE':([0,5,7,9,10,13,31,32,34,53,58,59,60,69,99,102,108,115,146,154,159,170,177,178,180,186,217,226,236,],[14,-7,-6,-5,-4,14,-8,-9,-10,-91,-17,94,-14,-12,-11,-13,14,-92,-21,-16,-66,-19,-20,-18,-15,14,-65,14,-64,]),'OCTAL':([20,36,43,44,70,71,73,74,75,76,77,78,79,80,81,87,90,95,96,98,137,147,148,150,151,155,165,166,167,168,172,173,175,176,187,192,193,196,218,219,220,221,222,223,224,225,],[41,41,41,41,-78,-76,41,-72,-77,-74,-80,-75,-81,-79,-73,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'LBLOCK':([50,59,72,107,163,216,],[87,96,108,137,186,226,]),'MINUSMINUS':([19,183,],[33,33,]),'ID':([1,2,3,14,16,22,27,55,68,87,92,94,95,96,97,119,160,187,192,193,196,218,219,220,221,222,223,224,225,],[17,18,19,29,30,50,57,91,107,114,118,120,123,127,128,145,183,127,208,127,208,127,127,208,208,127,127,208,208,]),'AND':([38,39,40,41,42,45,46,47,48,50,82,83,84,109,110,111,116,139,140,141,],[-82,-83,-48,-51,70,-52,-50,-84,-49,-93,70,-84,70,70,-88,-87,70,-94,-95,-96,]),'CADENAA':([20,36,43,44,70,71,73,74,75,76,77,78,79,80,81,87,90,95,96,98,137,147,148,150,151,155,165,166,167,168,172,173,175,176,187,192,193,196,218,219,220,221,222,223,224,225,],[48,48,48,48,-78,-76,48,-72,-77,-74,-80,-75,-81,-79,-73,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'GREATER':([38,39,40,41,42,45,46,47,48,50,82,83,84,109,110,111,116,139,140,141,],[-82,-83,-48,-51,81,-52,-50,-84,-49,-93,81,-84,81,81,-88,-87,81,-94,-95,-96,]),'DEQUAL':([38,39,40,41,42,45,46,47,48,50,82,83,84,109,110,111,116,139,140,141,],[-82,-83,-48,-51,75,-52,-50,-84,-49,-93,75,-84,75,75,-88,-87,75,-94,-95,-96,]),'ORS':([38,39,40,41,42,45,46,47,48,50,82,83,84,109,110,111,116,139,140,141,],[-82,-83,-48,-51,77,-52,-50,-84,-49,-93,77,-84,77,77,-88,-87,77,-94,-95,-96,]),'EQUALGREATER':([40,41,45,46,48,121,123,125,127,],[-48,-51,-52,-50,-49,147,150,147,150,]),'RBLOCK':([5,7,9,10,13,28,31,32,34,40,41,45,46,48,53,58,60,69,99,102,113,114,115,126,138,146,154,158,159,164,170,171,177,178,180,201,202,203,204,210,211,212,217,227,228,231,232,235,236,],[-7,-6,-5,-4,-3,-2,-8,-9,-10,-48,-51,-52,-50,-49,-91,-17,-14,-12,-11,-13,140,141,-92,153,159,-21,-16,182,-66,-37,-19,-43,-20,-18,-15,217,-34,-39,-38,-40,-45,-44,-65,-36,-35,-42,-41,236,-64,]),'NOT':([20,43,44,70,71,73,74,75,76,77,78,79,80,81,90,],[44,44,44,-78,-76,44,-72,-77,-74,-80,-75,-81,-79,-73,44,]),'RBRACKET':([40,41,45,46,48,112,129,157,179,188,190,194,197,],[-48,-51,-52,-50,-49,139,-47,181,-46,203,205,211,214,]),'ENTERO':([20,36,43,44,67,70,71,73,74,75,76,77,78,79,80,81,86,87,90,95,96,98,100,101,103,104,117,136,137,144,147,148,150,151,155,165,166,167,168,172,173,175,176,187,192,193,196,218,219,220,221,222,223,224,225,],[46,63,46,46,106,-78,-76,46,-72,-77,-74,-80,-75,-81,-79,-73,112,46,46,46,46,46,106,106,106,106,143,157,46,162,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'MY':([26,161,185,],[56,56,56,]),'OR':([38,39,40,41,42,45,46,47,48,50,82,83,84,109,110,111,116,139,140,141,],[-82,-83,-48,-51,79,-52,-50,-84,-49,-93,79,-84,79,79,-88,-87,79,-94,-95,-96,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'header_declaration':([0,13,108,186,226,],[10,10,10,10,10,]),'typevar':([20,36,43,44,73,87,90,95,96,98,137,147,148,150,151,155,165,166,167,168,172,173,175,176,187,192,193,196,218,219,220,221,222,223,224,225,],[38,64,38,38,38,113,38,121,125,129,158,164,169,171,174,129,129,129,129,129,129,129,129,129,125,207,125,207,125,125,207,207,125,125,207,207,]),'log':([42,82,84,109,116,],[73,73,73,73,73,]),'F':([36,67,100,101,103,104,],[65,65,65,65,133,134,]),'lista':([98,155,165,166,167,168,172,173,175,176,],[130,179,188,189,190,191,194,195,197,198,]),'lista1':([95,96,187,193,218,219,222,223,],[122,126,202,210,227,228,231,232,]),'var_declaration_gen':([6,20,24,43,44,49,51,73,90,],[21,39,21,39,39,21,21,39,39,]),'arg':([6,24,49,51,],[25,52,85,88,]),'declaration_list':([0,13,108,186,226,],[15,28,138,201,235,]),'var_declaration':([0,13,108,186,226,],[7,7,7,7,7,]),'program':([0,],[8,]),'cond':([20,43,44,73,90,],[42,82,84,109,116,]),'ciclos':([0,13,108,186,226,],[5,5,5,5,5,]),'declaration':([0,13,108,186,226,],[13,13,13,13,13,]),'print':([0,13,108,186,226,],[9,9,9,9,9,]),'E':([36,67,],[62,105,]),'incdec':([19,183,],[37,199,]),'lista2':([95,192,196,220,221,224,225,],[124,209,213,229,230,233,234,]),'type':([20,43,44,73,90,],[47,83,47,47,47,]),'sent_for':([26,161,185,],[54,184,200,]),'T':([36,67,100,101,],[66,66,131,132,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declaration_list','program',1,'p_program','AnalizadorSintactico.py',9),
  ('declaration_list -> declaration declaration_list','declaration_list',2,'p_declaration_list_2','AnalizadorSintactico.py',13),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list_2','AnalizadorSintactico.py',14),
  ('declaration -> header_declaration','declaration',1,'p_declaration','AnalizadorSintactico.py',18),
  ('declaration -> print','declaration',1,'p_declaration','AnalizadorSintactico.py',19),
  ('declaration -> var_declaration','declaration',1,'p_declaration','AnalizadorSintactico.py',20),
  ('declaration -> ciclos','declaration',1,'p_declaration','AnalizadorSintactico.py',21),
  ('header_declaration -> USE ID SEMICOLON','header_declaration',3,'p_header_declaration_1','AnalizadorSintactico.py',27),
  ('header_declaration -> REQUIRE ID SEMICOLON','header_declaration',3,'p_header_declaration_2','AnalizadorSintactico.py',31),
  ('var_declaration -> PESOS ID SEMICOLON','var_declaration',3,'p_var_declaration_1','AnalizadorSintactico.py',36),
  ('var_declaration -> PESOS ID EQUAL E SEMICOLON','var_declaration',5,'p_var_declaration_1','AnalizadorSintactico.py',37),
  ('var_declaration -> PESOS ID incdec SEMICOLON','var_declaration',4,'p_var_declaration_1','AnalizadorSintactico.py',38),
  ('var_declaration -> PESOS ID EQUAL typevar SEMICOLON','var_declaration',5,'p_var_declaration_1','AnalizadorSintactico.py',39),
  ('var_declaration -> ARROBA ID SEMICOLON','var_declaration',3,'p_var_declaration_2','AnalizadorSintactico.py',45),
  ('var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON','var_declaration',7,'p_var_declaration_2','AnalizadorSintactico.py',46),
  ('var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON','var_declaration',6,'p_var_declaration_2','AnalizadorSintactico.py',47),
  ('var_declaration -> PORCENTAJE ID SEMICOLON','var_declaration',3,'p_var_declaration_3','AnalizadorSintactico.py',53),
  ('var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON','var_declaration',7,'p_var_declaration_3','AnalizadorSintactico.py',54),
  ('var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON','var_declaration',7,'p_var_declaration_3','AnalizadorSintactico.py',55),
  ('var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON','var_declaration',7,'p_var_declaration_3','AnalizadorSintactico.py',56),
  ('var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON','var_declaration',6,'p_var_declaration_3','AnalizadorSintactico.py',57),
  ('lista2 -> typevar COMMA typevar COMMA lista2','lista2',5,'p_lista2','AnalizadorSintactico.py',61),
  ('lista2 -> typevar COMMA LPAREN lista RPAREN COMMA lista2','lista2',7,'p_lista2','AnalizadorSintactico.py',62),
  ('lista2 -> typevar COMMA LBRACKET lista RBRACKET COMMA lista2','lista2',7,'p_lista2','AnalizadorSintactico.py',63),
  ('lista2 -> typevar COMMA typevar','lista2',3,'p_lista2','AnalizadorSintactico.py',64),
  ('lista2 -> typevar COMMA LPAREN lista RPAREN','lista2',5,'p_lista2','AnalizadorSintactico.py',65),
  ('lista2 -> typevar COMMA LBRACKET lista RBRACKET','lista2',5,'p_lista2','AnalizadorSintactico.py',66),
  ('lista2 -> ID COMMA typevar COMMA lista2','lista2',5,'p_lista2','AnalizadorSintactico.py',67),
  ('lista2 -> ID COMMA LPAREN lista RPAREN COMMA lista2','lista2',7,'p_lista2','AnalizadorSintactico.py',68),
  ('lista2 -> ID COMMA LBRACKET lista RBRACKET COMMA lista2','lista2',7,'p_lista2','AnalizadorSintactico.py',69),
  ('lista2 -> ID COMMA typevar','lista2',3,'p_lista2','AnalizadorSintactico.py',70),
  ('lista2 -> ID COMMA LPAREN lista RPAREN','lista2',5,'p_lista2','AnalizadorSintactico.py',71),
  ('lista2 -> ID COMMA LBRACKET lista RBRACKET','lista2',5,'p_lista2','AnalizadorSintactico.py',72),
  ('lista1 -> typevar EQUALGREATER typevar COMMA lista1','lista1',5,'p_lista1','AnalizadorSintactico.py',76),
  ('lista1 -> typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1','lista1',7,'p_lista1','AnalizadorSintactico.py',77),
  ('lista1 -> typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1','lista1',7,'p_lista1','AnalizadorSintactico.py',78),
  ('lista1 -> typevar EQUALGREATER typevar','lista1',3,'p_lista1','AnalizadorSintactico.py',79),
  ('lista1 -> typevar EQUALGREATER LPAREN lista RPAREN','lista1',5,'p_lista1','AnalizadorSintactico.py',80),
  ('lista1 -> typevar EQUALGREATER LBRACKET lista RBRACKET','lista1',5,'p_lista1','AnalizadorSintactico.py',81),
  ('lista1 -> ID EQUALGREATER typevar COMMA lista1','lista1',5,'p_lista1','AnalizadorSintactico.py',82),
  ('lista1 -> ID EQUALGREATER LPAREN lista RPAREN COMMA lista1','lista1',7,'p_lista1','AnalizadorSintactico.py',83),
  ('lista1 -> ID EQUALGREATER LBRACKET lista RBRACKET COMMA lista1','lista1',7,'p_lista1','AnalizadorSintactico.py',84),
  ('lista1 -> ID EQUALGREATER typevar','lista1',3,'p_lista1','AnalizadorSintactico.py',85),
  ('lista1 -> ID EQUALGREATER LPAREN lista RPAREN','lista1',5,'p_lista1','AnalizadorSintactico.py',86),
  ('lista1 -> ID EQUALGREATER LBRACKET lista RBRACKET','lista1',5,'p_lista1','AnalizadorSintactico.py',87),
  ('lista -> typevar COMMA lista','lista',3,'p_lista','AnalizadorSintactico.py',91),
  ('lista -> typevar','lista',1,'p_lista','AnalizadorSintactico.py',92),
  ('typevar -> CADENA','typevar',1,'p_typevar','AnalizadorSintactico.py',96),
  ('typevar -> CADENAA','typevar',1,'p_typevar','AnalizadorSintactico.py',97),
  ('typevar -> ENTERO','typevar',1,'p_typevar','AnalizadorSintactico.py',98),
  ('typevar -> OCTAL','typevar',1,'p_typevar','AnalizadorSintactico.py',99),
  ('typevar -> HEXADECIMAL','typevar',1,'p_typevar','AnalizadorSintactico.py',100),
  ('E -> E PLUS T','E',3,'p_E','AnalizadorSintactico.py',106),
  ('E -> E MINUS T','E',3,'p_E','AnalizadorSintactico.py',107),
  ('E -> T','E',1,'p_E','AnalizadorSintactico.py',108),
  ('T -> T TIMES F','T',3,'p_T','AnalizadorSintactico.py',112),
  ('T -> T DIVIDE F','T',3,'p_T','AnalizadorSintactico.py',113),
  ('T -> F','T',1,'p_T','AnalizadorSintactico.py',114),
  ('F -> PESOS ID','F',2,'p_F','AnalizadorSintactico.py',118),
  ('F -> PESOS ID LBRACKET ENTERO RBRACKET','F',5,'p_F','AnalizadorSintactico.py',119),
  ('F -> ENTERO','F',1,'p_F','AnalizadorSintactico.py',120),
  ('F -> PESOS ID LBLOCK typevar RBLOCK','F',5,'p_F','AnalizadorSintactico.py',121),
  ('F -> LPAREN E RPAREN','F',3,'p_F','AnalizadorSintactico.py',122),
  ('ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK','ciclos',13,'p_ciclos','AnalizadorSintactico.py',128),
  ('ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK','ciclos',10,'p_ciclos','AnalizadorSintactico.py',129),
  ('ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK','ciclos',7,'p_ciclos','AnalizadorSintactico.py',130),
  ('sent_for -> PESOS ID','sent_for',2,'p_sent_for','AnalizadorSintactico.py',134),
  ('sent_for -> PESOS ID EQUAL ENTERO','sent_for',4,'p_sent_for','AnalizadorSintactico.py',135),
  ('sent_for -> MY PESOS ID EQUAL ENTERO','sent_for',5,'p_sent_for','AnalizadorSintactico.py',136),
  ('sent_for -> PESOS ID EQUAL ENTERO COMMA sent_for','sent_for',6,'p_sent_for','AnalizadorSintactico.py',137),
  ('sent_for -> MY PESOS ID EQUAL ENTERO COMMA sent_for','sent_for',7,'p_sent_for','AnalizadorSintactico.py',138),
  ('log -> LESS','log',1,'p_log','AnalizadorSintactico.py',144),
  ('log -> GREATER','log',1,'p_log','AnalizadorSintactico.py',145),
  ('log -> ISEQUAL','log',1,'p_log','AnalizadorSintactico.py',146),
  ('log -> LESSEQUAL','log',1,'p_log','AnalizadorSintactico.py',147),
  ('log -> GREATEREQUAL','log',1,'p_log','AnalizadorSintactico.py',148),
  ('log -> DEQUAL','log',1,'p_log','AnalizadorSintactico.py',149),
  ('log -> AND','log',1,'p_log','AnalizadorSintactico.py',150),
  ('log -> ANDS','log',1,'p_log','AnalizadorSintactico.py',151),
  ('log -> ORS','log',1,'p_log','AnalizadorSintactico.py',152),
  ('log -> OR','log',1,'p_log','AnalizadorSintactico.py',153),
  ('type -> typevar','type',1,'p_type','AnalizadorSintactico.py',157),
  ('type -> var_declaration_gen','type',1,'p_type','AnalizadorSintactico.py',158),
  ('cond -> type','cond',1,'p_cond','AnalizadorSintactico.py',162),
  ('cond -> cond log cond','cond',3,'p_cond','AnalizadorSintactico.py',163),
  ('cond -> NOT cond','cond',2,'p_cond','AnalizadorSintactico.py',164),
  ('cond -> LPAREN type RPAREN','cond',3,'p_cond','AnalizadorSintactico.py',165),
  ('cond -> LPAREN cond RPAREN','cond',3,'p_cond','AnalizadorSintactico.py',166),
  ('incdec -> PLUSPLUS','incdec',1,'p_incdec','AnalizadorSintactico.py',172),
  ('incdec -> MINUSMINUS','incdec',1,'p_incdec','AnalizadorSintactico.py',173),
  ('print -> PRINT arg SEMICOLON','print',3,'p_print','AnalizadorSintactico.py',179),
  ('print -> PRINT LPAREN arg RPAREN SEMICOLON','print',5,'p_print','AnalizadorSintactico.py',180),
  ('var_declaration_gen -> PESOS ID','var_declaration_gen',2,'p_var_declaration_gen','AnalizadorSintactico.py',186),
  ('var_declaration_gen -> PESOS ID LBRACKET ENTERO RBRACKET','var_declaration_gen',5,'p_var_declaration_gen','AnalizadorSintactico.py',187),
  ('var_declaration_gen -> PESOS ID LBLOCK typevar RBLOCK','var_declaration_gen',5,'p_var_declaration_gen','AnalizadorSintactico.py',188),
  ('var_declaration_gen -> PESOS ID LBLOCK ID RBLOCK','var_declaration_gen',5,'p_var_declaration_gen','AnalizadorSintactico.py',189),
  ('arg -> var_declaration_gen','arg',1,'p_arg','AnalizadorSintactico.py',193),
  ('arg -> CADENA','arg',1,'p_arg','AnalizadorSintactico.py',194),
  ('arg -> var_declaration_gen COMMA arg','arg',3,'p_arg','AnalizadorSintactico.py',195),
  ('arg -> CADENA COMMA arg','arg',3,'p_arg','AnalizadorSintactico.py',196),
]
