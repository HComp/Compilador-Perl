
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '319014321CFCB239B8C578207DDBE220'
    
_lr_action_items = {'USE':([0,7,10,12,14,20,23,27,30,48,61,62,64,81,83,94,98,106,138,142,143,144,147,155,156,160,182,191,192,195,199,206,213,214,217,235,239,266,267,269,279,280,282,],[1,-11,-6,-5,-4,1,-8,-7,-9,-10,-12,-13,-14,-98,1,-24,-21,-18,-15,-17,-20,-16,1,-99,-113,1,-28,-19,-23,-73,-110,-26,-27,-25,-22,1,1,-72,1,-111,1,-71,-112,]),'SUB':([0,7,10,12,14,20,23,27,30,48,61,62,64,81,83,94,98,106,138,142,143,144,147,155,156,160,182,191,192,195,199,206,213,214,217,235,239,266,267,269,279,280,282,],[9,-11,-6,-5,-4,9,-8,-7,-9,-10,-12,-13,-14,-98,9,-24,-21,-18,-15,-17,-20,-16,9,-99,-113,9,-28,-19,-23,-73,-110,-26,-27,-25,-22,9,9,-72,9,-111,9,-71,-112,]),'LESS':([35,39,40,41,45,70,71,72,75,78,93,119,120,121,148,149,150,157,175,176,177,256,],[-89,-58,-56,-59,-57,-90,-55,111,-91,-100,111,111,-91,111,111,-95,-94,111,-101,-102,-103,111,]),'REQUIRE':([0,7,10,12,14,20,23,27,30,48,61,62,64,81,83,94,98,106,138,142,143,144,147,155,156,160,182,191,192,195,199,206,213,214,217,235,239,266,267,269,279,280,282,],[3,-11,-6,-5,-4,3,-8,-7,-9,-10,-12,-13,-14,-98,3,-24,-21,-18,-15,-17,-20,-16,3,-99,-113,3,-28,-19,-23,-73,-110,-26,-27,-25,-22,3,3,-72,3,-111,3,-71,-112,]),'PORCENTAJE':([0,7,10,12,14,20,23,27,30,48,61,62,64,81,83,94,95,98,106,138,142,143,144,147,155,156,160,182,191,192,195,199,206,213,214,217,235,239,266,267,269,279,280,282,],[22,-11,-6,-5,-4,22,-8,-7,-9,-10,-12,-13,-14,-98,22,-24,134,-21,-18,-15,-17,-20,-16,22,-99,-113,22,-28,-19,-23,-73,-110,-26,-27,-25,-22,22,22,-72,22,-111,22,-71,-112,]),'EQUAL':([32,57,60,97,131,159,],[66,95,99,139,158,180,]),'LBRACKET':([32,78,91,183,184,186,187,],[67,124,67,201,203,208,211,]),'LESSEQUAL':([35,39,40,41,45,70,71,72,75,78,93,119,120,121,148,149,150,157,175,176,177,256,],[-89,-58,-56,-59,-57,-90,-55,115,-91,-100,115,115,-91,115,115,-95,-94,115,-101,-102,-103,115,]),'WHILE':([0,7,10,12,14,20,23,27,30,48,61,62,64,81,83,94,98,106,138,142,143,144,147,155,156,160,182,191,192,195,199,206,213,214,217,235,239,266,267,269,279,280,282,],[5,-11,-6,-5,-4,5,-8,-7,-9,-10,-12,-13,-14,-98,5,-24,-21,-18,-15,-17,-20,-16,5,-99,-113,5,-28,-19,-23,-73,-110,-26,-27,-25,-22,5,5,-72,5,-111,5,-71,-112,]),'ANDBW':([0,7,10,12,14,20,23,27,30,48,61,62,64,66,81,83,94,98,106,138,142,143,144,147,155,156,160,182,191,192,195,199,206,213,214,217,235,239,266,267,269,279,280,282,],[6,-11,-6,-5,-4,6,-8,-7,-9,-10,-12,-13,-14,6,-98,6,-24,-21,-18,-15,-17,-20,-16,6,-99,-113,6,-28,-19,-23,-73,-110,-26,-27,-25,-22,6,6,-72,6,-111,6,-71,-112,]),'ARROBA':([0,7,10,12,14,20,23,27,30,48,61,62,64,81,83,94,98,99,106,137,138,142,143,144,147,155,156,160,182,191,192,195,199,206,213,214,217,235,239,266,267,269,279,280,282,],[28,-11,-6,-5,-4,28,-8,-7,-9,-10,-12,-13,-14,-98,28,-24,-21,140,-18,169,-15,-17,-20,-16,28,-99,-113,28,-28,-19,-23,-73,-110,-26,-27,-25,-22,28,28,-72,28,-111,28,-71,-112,]),'PRINT':([0,7,10,12,14,20,23,27,30,48,61,62,64,81,83,94,98,106,138,142,143,144,147,155,156,160,182,191,192,195,199,206,213,214,217,235,239,266,267,269,279,280,282,],[8,-11,-6,-5,-4,8,-8,-7,-9,-10,-12,-13,-14,-98,8,-24,-21,-18,-15,-17,-20,-16,8,-99,-113,8,-28,-19,-23,-73,-110,-26,-27,-25,-22,8,8,-72,8,-111,8,-71,-112,]),'HEXADECIMAL':([8,33,42,56,66,68,73,74,76,77,79,82,107,108,110,111,112,113,114,115,116,117,118,125,130,135,136,139,141,183,184,186,187,193,201,202,203,204,208,209,211,212,223,228,229,232,238,258,259,260,261,262,263,264,265,],[41,41,41,41,41,41,41,41,41,41,41,41,-85,-83,41,-79,-84,-81,-87,-82,-88,-86,-80,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'MINUS':([13,15,17,18,32,54,84,85,89,90,91,92,102,103,145,146,],[-68,49,-65,-62,-66,49,-60,-61,-64,-63,-66,-70,-68,49,-67,-69,]),'GREATEREQUAL':([35,39,40,41,45,70,71,72,75,78,93,119,120,121,148,149,150,157,175,176,177,256,],[-89,-58,-56,-59,-57,-90,-55,108,-91,-100,108,108,-91,108,108,-95,-94,108,-101,-102,-103,108,]),'RPAREN':([13,17,18,35,36,38,39,40,41,44,45,54,63,65,70,71,72,75,78,80,84,85,89,90,91,92,93,119,120,121,122,123,126,128,145,146,148,149,150,163,165,172,173,175,176,177,190,200,205,207,210,216,225,227,231,234,236,240,241,242,243,244,247,248,249,250,251,252,253,256,270,271,272,273,274,275,276,277,],[-68,-65,-62,-89,-90,-55,-58,-56,-59,-105,-57,92,-97,-96,-90,-55,109,-91,-100,127,-60,-61,-64,-63,-66,-70,133,149,150,-93,151,-108,-109,-106,-67,-69,-92,-95,-94,185,188,-54,194,-101,-102,-103,215,-44,-32,-50,-38,-53,242,244,250,253,255,-41,-46,-45,-34,-33,-29,-47,-52,-51,-35,-40,-39,268,-43,-42,-31,-30,-49,-48,-37,-36,]),'SEMICOLON':([2,13,15,17,18,29,31,32,34,35,36,38,39,40,41,43,44,45,57,60,63,65,69,70,71,75,78,84,85,86,89,90,91,92,97,100,101,102,103,121,123,126,127,128,131,145,146,148,149,150,151,157,161,170,171,175,176,177,179,185,188,189,194,198,219,237,],[30,-68,48,-65,-62,61,62,64,-114,-89,-90,-55,-58,-56,-59,81,-105,-57,94,98,-97,-96,106,-90,-55,-91,-100,-60,-61,130,-64,-63,-66,-70,138,142,143,-57,144,-93,-108,-109,155,-106,-74,-67,-69,-92,-95,-94,-115,178,182,191,192,-101,-102,-103,-75,206,213,214,217,-76,-78,-77,]),'CADENA':([8,33,42,56,66,68,73,74,76,77,79,82,107,108,110,111,112,113,114,115,116,117,118,125,130,135,136,139,141,183,184,186,187,193,201,202,203,204,208,209,211,212,223,228,229,232,238,258,259,260,261,262,263,264,265,],[38,71,38,71,71,71,71,71,38,38,38,38,-85,-83,71,-79,-84,-81,-87,-82,-88,-86,-80,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'PLUS':([13,15,17,18,32,54,84,85,89,90,91,92,102,103,145,146,],[-68,47,-65,-62,-66,47,-60,-61,-64,-63,-66,-70,-68,47,-67,-69,]),'COMMA':([35,36,38,39,40,41,44,45,71,78,162,164,172,175,176,177,179,198,200,205,207,210,241,242,243,244,245,246,249,250,252,253,],[-89,77,79,-58,-56,-59,82,-57,-55,-100,184,187,193,-101,-102,-103,197,220,223,228,229,232,258,259,260,261,184,187,262,263,264,265,]),'ANDS':([35,39,40,41,45,70,71,72,75,78,93,119,120,121,148,149,150,157,175,176,177,256,],[-89,-58,-56,-59,-57,-90,-55,117,-91,-100,117,117,-91,117,117,-95,-94,117,-101,-102,-103,117,]),'$end':([7,10,11,12,14,20,23,25,27,30,48,55,61,62,64,81,94,98,106,138,142,143,144,155,156,182,191,192,195,199,206,213,214,217,266,269,280,282,],[-11,-6,0,-5,-4,-3,-8,-1,-7,-9,-10,-2,-12,-13,-14,-98,-24,-21,-18,-15,-17,-20,-16,-99,-113,-28,-19,-23,-73,-110,-26,-27,-25,-22,-72,-111,-71,-112,]),'DIVIDE':([13,17,18,32,84,85,89,90,91,92,102,145,146,],[-68,-65,51,-66,51,51,-64,-63,-66,-70,-68,-67,-69,]),'FOR':([0,7,10,12,14,20,23,27,30,48,61,62,64,81,83,94,98,106,138,142,143,144,147,155,156,160,182,191,192,195,199,206,213,214,217,235,239,266,267,269,279,280,282,],[16,-11,-6,-5,-4,16,-8,-7,-9,-10,-12,-13,-14,-98,16,-24,-21,-18,-15,-17,-20,-16,16,-99,-113,16,-28,-19,-23,-73,-110,-26,-27,-25,-22,16,16,-72,16,-111,16,-71,-112,]),'PLUSPLUS':([32,218,],[65,65,]),'ISEQUAL':([35,39,40,41,45,70,71,72,75,78,93,119,120,121,148,149,150,157,175,176,177,256,],[-89,-58,-56,-59,-57,-90,-55,113,-91,-100,113,113,-91,113,113,-95,-94,113,-101,-102,-103,113,]),'TIMES':([13,17,18,32,84,85,89,90,91,92,102,145,146,],[-68,-65,52,-66,52,52,-64,-63,-66,-70,-68,-67,-69,]),'FOREACH':([0,7,10,12,14,20,23,27,30,48,61,62,64,81,83,94,98,106,138,142,143,144,147,155,156,160,182,191,192,195,199,206,213,214,217,235,239,266,267,269,279,280,282,],[24,-11,-6,-5,-4,24,-8,-7,-9,-10,-12,-13,-14,-98,24,-24,-21,-18,-15,-17,-20,-16,24,-99,-113,24,-28,-19,-23,-73,-110,-26,-27,-25,-22,24,24,-72,24,-111,24,-71,-112,]),'LPAREN':([0,5,7,8,10,12,14,16,19,20,21,23,27,30,33,34,47,48,49,51,52,56,61,62,64,66,73,74,81,83,94,95,96,98,99,106,107,108,110,111,112,113,114,115,116,117,118,130,138,142,143,144,147,155,156,160,182,183,184,186,187,191,192,195,199,206,213,214,217,221,235,238,239,266,267,269,279,280,282,],[19,33,-11,42,-6,-5,-4,50,19,19,56,-8,-7,-9,73,76,19,-10,19,19,19,73,-12,-13,-14,19,73,73,-98,19,-24,135,137,-21,141,-18,-85,-83,73,-79,-84,-81,-87,-82,-88,-86,-80,73,-15,-17,-20,-16,19,-99,-113,19,-28,202,204,209,212,-19,-23,-73,-110,-26,-27,-25,-22,238,19,73,19,-72,19,-111,19,-71,-112,]),'PESOS':([0,7,8,10,12,14,19,20,23,24,26,27,30,33,42,47,48,49,50,51,52,56,61,62,64,66,73,74,76,77,79,81,82,83,88,94,98,106,107,108,110,111,112,113,114,115,116,117,118,130,138,142,143,144,147,155,156,160,178,182,191,192,195,197,199,206,213,214,217,220,235,238,239,266,267,269,279,280,282,],[4,-11,37,-6,-5,-4,53,4,-8,58,59,-7,-9,37,37,53,-10,53,87,53,53,37,-12,-13,-14,53,37,37,37,37,37,-98,37,4,132,-24,-21,-18,-85,-83,37,-79,-84,-81,-87,-82,-88,-86,-80,37,-15,-17,-20,-16,4,-99,-113,4,196,-28,-19,-23,-73,87,-110,-26,-27,-25,-22,87,4,37,4,-72,4,-111,4,-71,-112,]),'OCTAL':([8,33,42,56,66,68,73,74,76,77,79,82,107,108,110,111,112,113,114,115,116,117,118,125,130,135,136,139,141,183,184,186,187,193,201,202,203,204,208,209,211,212,223,228,229,232,238,258,259,260,261,262,263,264,265,],[39,39,39,39,39,39,39,39,39,39,39,39,-85,-83,39,-79,-84,-81,-87,-82,-88,-86,-80,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'LBLOCK':([32,46,78,91,95,109,133,215,222,255,268,],[68,83,125,68,136,147,160,235,239,267,279,]),'MINUSMINUS':([32,218,],[63,63,]),'ELSE':([199,],[222,]),'ID':([1,3,4,6,9,22,28,37,53,58,59,87,125,132,134,135,136,140,169,196,223,228,229,232,258,259,260,261,262,263,264,265,],[29,31,32,34,46,57,60,78,91,96,97,131,154,159,161,164,168,171,190,218,168,246,168,246,168,168,246,246,168,168,246,246,]),'IF':([0,7,10,12,14,20,23,27,30,48,61,62,64,81,83,94,98,106,138,142,143,144,147,155,156,160,182,191,192,195,199,206,213,214,217,235,239,266,267,269,279,280,282,],[21,-11,-6,-5,-4,21,-8,-7,-9,-10,-12,-13,-14,-98,21,-24,-21,-18,-15,-17,-20,-16,21,-99,-113,21,-28,-19,-23,-73,-110,-26,-27,-25,-22,21,21,-72,21,-111,21,-71,-112,]),'AND':([35,39,40,41,45,70,71,72,75,78,93,119,120,121,148,149,150,157,175,176,177,256,],[-89,-58,-56,-59,-57,-90,-55,107,-91,-100,107,107,-91,107,107,-95,-94,107,-101,-102,-103,107,]),'CADENAA':([8,33,42,56,66,68,73,74,76,77,79,82,107,108,110,111,112,113,114,115,116,117,118,125,130,135,136,139,141,183,184,186,187,193,201,202,203,204,208,209,211,212,223,228,229,232,238,258,259,260,261,262,263,264,265,],[40,40,40,40,40,40,40,40,40,40,40,40,-85,-83,40,-79,-84,-81,-87,-82,-88,-86,-80,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'GREATER':([35,39,40,41,45,70,71,72,75,78,93,119,120,121,148,149,150,157,175,176,177,256,],[-89,-58,-56,-59,-57,-90,-55,118,-91,-100,118,118,-91,118,118,-95,-94,118,-101,-102,-103,118,]),'DEQUAL':([35,39,40,41,45,70,71,72,75,78,93,119,120,121,148,149,150,157,175,176,177,256,],[-89,-58,-56,-59,-57,-90,-55,112,-91,-100,112,112,-91,112,112,-95,-94,112,-101,-102,-103,112,]),'ELSIF':([199,],[221,]),'ORS':([35,39,40,41,45,70,71,72,75,78,93,119,120,121,148,149,150,157,175,176,177,256,],[-89,-58,-56,-59,-57,-90,-55,114,-91,-100,114,114,-91,114,114,-95,-94,114,-101,-102,-103,114,]),'EQUALGREATER':([39,40,41,45,71,162,164,166,168,],[-58,-56,-59,-57,-55,183,186,183,186,]),'RBLOCK':([7,10,12,14,20,23,27,30,39,40,41,45,48,55,61,62,64,71,81,94,98,105,106,129,138,142,143,144,153,154,155,156,167,174,181,182,191,192,195,199,200,206,207,213,214,217,240,241,242,248,249,250,254,257,266,269,270,271,274,275,278,280,281,282,],[-11,-6,-5,-4,-3,-8,-7,-9,-58,-56,-59,-57,-10,-2,-12,-13,-14,-55,-98,-24,-21,146,-18,156,-15,-17,-20,-16,176,177,-99,-113,189,195,199,-28,-19,-23,-73,-110,-44,-26,-50,-27,-25,-22,-41,-46,-45,-47,-52,-51,266,269,-72,-111,-43,-42,-49,-48,280,-71,282,-112,]),'NOT':([33,56,73,74,107,108,110,111,112,113,114,115,116,117,118,130,238,],[74,74,74,74,-85,-83,74,-79,-84,-81,-87,-82,-88,-86,-80,74,74,]),'RBRACKET':([39,40,41,45,71,104,152,172,216,224,226,230,233,],[-58,-56,-59,-57,-55,145,175,-54,-53,241,243,249,252,]),'ENTERO':([0,7,8,10,12,14,19,20,23,27,30,33,42,47,48,49,51,52,56,61,62,64,66,67,68,73,74,76,77,79,81,82,83,94,98,106,107,108,110,111,112,113,114,115,116,117,118,124,125,130,135,136,138,139,141,142,143,144,147,155,156,158,160,180,182,183,184,186,187,191,192,193,195,199,201,202,203,204,206,208,209,211,212,213,214,217,223,228,229,232,235,238,239,258,259,260,261,262,263,264,265,266,267,269,279,280,282,],[13,-11,45,-6,-5,-4,13,13,-8,-7,-9,45,45,13,-10,13,13,13,45,-12,-13,-14,102,104,45,45,45,45,45,45,-98,45,13,-24,-21,-18,-85,-83,45,-79,-84,-81,-87,-82,-88,-86,-80,152,45,45,45,45,-15,45,45,-17,-20,-16,13,-99,-113,179,13,198,-28,45,45,45,45,-19,-23,45,-73,-110,45,45,45,45,-26,45,45,45,45,-27,-25,-22,45,45,45,45,13,45,13,45,45,45,45,45,45,45,45,-72,13,-111,13,-71,-112,]),'MY':([0,7,10,12,14,20,23,27,30,48,50,61,62,64,81,83,94,98,106,138,142,143,144,147,155,156,160,182,191,192,195,197,199,206,213,214,217,220,235,239,266,267,269,279,280,282,],[26,-11,-6,-5,-4,26,-8,-7,-9,-10,88,-12,-13,-14,-98,26,-24,-21,-18,-15,-17,-20,-16,26,-99,-113,26,-28,-19,-23,-73,88,-110,-26,-27,-25,-22,88,26,26,-72,26,-111,26,-71,-112,]),'OR':([35,39,40,41,45,70,71,72,75,78,93,119,120,121,148,149,150,157,175,176,177,256,],[-89,-58,-56,-59,-57,-90,-55,116,-91,-100,116,116,-91,116,116,-95,-94,116,-101,-102,-103,116,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'call_function':([0,20,66,83,147,160,235,239,267,279,],[2,2,100,2,2,2,2,2,2,2,]),'cond':([33,56,73,74,110,130,238,],[72,93,119,121,148,157,256,]),'ciclos':([0,20,83,147,160,235,239,267,279,],[7,7,7,7,7,7,7,7,7,]),'arg':([8,42,76,77,79,82,],[43,80,122,123,126,128,]),'typevar':([8,33,42,56,66,68,73,74,76,77,79,82,110,125,130,135,136,139,141,183,184,186,187,193,201,202,203,204,208,209,211,212,223,228,229,232,238,258,259,260,261,262,263,264,265,],[35,35,35,35,101,105,35,35,35,35,35,35,35,153,35,162,166,170,172,200,205,207,210,172,172,172,172,172,172,172,172,172,166,245,166,245,35,166,166,245,245,166,166,245,245,]),'log':([72,93,119,121,148,157,256,],[110,110,110,110,110,110,110,]),'sent_for':([50,197,220,],[86,219,237,]),'var_declaration':([0,20,83,147,160,235,239,267,279,],[10,10,10,10,10,10,10,10,10,]),'program':([0,],[11,]),'print':([0,20,83,147,160,235,239,267,279,],[12,12,12,12,12,12,12,12,12,]),'type':([8,33,42,56,73,74,76,77,79,82,110,130,238,],[44,75,44,75,120,75,44,44,44,44,75,75,75,]),'header_declaration':([0,20,83,147,160,235,239,267,279,],[14,14,14,14,14,14,14,14,14,]),'E':([0,19,20,66,83,147,160,235,239,267,279,],[15,54,15,103,15,15,15,15,15,15,15,]),'F':([0,19,20,47,49,51,52,66,83,147,160,235,239,267,279,],[17,17,17,17,17,89,90,17,17,17,17,17,17,17,17,]),'var_declaration_gen':([8,33,42,56,73,74,76,77,79,82,110,130,238,],[36,70,36,70,70,70,36,36,36,36,70,70,70,]),'T':([0,19,20,47,49,66,83,147,160,235,239,267,279,],[18,18,18,84,85,18,18,18,18,18,18,18,18,]),'declaration':([0,20,83,147,160,235,239,267,279,],[20,20,20,20,20,20,20,20,20,]),'lista':([141,193,201,202,203,204,208,209,211,212,],[173,216,224,225,226,227,230,231,233,234,]),'function_declaration':([0,20,83,147,160,235,239,267,279,],[23,23,23,23,23,23,23,23,23,]),'declaration_list':([0,20,83,147,160,235,239,267,279,],[25,55,129,174,181,254,257,278,281,]),'incdec':([32,218,],[69,236,]),'lista1':([135,136,223,229,258,259,262,263,],[163,167,240,248,270,271,274,275,]),'sentencia_if':([0,20,83,147,160,235,239,267,279,],[27,27,27,27,27,27,27,27,27,]),'lista2':([135,228,232,260,261,264,265,],[165,247,251,272,273,276,277,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declaration_list','program',1,'p_program','AnalizadorSintactico.py',9),
  ('declaration_list -> declaration declaration_list','declaration_list',2,'p_declaration_list_2','AnalizadorSintactico.py',13),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list_2','AnalizadorSintactico.py',14),
  ('declaration -> header_declaration','declaration',1,'p_declaration','AnalizadorSintactico.py',18),
  ('declaration -> print','declaration',1,'p_declaration','AnalizadorSintactico.py',19),
  ('declaration -> var_declaration','declaration',1,'p_declaration','AnalizadorSintactico.py',20),
  ('declaration -> sentencia_if','declaration',1,'p_declaration','AnalizadorSintactico.py',21),
  ('declaration -> function_declaration','declaration',1,'p_declaration','AnalizadorSintactico.py',22),
  ('declaration -> call_function SEMICOLON','declaration',2,'p_declaration','AnalizadorSintactico.py',23),
  ('declaration -> E SEMICOLON','declaration',2,'p_declaration','AnalizadorSintactico.py',24),
  ('declaration -> ciclos','declaration',1,'p_declaration','AnalizadorSintactico.py',25),
  ('header_declaration -> USE ID SEMICOLON','header_declaration',3,'p_header_declaration_1','AnalizadorSintactico.py',31),
  ('header_declaration -> REQUIRE ID SEMICOLON','header_declaration',3,'p_header_declaration_2','AnalizadorSintactico.py',35),
  ('var_declaration -> PESOS ID SEMICOLON','var_declaration',3,'p_var_declaration_1','AnalizadorSintactico.py',40),
  ('var_declaration -> MY PESOS ID SEMICOLON','var_declaration',4,'p_var_declaration_1','AnalizadorSintactico.py',41),
  ('var_declaration -> PESOS ID EQUAL E SEMICOLON','var_declaration',5,'p_var_declaration_1','AnalizadorSintactico.py',42),
  ('var_declaration -> PESOS ID EQUAL call_function SEMICOLON','var_declaration',5,'p_var_declaration_1','AnalizadorSintactico.py',43),
  ('var_declaration -> PESOS ID incdec SEMICOLON','var_declaration',4,'p_var_declaration_1','AnalizadorSintactico.py',44),
  ('var_declaration -> MY PESOS ID EQUAL typevar SEMICOLON','var_declaration',6,'p_var_declaration_1','AnalizadorSintactico.py',45),
  ('var_declaration -> PESOS ID EQUAL typevar SEMICOLON','var_declaration',5,'p_var_declaration_1','AnalizadorSintactico.py',46),
  ('var_declaration -> ARROBA ID SEMICOLON','var_declaration',3,'p_var_declaration_2','AnalizadorSintactico.py',52),
  ('var_declaration -> ARROBA ID EQUAL LPAREN lista RPAREN SEMICOLON','var_declaration',7,'p_var_declaration_2','AnalizadorSintactico.py',53),
  ('var_declaration -> ARROBA ID EQUAL ARROBA ID SEMICOLON','var_declaration',6,'p_var_declaration_2','AnalizadorSintactico.py',54),
  ('var_declaration -> PORCENTAJE ID SEMICOLON','var_declaration',3,'p_var_declaration_3','AnalizadorSintactico.py',60),
  ('var_declaration -> PORCENTAJE ID EQUAL LBLOCK lista1 RBLOCK SEMICOLON','var_declaration',7,'p_var_declaration_3','AnalizadorSintactico.py',61),
  ('var_declaration -> PORCENTAJE ID EQUAL LPAREN lista1 RPAREN SEMICOLON','var_declaration',7,'p_var_declaration_3','AnalizadorSintactico.py',62),
  ('var_declaration -> PORCENTAJE ID EQUAL LPAREN lista2 RPAREN SEMICOLON','var_declaration',7,'p_var_declaration_3','AnalizadorSintactico.py',63),
  ('var_declaration -> PORCENTAJE ID EQUAL PORCENTAJE ID SEMICOLON','var_declaration',6,'p_var_declaration_3','AnalizadorSintactico.py',64),
  ('lista2 -> typevar COMMA typevar COMMA lista2','lista2',5,'p_lista2','AnalizadorSintactico.py',68),
  ('lista2 -> typevar COMMA LPAREN lista RPAREN COMMA lista2','lista2',7,'p_lista2','AnalizadorSintactico.py',69),
  ('lista2 -> typevar COMMA LBRACKET lista RBRACKET COMMA lista2','lista2',7,'p_lista2','AnalizadorSintactico.py',70),
  ('lista2 -> typevar COMMA typevar','lista2',3,'p_lista2','AnalizadorSintactico.py',71),
  ('lista2 -> typevar COMMA LPAREN lista RPAREN','lista2',5,'p_lista2','AnalizadorSintactico.py',72),
  ('lista2 -> typevar COMMA LBRACKET lista RBRACKET','lista2',5,'p_lista2','AnalizadorSintactico.py',73),
  ('lista2 -> ID COMMA typevar COMMA lista2','lista2',5,'p_lista2','AnalizadorSintactico.py',74),
  ('lista2 -> ID COMMA LPAREN lista RPAREN COMMA lista2','lista2',7,'p_lista2','AnalizadorSintactico.py',75),
  ('lista2 -> ID COMMA LBRACKET lista RBRACKET COMMA lista2','lista2',7,'p_lista2','AnalizadorSintactico.py',76),
  ('lista2 -> ID COMMA typevar','lista2',3,'p_lista2','AnalizadorSintactico.py',77),
  ('lista2 -> ID COMMA LPAREN lista RPAREN','lista2',5,'p_lista2','AnalizadorSintactico.py',78),
  ('lista2 -> ID COMMA LBRACKET lista RBRACKET','lista2',5,'p_lista2','AnalizadorSintactico.py',79),
  ('lista1 -> typevar EQUALGREATER typevar COMMA lista1','lista1',5,'p_lista1','AnalizadorSintactico.py',83),
  ('lista1 -> typevar EQUALGREATER LPAREN lista RPAREN COMMA lista1','lista1',7,'p_lista1','AnalizadorSintactico.py',84),
  ('lista1 -> typevar EQUALGREATER LBRACKET lista RBRACKET COMMA lista1','lista1',7,'p_lista1','AnalizadorSintactico.py',85),
  ('lista1 -> typevar EQUALGREATER typevar','lista1',3,'p_lista1','AnalizadorSintactico.py',86),
  ('lista1 -> typevar EQUALGREATER LPAREN lista RPAREN','lista1',5,'p_lista1','AnalizadorSintactico.py',87),
  ('lista1 -> typevar EQUALGREATER LBRACKET lista RBRACKET','lista1',5,'p_lista1','AnalizadorSintactico.py',88),
  ('lista1 -> ID EQUALGREATER typevar COMMA lista1','lista1',5,'p_lista1','AnalizadorSintactico.py',89),
  ('lista1 -> ID EQUALGREATER LPAREN lista RPAREN COMMA lista1','lista1',7,'p_lista1','AnalizadorSintactico.py',90),
  ('lista1 -> ID EQUALGREATER LBRACKET lista RBRACKET COMMA lista1','lista1',7,'p_lista1','AnalizadorSintactico.py',91),
  ('lista1 -> ID EQUALGREATER typevar','lista1',3,'p_lista1','AnalizadorSintactico.py',92),
  ('lista1 -> ID EQUALGREATER LPAREN lista RPAREN','lista1',5,'p_lista1','AnalizadorSintactico.py',93),
  ('lista1 -> ID EQUALGREATER LBRACKET lista RBRACKET','lista1',5,'p_lista1','AnalizadorSintactico.py',94),
  ('lista -> typevar COMMA lista','lista',3,'p_lista','AnalizadorSintactico.py',98),
  ('lista -> typevar','lista',1,'p_lista','AnalizadorSintactico.py',99),
  ('typevar -> CADENA','typevar',1,'p_typevar','AnalizadorSintactico.py',103),
  ('typevar -> CADENAA','typevar',1,'p_typevar','AnalizadorSintactico.py',104),
  ('typevar -> ENTERO','typevar',1,'p_typevar','AnalizadorSintactico.py',105),
  ('typevar -> OCTAL','typevar',1,'p_typevar','AnalizadorSintactico.py',106),
  ('typevar -> HEXADECIMAL','typevar',1,'p_typevar','AnalizadorSintactico.py',107),
  ('E -> E PLUS T','E',3,'p_E','AnalizadorSintactico.py',113),
  ('E -> E MINUS T','E',3,'p_E','AnalizadorSintactico.py',114),
  ('E -> T','E',1,'p_E','AnalizadorSintactico.py',115),
  ('T -> T TIMES F','T',3,'p_T','AnalizadorSintactico.py',119),
  ('T -> T DIVIDE F','T',3,'p_T','AnalizadorSintactico.py',120),
  ('T -> F','T',1,'p_T','AnalizadorSintactico.py',121),
  ('F -> PESOS ID','F',2,'p_F','AnalizadorSintactico.py',125),
  ('F -> PESOS ID LBRACKET ENTERO RBRACKET','F',5,'p_F','AnalizadorSintactico.py',126),
  ('F -> ENTERO','F',1,'p_F','AnalizadorSintactico.py',127),
  ('F -> PESOS ID LBLOCK typevar RBLOCK','F',5,'p_F','AnalizadorSintactico.py',128),
  ('F -> LPAREN E RPAREN','F',3,'p_F','AnalizadorSintactico.py',129),
  ('ciclos -> FOR LPAREN sent_for SEMICOLON cond SEMICOLON PESOS ID incdec RPAREN LBLOCK declaration_list RBLOCK','ciclos',13,'p_ciclos','AnalizadorSintactico.py',135),
  ('ciclos -> FOREACH PESOS ID LPAREN ARROBA ID RPAREN LBLOCK declaration_list RBLOCK','ciclos',10,'p_ciclos','AnalizadorSintactico.py',136),
  ('ciclos -> WHILE LPAREN cond RPAREN LBLOCK declaration_list RBLOCK','ciclos',7,'p_ciclos','AnalizadorSintactico.py',137),
  ('sent_for -> PESOS ID','sent_for',2,'p_sent_for','AnalizadorSintactico.py',141),
  ('sent_for -> PESOS ID EQUAL ENTERO','sent_for',4,'p_sent_for','AnalizadorSintactico.py',142),
  ('sent_for -> MY PESOS ID EQUAL ENTERO','sent_for',5,'p_sent_for','AnalizadorSintactico.py',143),
  ('sent_for -> MY PESOS ID EQUAL ENTERO COMMA sent_for','sent_for',7,'p_sent_for','AnalizadorSintactico.py',144),
  ('sent_for -> PESOS ID EQUAL ENTERO COMMA sent_for','sent_for',6,'p_sent_for','AnalizadorSintactico.py',145),
  ('log -> LESS','log',1,'p_log','AnalizadorSintactico.py',151),
  ('log -> GREATER','log',1,'p_log','AnalizadorSintactico.py',152),
  ('log -> ISEQUAL','log',1,'p_log','AnalizadorSintactico.py',153),
  ('log -> LESSEQUAL','log',1,'p_log','AnalizadorSintactico.py',154),
  ('log -> GREATEREQUAL','log',1,'p_log','AnalizadorSintactico.py',155),
  ('log -> DEQUAL','log',1,'p_log','AnalizadorSintactico.py',156),
  ('log -> AND','log',1,'p_log','AnalizadorSintactico.py',157),
  ('log -> ANDS','log',1,'p_log','AnalizadorSintactico.py',158),
  ('log -> ORS','log',1,'p_log','AnalizadorSintactico.py',159),
  ('log -> OR','log',1,'p_log','AnalizadorSintactico.py',160),
  ('type -> typevar','type',1,'p_type','AnalizadorSintactico.py',164),
  ('type -> var_declaration_gen','type',1,'p_type','AnalizadorSintactico.py',165),
  ('cond -> type','cond',1,'p_cond','AnalizadorSintactico.py',169),
  ('cond -> cond log cond','cond',3,'p_cond','AnalizadorSintactico.py',170),
  ('cond -> NOT cond','cond',2,'p_cond','AnalizadorSintactico.py',171),
  ('cond -> LPAREN type RPAREN','cond',3,'p_cond','AnalizadorSintactico.py',172),
  ('cond -> LPAREN cond RPAREN','cond',3,'p_cond','AnalizadorSintactico.py',173),
  ('incdec -> PLUSPLUS','incdec',1,'p_incdec','AnalizadorSintactico.py',179),
  ('incdec -> MINUSMINUS','incdec',1,'p_incdec','AnalizadorSintactico.py',180),
  ('print -> PRINT arg SEMICOLON','print',3,'p_print','AnalizadorSintactico.py',186),
  ('print -> PRINT LPAREN arg RPAREN SEMICOLON','print',5,'p_print','AnalizadorSintactico.py',187),
  ('var_declaration_gen -> PESOS ID','var_declaration_gen',2,'p_var_declaration_gen','AnalizadorSintactico.py',193),
  ('var_declaration_gen -> PESOS ID LBRACKET ENTERO RBRACKET','var_declaration_gen',5,'p_var_declaration_gen','AnalizadorSintactico.py',194),
  ('var_declaration_gen -> PESOS ID LBLOCK typevar RBLOCK','var_declaration_gen',5,'p_var_declaration_gen','AnalizadorSintactico.py',195),
  ('var_declaration_gen -> PESOS ID LBLOCK ID RBLOCK','var_declaration_gen',5,'p_var_declaration_gen','AnalizadorSintactico.py',196),
  ('arg -> var_declaration_gen','arg',1,'p_arg','AnalizadorSintactico.py',200),
  ('arg -> type','arg',1,'p_arg','AnalizadorSintactico.py',201),
  ('arg -> type COMMA arg','arg',3,'p_arg','AnalizadorSintactico.py',202),
  ('arg -> CADENA','arg',1,'p_arg','AnalizadorSintactico.py',203),
  ('arg -> var_declaration_gen COMMA arg','arg',3,'p_arg','AnalizadorSintactico.py',204),
  ('arg -> CADENA COMMA arg','arg',3,'p_arg','AnalizadorSintactico.py',205),
  ('sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK','sentencia_if',7,'p_sentencia_if','AnalizadorSintactico.py',211),
  ('sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSE LBLOCK declaration_list RBLOCK','sentencia_if',11,'p_sentencia_if','AnalizadorSintactico.py',212),
  ('sentencia_if -> IF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK ELSIF LPAREN cond RPAREN LBLOCK declaration_list RBLOCK','sentencia_if',14,'p_sentencia_if','AnalizadorSintactico.py',213),
  ('function_declaration -> SUB ID LBLOCK declaration_list RBLOCK','function_declaration',5,'p_function_declaration','AnalizadorSintactico.py',220),
  ('call_function -> ANDBW ID','call_function',2,'p_call_function','AnalizadorSintactico.py',224),
  ('call_function -> ANDBW ID LPAREN arg RPAREN','call_function',5,'p_call_function','AnalizadorSintactico.py',225),
]
